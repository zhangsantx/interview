{"version":"2.3.9","fields":["title","content","keywords"],"fieldVectors":[["title/0",[0,477.94,1,362.362,2,362.362]],["content/0",[0,2.481,1,3.292,2,3.292,3,2.802,4,2.802,5,2.112,6,1.791,7,2.802,8,1.074,9,2.802,10,2.481,11,1.58,12,2.802,13,2.481,14,14.638,15,15.452,16,14.638,17,14.638,18,14.638,19,12.64,20,12.64,21,12.64,22,12.64,23,12.64,24,12.64,25,12.64,26,12.64,27,12.64,28,12.64,29,12.64,30,12.64,31,12.64]],["keywords/0",[]],["title/1",[1,362.362,2,362.362,32,477.94]],["content/1",[1,9.923,2,9.923,5,8.933,8,4.543,32,10.494,33,10.494,34,8.4,35,10.494,36,10.494,37,10.494,38,11.851,39,10.494,40,10.494,41,8.4,42,11.851,43,11.851,44,11.851,45,11.851,46,11.851,47,11.851,48,11.851,49,11.851,50,11.851]],["keywords/1",[]],["title/2",[51,944.265]],["content/2",[1,11.907,2,9.715,5,7.148,33,8.397,34,9.065,35,8.397,36,8.397,37,8.397,39,8.397,52,7.682,53,9.482,54,6.721,55,9.482,56,12.788,57,11.324,58,9.482,59,9.482,60,7.682,61,9.482,62,9.482,63,9.482,64,9.482,65,9.482,66,12.788,67,12.788,68,9.482,69,9.482,70,9.482,71,9.482,72,9.482,73,9.482,74,9.482,75,9.482,76,9.482,77,9.482,78,7.148,79,4.977,80,8.397]],["keywords/2",[]],["title/3",[81,603.675]],["content/3",[81,9.347,82,11.845,83,14.621]],["keywords/3",[]],["title/4",[81,439.114,84,686.859]],["content/4",[]],["keywords/4",[]],["title/5",[85,686.859,86,486.857]],["content/5",[34,9.841,41,9.841,86,9.841,87,6.067,88,9.841,89,13.883,90,13.883,91,13.883]],["keywords/5",[]],["title/6",[92,608.226,93,556.432]],["content/6",[94,15.982,95,13.475,96,13.475,97,13.475,98,11.933,99,13.475,100,13.475,101,13.475,102,13.475,103,11.933]],["keywords/6",[]],["title/7",[87,235.842,88,382.569,104,477.94]],["content/7",[5,8.16,34,9.892,60,8.77,87,4.73,88,7.673,93,8.77,98,9.586,103,9.586,104,9.586,105,15.444,106,13.956,107,9.586,108,10.825,109,11.306,110,14.447,111,8.16,112,10.825,113,10.825,114,9.586,115,10.825,116,10.825,117,10.825,118,12.358,119,10.825,120,10.825,121,10.825,122,10.825]],["keywords/7",[]],["title/8",[86,486.857,88,486.857]],["content/8",[13,8.759,34,7.011,41,7.011,57,8.759,86,9.325,88,9.325,92,8.759,93,8.013,107,8.759,109,11.974,110,11.649,111,9.916,114,11.649,118,8.759,123,13.155,124,13.155,125,13.155,126,13.155,127,9.891,128,13.155,129,9.891,130,9.891,131,9.891,132,9.891,133,9.891,134,8.759,135,9.891,136,9.891,137,9.891,138,9.891,139,9.891,140,9.891,141,9.891,142,9.891,143,9.891,144,9.891]],["keywords/8",[]],["title/9",[145,669.31]],["content/9",[145,10.475,146,11.972]],["keywords/9",[]],["title/10",[145,669.31]],["content/10",[145,10.475,146,11.972]],["keywords/10",[]],["title/11",[81,603.675]],["content/11",[81,9.347,82,11.845,147,14.621]],["keywords/11",[]],["title/12",[148,944.265]],["content/12",[]],["keywords/12",[]],["title/13",[149,444.512,150,393.623,151,393.623,152,393.623]],["content/13",[41,5.602,52,6.402,109,6.402,111,8.495,134,6.998,153,6.998,154,7.903,155,6.998,156,6.998,157,9.979,158,12.68,159,4.295,160,7.903,161,7.903,162,7.903,163,7.903,164,4.621,165,6.998,166,6.998,167,7.903,168,7.903,169,6.998,170,9.979,171,6.355,172,6.998,173,6.998,174,6.998,175,9.979,176,9.979,177,6.998,178,5.602,179,11.631,180,5.213,181,9.979,182,6.998,183,9.979,184,6.998,185,6.998,186,6.998,187,6.998,188,6.998,189,9.979,190,6.998,191,6.998,192,7.903,193,6.998]],["keywords/13",[]],["title/14",[150,393.623,151,393.623,152,393.623,194,444.512]],["content/14",[8,3.401,40,9.612,41,4.062,52,4.642,54,4.062,80,5.075,86,4.062,111,4.32,153,5.075,155,13.34,156,5.075,157,9.612,158,7.856,159,3.115,164,4.5,165,5.075,166,5.075,169,5.075,170,7.856,171,5.003,172,5.075,173,5.075,174,5.075,175,9.612,176,9.612,177,5.075,178,4.062,179,9.612,180,5.654,181,7.856,182,5.075,183,7.856,184,5.075,185,5.075,186,5.075,187,5.075,188,7.856,189,9.612,190,5.075,191,5.075,193,5.075,195,8.872,196,5.731,197,8.872,198,13.98,199,5.731,200,5.731,201,5.731,202,5.731,203,5.731,204,5.731,205,5.731,206,5.731,207,5.731,208,5.731,209,5.731,210,3.503,211,5.731,212,2.311,213,5.731,214,5.731,215,5.731,216,5.731,217,5.731,218,12.221,219,5.731,220,5.731,221,5.731,222,5.731,223,5.731,224,5.731,225,5.731,226,5.731,227,5.731,228,5.731,229,5.731,230,10.855,231,5.731,232,5.731,233,8.872,234,5.731,235,5.731]],["keywords/14",[]],["title/15",[236,944.265]],["content/15",[]],["keywords/15",[]],["title/16",[237,944.265]],["content/16",[238,13.345,239,13.345,240,13.345,241,13.345,242,13.345,243,13.345,244,13.345,245,10.059,246,13.345,247,13.345,248,13.345,249,13.345]],["keywords/16",[]],["title/17",[250,944.265]],["content/17",[251,14.025,252,16.362,253,14.025,254,14.025,255,14.025,256,14.025]],["keywords/17",[]],["title/18",[257,944.265]],["content/18",[258,14.467,259,14.467,260,14.467,261,14.467]],["keywords/18",[]],["title/19",[262,944.265]],["content/19",[164,3.587,263,14.317,264,10.792,265,14.317,266,14.317]],["keywords/19",[]],["title/20",[264,711.776]],["content/20",[267,14.467,268,14.467,269,14.467,270,14.467]],["keywords/20",[]],["title/21",[271,944.265]],["content/21",[272,13.091,273,13.091,274,13.091,275,13.091,276,13.091,277,13.091,278,13.091,279,13.091,280,13.091,281,13.091,282,13.091,283,13.091,284,13.091,285,13.091]],["keywords/21",[]],["title/22",[286,944.265]],["content/22",[264,11.021,287,14.621,288,14.621]],["keywords/22",[]],["title/23",[289,944.265]],["content/23",[290,14.778,291,14.778]],["keywords/23",[]],["title/24",[292,944.265]],["content/24",[293,13.745,294,13.745,295,13.745,296,13.745,297,13.745,298,13.745,299,13.745,300,13.745,301,13.745]],["keywords/24",[]],["title/25",[302,944.265]],["content/25",[303,13.217,304,13.217,305,13.217,306,13.217,307,13.217,308,13.217,309,13.217,310,13.217,311,13.217,312,13.217,313,13.217,314,13.217,315,13.217]],["keywords/25",[]],["title/26",[1,362.362,2,362.362,316,406.842]],["content/26",[14,13.159,15,14.319,16,13.159,17,13.159,18,13.159,19,10.585,20,10.585,21,10.585,22,10.585,23,10.585,24,10.585,25,10.585,26,10.585,27,10.585,28,10.585,29,10.585,30,10.585,31,10.585]],["keywords/26",[]],["title/27",[317,836.164]],["content/27",[317,12.419,318,14.025,319,14.025,320,14.025,321,14.025,322,6.894,323,14.025]],["keywords/27",[]],["title/28",[324,944.265]],["content/28",[]],["keywords/28",[]],["title/29",[325,836.164]],["content/29",[326,12.846,327,12.846,328,12.846,329,11.376,330,12.846,331,11.376,332,12.846,333,12.846,334,10.427,335,12.846,336,8.758,337,12.846,338,12.846,339,12.846]],["keywords/29",[]],["title/30",[340,944.265]],["content/30",[341,13.345,342,13.345,343,12.79,344,13.345,345,13.345,346,13.345,347,10.059,348,10.811,349,13.345,350,11.817]],["keywords/30",[]],["title/31",[351,944.265]],["content/31",[]],["keywords/31",[]],["title/32",[352,944.265]],["content/32",[353,13.217,354,13.217,355,13.217,356,13.217,357,13.217,358,13.217,359,13.217,360,13.217,361,13.217,362,8.449,363,13.217,364,13.217,365,13.217]],["keywords/32",[]],["title/33",[366,577.188]],["content/33",[8,5.158,11,5.772,78,3.942,79,5.372,87,2.285,164,4.681,180,2.419,212,5.427,334,9.034,336,7.588,367,5.23,368,4.237,369,4.631,370,2.949,371,7.716,372,3.197,373,5.545,374,8.259,375,5.23,376,5.23,377,8.259,378,5.23,379,10.236,380,6.691,381,5.23,382,4.237,383,5.23,384,8.259,385,7.314,386,5.23,387,5.23,388,7.314,389,8.259,390,4.237,391,5.23,392,5.23,393,5.23,394,6.691,395,5.23,396,8.563,397,3.343,398,5.23,399,8.259,400,5.23,401,8.973,402,5.23,403,11.627,404,8.259,405,3.511,406,4.631,407,8.259,408,8.259,409,5.23,410,3.197,411,5.23,412,3.707,413,5.23,414,5.23,415,5.23,416,5.23,417,5.23,418,5.23,419,5.23,420,2.35]],["keywords/33",[]],["title/34",[421,944.265]],["content/34",[]],["keywords/34",[]],["title/35",[422,944.265]],["content/35",[316,10.85,423,11.361,424,11.361,425,11.361,426,11.66,427,11.361,428,11.361,429,11.361,430,11.361,431,11.361,432,11.361,433,11.361,434,11.361,435,11.361,436,10.061,437,11.361,438,11.361,439,11.361,440,11.361,441,11.361,442,11.361,443,11.361,444,11.361,445,9.204,446,10.061,447,9.204,448,11.361,449,11.361]],["keywords/35",[]],["title/36",[450,944.265]],["content/36",[451,14.621,452,12.947,453,14.621]],["keywords/36",[]],["title/37",[454,944.265]],["content/37",[]],["keywords/37",[]],["title/38",[455,944.265]],["content/38",[362,8.29,371,9.775,456,11.483,457,12.968,458,12.968,459,12.968,460,11.483,461,11.483,462,12.968,463,12.968,464,8.706,465,9.192,466,12.968,467,9.775,468,12.968]],["keywords/38",[]],["title/39",[366,577.188]],["content/39",[8,5.518,11,6.408,79,3.237,87,2.695,159,3.352,164,4.687,180,2.853,212,5.511,370,3.478,372,3.77,373,6.302,396,8.775,405,6.302,420,2.772,469,9.205,470,9.386,471,6.167,472,5.461,473,9.205,474,6.167,475,6.167,476,8.565,477,6.167,478,6.167,479,7.629,480,5.461,481,7.604,482,2.772,483,5.461,484,8.054,485,6.167,486,6.946,487,4.141,488,6.653,489,5.461,490,6.167,491,6.167,492,6.167,493,6.167,494,9.386,495,5.461,496,5.461,497,8.312,498,8.312,499,8.312,500,6.167,501,6.001,502,6.167,503,6.167,504,6.167]],["keywords/39",[]],["title/40",[505,944.265]],["content/40",[6,4.31,8,3.848,87,2.946,164,4.625,178,4.778,180,6.57,212,2.719,331,5.97,396,5.885,406,8.888,469,9.713,473,5.461,482,3.03,499,5.97,506,6.741,507,6.741,508,6.741,509,14.595,510,6.741,511,6.741,512,6.741,513,6.741,514,5.97,515,5.97,516,6.741,517,10.037,518,6.741,519,6.741,520,6.741,521,6.741,522,5.499,523,6.741,524,6.741,525,6.741,526,6.741,527,6.741,528,6.741,529,6.741,530,6.741,531,6.741,532,6.741,533,6.741,534,6.741,535,6.741,536,6.741,537,6.741,538,6.741,539,6.741,540,6.741,541,6.741,542,6.741,543,6.741,544,6.741,545,6.741,546,6.741,547,6.741,548,5.97,549,6.741,550,3.953,551,6.741,552,6.741,553,6.741]],["keywords/40",[]],["title/41",[554,944.265]],["content/41",[]],["keywords/41",[]],["title/42",[555,944.265]],["content/42",[476,8.857,556,11.75,557,11.75,558,11.75,559,11.75,560,11.75,561,11.75,562,11.75,563,11.75,564,11.75,565,14.208,566,11.75,567,11.75,568,10.404,569,11.75,570,8.328,571,11.75,572,11.75,573,11.75,574,11.75,575,11.75,576,10.404,577,11.75,578,11.75]],["keywords/42",[]],["title/43",[579,944.265]],["content/43",[164,3.344,347,7.62,476,7.62,482,4.543,565,11.819,568,8.952,580,10.109,581,10.109,582,10.109,583,10.109,584,10.109,585,10.109,586,10.109,587,10.109,588,15.891,589,10.109,590,10.109,591,10.109,592,13.346,593,10.109,594,10.109,595,10.109,596,10.109,597,10.109,598,10.109,599,10.109,600,10.109,601,10.109,602,10.109,603,10.109,604,10.109,605,10.109,606,10.109,607,10.109,608,10.109,609,10.109,610,10.109,611,10.109,612,10.109]],["keywords/43",[]],["title/44",[613,944.265]],["content/44",[6,3.882,8,3.975,11,5.231,60,6.391,79,3.187,87,2.653,159,1.952,164,4.671,171,3.424,180,2.809,212,4.182,322,1.766,366,2.195,368,2.91,370,3.424,372,2.195,373,2.411,396,6.599,401,6.575,405,2.411,410,2.195,436,3.18,456,5.377,460,8.214,469,9.118,473,7.514,476,5.946,479,6.228,480,3.18,481,2.91,482,2.729,483,3.18,484,6.575,486,4.822,487,2.411,488,6.575,489,5.377,495,3.18,496,5.377,497,3.18,498,5.377,515,3.18,614,3.592,615,3.592,616,3.592,617,3.592,618,3.592,619,3.592,620,14.308,621,3.18,622,14.613,623,3.592,624,10.63,625,3.592,626,3.592,627,3.592,628,7.889,629,3.18,630,3.18,631,3.592,632,5.377,633,3.592,634,3.592,635,3.592,636,3.592,637,3.592,638,6.072,639,3.592,640,3.592,641,3.592,642,3.592,643,3.592,644,3.592,645,3.592,646,3.592,647,3.592,648,3.592,649,9.276,650,3.592,651,3.592,652,3.592,653,3.18,654,3.18,655,3.592,656,3.592,657,3.592,658,3.592,659,3.592,660,6.228,661,3.592,662,4.077,663,3.592,664,6.992,665,3.592,666,6.072,667,6.072,668,6.072,669,3.592,670,6.072,671,3.592,672,3.592,673,3.592,674,2.106,675,2.106]],["keywords/44",[]],["title/45",[676,944.265]],["content/45",[]],["keywords/45",[]],["title/46",[677,836.164]],["content/46",[]],["keywords/46",[]],["title/47",[678,944.265]],["content/47",[316,8.635,426,9.281,445,9.281,446,10.145,447,9.281,677,10.145,679,11.456,680,11.456,681,11.456,682,11.456,683,10.145,684,10.145,685,11.456,686,10.145,687,11.456,688,11.456,689,11.456,690,11.456,691,11.456,692,11.456,693,11.456,694,11.456,695,11.456,696,11.456,697,11.456,698,11.456,699,11.456,700,11.456,701,11.456]],["keywords/47",[]],["title/48",[702,944.265]],["content/48",[159,8.522,501,7.145,674,8.352,703,11.177,704,11.177,705,11.177,706,14.245,707,11.177,708,11.177,709,11.177,710,11.177,711,11.177,712,11.177,713,11.177,714,11.177,715,14.245,716,14.245,717,11.177,718,11.177,719,11.177,720,11.177,721,11.177,722,11.177,723,11.177,724,11.177,725,11.177]],["keywords/48",[]],["title/49",[726,944.265]],["content/49",[316,8.564,322,5.585,420,5.106,426,9.204,683,10.061,684,10.061,727,11.361,728,11.361,729,11.361,730,11.361,731,11.361,732,14.394,733,11.361,734,11.361,735,15.799,736,11.361,737,11.361,738,11.361,739,11.361,740,11.361,741,14.394,742,11.361,743,11.361,744,11.361,745,11.361,746,11.361]],["keywords/49",[]],["title/50",[747,711.776]],["content/50",[8,5.881,164,2.051,322,7.151,420,6.538,522,6.351,550,8.529,748,8.185,749,10.179,750,8.185,751,8.185,752,8.185,753,8.185,754,8.185,755,8.995,756,8.185,757,8.185,758,8.185,759,8.185,760,8.185,761,8.185,762,13.39,763,8.185,764,11.553,765,8.185,766,8.185,767,8.185,768,8.185,769,8.185,770,8.185,771,8.185,772,8.185,773,11.553,774,8.185,775,8.185,776,8.185,777,8.185,778,8.185,779,8.185,780,8.185,781,8.185,782,8.185,783,8.185,784,8.185,785,8.185,786,8.185,787,8.185,788,8.185]],["keywords/50",[]],["title/51",[789,944.265]],["content/51",[164,3.587,790,14.317,791,14.317,792,14.317,793,14.317]],["keywords/51",[]],["title/52",[794,944.265]],["content/52",[362,8.615,464,9.047,465,9.552,467,10.158,795,11.933,796,13.475,797,13.475,798,13.475,799,13.475,800,13.475,801,13.475]],["keywords/52",[]],["title/53",[366,577.188]],["content/53",[8,5.586,11,6.534,79,3.342,164,4.697,212,5.589,322,4.727,370,3.59,371,4.799,372,3.892,373,6.456,396,8.871,405,6.456,420,5.802,461,10.26,472,5.638,479,7.779,481,7.79,482,2.861,484,8.213,486,7.082,487,4.275,488,6.816,522,4.796,686,10.26,795,5.638,802,6.367,803,9.616,804,6.367,805,6.367,806,6.367,807,6.367,808,6.367,809,6.367,810,6.367,811,6.367,812,6.367,813,6.367,814,6.367,815,6.367,816,6.367,817,6.367,818,6.367,819,6.367,820,6.367]],["keywords/53",[]],["title/54",[821,944.265]],["content/54",[8,5.414,87,5.412,164,4.66,178,6.412,180,4.185,212,3.648,371,6.819,396,5.304,420,5.566,482,4.065,487,6.073,514,8.01,822,9.046,823,9.046,824,9.046,825,9.046,826,9.046,827,9.046,828,12.385,829,9.046,830,9.046,831,9.046,832,9.046,833,9.046,834,14.123,835,9.046,836,9.046,837,9.046,838,9.046,839,9.046,840,9.046,841,9.046,842,9.046,843,9.046]],["keywords/54",[]],["title/55",[145,669.31]],["content/55",[]],["keywords/55",[]],["title/56",[844,944.265]],["content/56",[146,12.102]],["keywords/56",[]],["title/57",[81,603.675]],["content/57",[81,9.347,82,11.845,845,14.621]],["keywords/57",[]],["title/58",[846,944.265]],["content/58",[]],["keywords/58",[]],["title/59",[847,944.265]],["content/59",[8,4.582,164,2.995,675,7.009,848,11.954,849,11.954,850,11.954,851,11.954,852,11.954,853,11.954,854,11.954,855,11.954,856,11.954,857,11.954,858,11.954,859,11.954,860,11.954,861,11.954,862,11.954,863,11.954,864,11.954,865,11.954,866,11.954,867,11.954,868,11.954]],["keywords/59",[]],["title/60",[869,944.265]],["content/60",[8,5.682,322,5.851,420,3.838,482,7.809,522,6.992,550,5.008,749,5.46,755,8.034,870,8.541,871,8.541,872,8.541,873,8.541,874,8.541,875,8.541,876,8.541,877,8.541,878,8.541,879,8.541,880,8.541,881,8.541,882,8.541,883,11.903,884,8.541,885,8.541,886,8.541,887,8.541,888,8.541,889,8.541,890,8.541,891,7.992,892,8.541,893,8.541,894,8.541,895,8.541,896,8.541,897,8.541,898,8.541,899,8.541,900,8.541,901,8.541,902,8.541,903,8.541,904,8.541,905,8.541,906,8.541,907,8.541]],["keywords/60",[]],["title/61",[908,944.265]],["content/61",[482,6.116,522,5.633,550,7.979,891,9.137,909,13.609,910,13.609,911,13.609,912,13.609,913,13.609,914,13.609]],["keywords/61",[]],["title/62",[915,944.265]],["content/62",[916,14.467,917,14.467,918,14.467,919,14.467]],["keywords/62",[]],["title/63",[920,944.265]],["content/63",[]],["keywords/63",[]],["title/64",[921,944.265]],["content/64",[164,3.514,922,14.025,923,14.025,924,14.025,925,14.025,926,14.025,927,14.025]],["keywords/64",[]],["title/65",[928,944.265]],["content/65",[8,5.489,159,7.782,164,2.823,482,5.064,522,5.927,929,11.268,930,11.268,931,11.268,932,11.268,933,11.268,934,11.268,935,11.268,936,11.268,937,11.268,938,11.268,939,11.268,940,11.268,941,11.268,942,11.268,943,11.268,944,11.268,945,11.268,946,11.268,947,11.268,948,11.268,949,11.268,950,11.268,951,11.268]],["keywords/65",[]],["title/66",[952,944.265]],["content/66",[]],["keywords/66",[]],["title/67",[953,944.265]],["content/67",[164,3.28,954,11.592,955,13.091,956,13.091,957,13.091,958,13.091,959,13.091,960,11.592,961,11.592,962,11.592,963,11.592,964,11.592,965,11.592,966,11.592]],["keywords/67",[]],["title/68",[967,944.265]],["content/68",[164,3.219,954,11.376,960,13.753,961,13.753,962,11.376,963,11.376,964,11.376,965,11.376,966,11.376,968,12.846,969,12.846,970,12.846,971,15.531]],["keywords/68",[]],["title/69",[747,711.776]],["content/69",[159,9.288,164,2.903,501,11.105,674,10.255,675,9.527,972,9.616,973,11.586,974,6.367,975,12.755,976,6.367,977,6.367,978,11.805,979,12.257,980,11.586,981,6.367,982,6.367,983,6.367,984,9.616,985,6.367,986,6.367,987,6.367,988,6.367,989,6.367,990,6.367,991,6.367,992,6.367,993,6.367,994,6.367,995,6.367,996,6.367,997,6.367,998,6.367,999,6.367,1000,6.367,1001,6.367,1002,6.367,1003,6.367,1004,6.367,1005,6.367,1006,6.367,1007,6.367]],["keywords/69",[]],["title/70",[1008,764.959]],["content/70",[]],["keywords/70",[]],["title/71",[1009,944.265]],["content/71",[334,8.096,1010,12.058,1011,12.058,1012,12.058,1013,12.058,1014,10.678,1015,12.058,1016,12.058,1017,10.678,1018,12.058,1019,12.058,1020,12.058,1021,12.058,1022,12.058,1023,12.058,1024,12.058,1025,12.058,1026,10.678,1027,12.058,1028,12.058,1029,12.058,1030,12.058,1031,12.058]],["keywords/71",[]],["title/72",[1032,944.265]],["content/72",[164,4.601,171,6.683,322,4.172,329,7.516,522,4.906,550,4.977,664,8.934,749,5.426,755,4.977,1033,8.488,1034,8.488,1035,8.488,1036,8.488,1037,8.488,1038,8.488,1039,8.488,1040,8.488,1041,8.488,1042,7.516,1043,11.852,1044,8.488,1045,8.488,1046,8.488,1047,8.488,1048,8.488,1049,8.488,1050,8.488,1051,8.488,1052,8.488,1053,8.488,1054,8.488,1055,8.488,1056,8.488,1057,8.488,1058,8.488,1059,8.488,1060,8.488,1061,11.852,1062,7.516,1063,8.488,1064,8.488,1065,8.488,1066,8.488,1067,8.488,1068,8.488,1069,8.488,1070,8.488,1071,8.488]],["keywords/72",[]],["title/73",[1072,944.265]],["content/73",[1008,11.479,1073,14.169,1074,14.169,1075,12.547,1076,14.169,1077,14.169]],["keywords/73",[]],["title/74",[1078,944.265]],["content/74",[1079,14.778,1080,14.778]],["keywords/74",[]],["title/75",[1081,944.265]],["content/75",[171,7.909,1082,14.025,1083,14.025,1084,14.025,1085,14.025,1086,14.025,1087,14.025]],["keywords/75",[]],["title/76",[1088,944.265]],["content/76",[164,3.697,171,3.711,322,3.235,334,6.618,343,4.96,347,4.96,348,5.331,482,2.957,522,4.08,755,3.858,1089,6.58,1090,6.58,1091,6.58,1092,9.857,1093,6.58,1094,10.843,1095,10.466,1096,6.58,1097,6.58,1098,6.58,1099,6.58,1100,5.331,1101,6.58,1102,6.58,1103,6.58,1104,6.58,1105,6.58,1106,6.58,1107,6.58,1108,6.58,1109,6.58,1110,6.58,1111,6.58,1112,6.58,1113,6.58,1114,6.58,1115,6.58,1116,6.58,1117,6.58,1118,6.58,1119,6.58,1120,6.58,1121,3.858,1122,6.58,1123,6.58,1124,6.58,1125,6.58,1126,6.58,1127,6.58,1128,6.58,1129,6.58,1130,6.58,1131,6.58,1132,6.58,1133,6.58,1134,6.58,1135,6.58,1136,6.58,1137,6.58,1138,6.58,1139,9.857,1140,6.58,1141,6.58,1142,6.58,1143,6.58,1144,6.58,1145,6.58,1146,6.58,1147,6.58,1148,6.58,1149,6.58,1150,6.58,1151,6.58,1152,6.58,1153,6.58,1154,6.58,1155,6.58,1156,6.58,1157,6.58,1158,6.58,1159,9.857,1160,6.58,1161,6.58,1162,6.58,1163,6.58,1164,6.58,1165,6.58,1166,5.827,1167,6.58,1168,6.58,1169,6.58,1170,6.58,1171,6.58,1172,6.58,1173,6.58,1174,6.58,1175,6.58,1176,6.58,1177,6.58,1178,6.58]],["keywords/76",[]],["title/77",[1075,836.164]],["content/77",[1179,14.621,1180,14.621,1181,14.621]],["keywords/77",[]],["title/78",[1182,944.265]],["content/78",[245,9.335,1183,12.384,1184,12.384,1185,11.448,1186,12.384,1187,12.384,1188,12.384,1189,12.384,1190,12.384,1191,15.188,1192,13.449,1193,12.384,1194,12.384,1195,12.384,1196,12.384,1197,12.384,1198,12.384]],["keywords/78",[]],["title/79",[1199,944.265]],["content/79",[164,3.219,343,9.684,347,9.684,348,10.407,362,8.213,522,5.318,1200,12.846,1201,12.846,1202,12.846,1203,12.846,1204,12.846,1205,12.846,1206,11.707,1207,12.846,1208,12.846]],["keywords/79",[]],["title/80",[1209,944.265]],["content/80",[336,7.525,465,9.459,482,5.997,1210,11.817,1211,13.345,1212,13.345,1213,13.345,1214,13.345,1215,13.345,1216,10.811,1217,13.345,1218,13.345]],["keywords/80",[]],["title/81",[1219,944.265]],["content/81",[10,11.819,164,4.629,180,4.677,212,4.077,405,6.787,482,4.543,1026,15.554,1220,10.109,1221,10.109,1222,10.109,1223,6.463,1224,10.109,1225,13.346,1226,10.109,1227,10.109,1228,10.109,1229,10.109,1230,10.109,1231,10.109,1232,10.109,1233,10.109,1234,10.109]],["keywords/81",[]],["title/82",[1235,944.265]],["content/82",[6,6.168,8,3.838,11,1.433,79,2.361,164,4.691,178,1.801,180,5.536,212,5.147,334,7.717,336,5.836,370,1.433,372,1.553,380,3.645,385,3.984,388,5.362,410,1.553,412,1.801,420,4.499,479,1.706,482,4.16,509,8.865,522,3.465,550,0.796,660,0.912,674,1.49,1062,2.25,1100,6.375,1121,4.292,1166,1.203,1210,3.984,1223,5.031,1236,1.358,1237,1.358,1238,1.358,1239,1.358,1240,3.579,1241,8.37,1242,2.541,1243,11.737,1244,2.541,1245,12.182,1246,2.541,1247,1.358,1248,1.358,1249,1.358,1250,1.358,1251,1.358,1252,4.71,1253,3.579,1254,1.358,1255,1.358,1256,6.719,1257,1.358,1258,1.358,1259,14.397,1260,1.358,1261,1.358,1262,2.541,1263,2.541,1264,2.541,1265,2.541,1266,2.541,1267,6.055,1268,2.541,1269,2.541,1270,7.321,1271,2.541,1272,2.541,1273,2.541,1274,4.499,1275,9.255,1276,4.499,1277,2.541,1278,6.055,1279,2.541,1280,2.541,1281,4.499,1282,2.541,1283,2.541,1284,1.358,1285,2.541,1286,2.541,1287,2.541,1288,2.541,1289,2.541,1290,4.499,1291,4.499,1292,5.319,1293,4.499,1294,1.358,1295,2.541,1296,2.541,1297,2.541,1298,2.541,1299,2.25,1300,2.541,1301,2.541,1302,1.358,1303,2.541,1304,1.358,1305,1.358,1306,1.358,1307,1.358,1308,1.358,1309,1.358,1310,2.541,1311,2.541,1312,1.203,1313,1.358,1314,1.358,1315,2.058,1316,2.541,1317,2.541,1318,2.541,1319,2.541,1320,4.499,1321,2.541,1322,2.541,1323,4.499,1324,3.984,1325,5.319,1326,4.499,1327,1.203,1328,1.203,1329,1.358,1330,1.358,1331,1.358,1332,1.358,1333,1.358,1334,1.358,1335,1.358,1336,1.358,1337,1.358,1338,2.541,1339,3.579,1340,1.358,1341,1.358,1342,1.358,1343,1.358,1344,6.055,1345,1.358,1346,1.358,1347,1.358,1348,1.358,1349,1.358,1350,1.358,1351,1.358,1352,1.358,1353,1.358,1354,1.358,1355,1.358,1356,1.358,1357,1.358,1358,2.541,1359,2.541,1360,2.541,1361,2.541,1362,2.541,1363,2.541,1364,2.541,1365,2.541,1366,4.499,1367,2.541,1368,2.541,1369,1.358,1370,2.541,1371,1.358,1372,1.358,1373,1.358,1374,2.541,1375,1.358,1376,1.358,1377,1.358,1378,1.358,1379,1.358,1380,1.358,1381,1.358,1382,1.358,1383,2.541,1384,1.358,1385,4.499,1386,1.358,1387,1.358,1388,2.541,1389,1.358,1390,1.358,1391,1.358,1392,2.541,1393,1.358,1394,1.358,1395,1.358,1396,1.358,1397,1.358,1398,1.358,1399,1.358,1400,1.358,1401,1.358,1402,1.358,1403,1.358,1404,1.358,1405,1.1,1406,4.499,1407,2.541,1408,2.541,1409,1.358,1410,1.358,1411,1.358,1412,2.541,1413,1.358,1414,1.358,1415,1.358]],["keywords/82",[]],["title/83",[1416,944.265]],["content/83",[]],["keywords/83",[]],["title/84",[325,836.164]],["content/84",[1206,10.572,1417,14.025,1418,14.025,1419,14.025,1420,14.025,1421,14.025,1422,14.025]],["keywords/84",[]],["title/85",[1423,944.265]],["content/85",[343,10.681,397,10.523,1424,14.169,1425,14.169,1426,14.169]],["keywords/85",[]],["title/86",[1427,944.265]],["content/86",[362,8.615,464,9.047,1428,10.917,1429,13.475,1430,13.475,1431,13.475,1432,13.475,1433,13.475,1434,13.475,1435,13.475,1436,13.475]],["keywords/86",[]],["title/87",[1437,944.265]],["content/87",[8,5.556,11,6.057,54,3.995,78,4.249,79,6.885,87,2.463,164,4.662,180,2.608,212,5.6,336,8.869,370,3.179,372,3.446,373,5.88,382,4.566,390,4.566,394,8.702,396,8.497,397,6.868,405,5.88,410,5.354,412,3.995,420,2.533,464,3.784,1428,7.096,1438,4.991,1439,7.756,1440,4.991,1441,4.991,1442,4.991,1443,4.991,1444,7.756,1445,7.756,1446,7.756,1447,4.991,1448,4.991,1449,4.991,1450,4.991,1451,4.991,1452,4.991,1453,4.991,1454,8.759,1455,5.637,1456,5.637,1457,8.759,1458,7.756,1459,9.512,1460,5.637,1461,5.637,1462,8.759,1463,10.742,1464,5.637,1465,5.637,1466,5.637,1467,5.637,1468,8.759,1469,5.637]],["keywords/87",[]],["title/88",[1470,836.164]],["content/88",[1471,14.938]],["keywords/88",[]],["title/89",[1472,944.265]],["content/89",[54,7.734,87,4.768,164,4.612,212,4.4,336,7.91,397,6.975,1473,9.662,1474,9.662,1475,9.662,1476,8.225,1477,12.421,1478,9.662,1479,12.421,1480,7.734,1481,12.421,1482,9.662,1483,7.734,1484,9.662,1485,9.662,1486,9.662]],["keywords/89",[]],["title/90",[1487,944.265]],["content/90",[87,5.091,164,4.604,212,4.698,336,6.569,397,7.448,1476,8.782,1480,8.258,1483,8.258,1488,10.316,1489,10.316,1490,10.316,1491,12.949,1492,9.438,1493,8.782,1494,10.316,1495,8.782,1496,10.316]],["keywords/90",[]],["title/91",[1497,944.265]],["content/91",[87,5.091,164,4.604,212,4.698,336,6.569,397,7.448,1476,8.782,1480,8.258,1483,8.258,1492,9.438,1493,8.782,1495,8.782,1498,9.438,1499,10.316,1500,10.316,1501,12.949,1502,10.316,1503,10.316]],["keywords/91",[]],["title/92",[1504,944.265]],["content/92",[79,7.716,164,4.578,212,5.929,336,6.626,410,8.986,1480,8.328,1483,8.328,1493,8.857,1495,8.857,1505,10.404,1506,10.404,1507,10.404,1508,10.404,1509,10.404,1510,10.404]],["keywords/92",[]],["title/93",[1511,711.776]],["content/93",[11,4.249,54,3.305,78,3.515,79,6.712,87,4.144,164,4.709,212,6.129,336,9.006,368,3.777,369,4.129,370,2.629,372,2.85,373,5.059,382,3.777,390,3.777,394,6.105,397,6.963,410,5.797,464,3.13,1428,6.105,1438,4.129,1439,6.673,1440,4.129,1441,4.129,1442,4.129,1443,4.129,1444,6.673,1445,6.673,1446,6.673,1447,4.129,1448,4.129,1449,4.129,1450,4.129,1451,4.129,1452,4.129,1453,4.129,1470,4.129,1473,4.129,1474,4.129,1475,4.129,1476,7.149,1477,6.673,1478,4.129,1479,6.673,1480,7.72,1481,6.673,1482,4.129,1483,7.72,1484,4.129,1485,4.129,1486,4.129,1488,4.129,1489,4.129,1490,4.129,1491,6.673,1492,6.105,1493,7.149,1494,4.129,1495,7.149,1496,4.129,1498,3.777,1499,4.129,1500,4.129,1501,6.673,1502,4.129,1503,4.129,1505,4.129,1506,4.129,1507,4.129,1508,4.129,1509,4.129,1510,4.129]],["keywords/93",[]],["title/94",[1512,944.265]],["content/94",[]],["keywords/94",[]],["title/95",[1513,944.265]],["content/95",[87,4.115,159,8.394,164,2.36,522,3.898,674,8.454,675,5.522,1185,9.595,1498,7.629,1514,9.417,1515,9.417,1516,9.417,1517,9.417,1518,9.417,1519,9.417,1520,9.417,1521,9.417,1522,9.417,1523,7.629,1524,9.417,1525,9.417,1526,9.417,1527,9.417,1528,12.729,1529,14.419,1530,9.417,1531,9.417,1532,9.417,1533,9.417,1534,9.417,1535,9.417,1536,9.417,1537,9.417,1538,9.417,1539,9.417,1540,9.417,1541,9.417,1542,9.417,1543,9.417,1544,9.417,1545,9.417,1546,9.417,1547,9.417,1548,8.339,1549,9.417,1550,9.417,1551,8.339]],["keywords/95",[]],["title/96",[1552,944.265]],["content/96",[8,5.606,164,3.664,482,5.236,1008,9.438,1185,8.782,1553,10.316,1554,11.65,1555,9.438,1556,11.65,1557,11.65,1558,14.623,1559,11.65,1560,11.65,1561,11.65,1562,11.65,1563,11.65,1564,11.65,1565,11.65,1566,11.65,1567,11.65,1568,11.65,1569,11.65,1570,11.65,1571,11.65]],["keywords/96",[]],["title/97",[1572,944.265]],["content/97",[159,8.332,482,6.209,501,6.813,522,4.412,674,10.095,675,8.1,1573,10.657,1574,10.657,1575,10.657,1576,10.657,1577,10.657,1578,10.657,1579,10.657,1580,10.657,1581,10.657,1582,10.657,1583,10.657,1584,10.657,1585,10.657,1586,10.657,1587,10.657,1588,10.657,1589,10.657,1590,10.657,1591,10.657,1592,10.657,1593,10.657,1594,10.657,1595,10.657]],["keywords/97",[]],["title/98",[1596,944.265]],["content/98",[]],["keywords/98",[]],["title/99",[1597,944.265]],["content/99",[322,6.56,420,5.997,675,7.824,1598,13.345,1599,13.345,1600,15.889,1601,13.345,1602,13.345,1603,13.345,1604,13.345,1605,13.345]],["keywords/99",[]],["title/100",[1606,608.226,1607,686.859]],["content/100",[164,4.587,210,9.301,501,6.709,674,6.153,675,6.153,1121,8.922,1608,10.495,1609,10.495,1610,13.475,1611,12.327,1612,10.495,1613,15.217,1614,10.495,1615,15.217,1616,10.495,1617,10.495,1618,10.495]],["keywords/100",[]],["title/101",[1606,608.226,1619,686.859]],["content/101",[1620,14.169,1621,14.169,1622,14.169,1623,14.169,1624,14.169,1625,14.169]],["keywords/101",[]],["title/102",[1626,836.164]],["content/102",[87,5.269,420,5.419,522,6.185,1551,10.678,1626,13.23,1627,12.058,1628,12.058,1629,12.058,1630,12.058,1631,12.058,1632,12.058,1633,12.058,1634,12.058,1635,12.058,1636,12.058,1637,10.678,1638,12.058,1639,12.058,1640,12.058,1641,12.058,1642,12.058]],["keywords/102",[]],["title/103",[1643,944.265]],["content/103",[1644,14.317,1645,12.678,1646,14.317,1647,12.678,1648,14.317]],["keywords/103",[]],["title/104",[1649,944.265]],["content/104",[1645,12.678,1647,12.678,1650,14.317,1651,14.317,1652,14.317]],["keywords/104",[]],["title/105",[1653,944.265]],["content/105",[8,5.405,164,4.112,420,6.336,522,5.836,1637,12.485,1654,10.998,1655,10.998,1656,10.998,1657,10.998,1658,10.998,1659,10.998,1660,10.998,1661,10.998,1662,10.998,1663,14.099,1664,10.998,1665,10.998,1666,14.099,1667,10.998,1668,10.998,1669,10.998,1670,10.998,1671,10.998,1672,10.998,1673,10.998]],["keywords/105",[]],["title/106",[1674,944.265]],["content/106",[]],["keywords/106",[]],["title/107",[1675,944.265]],["content/107",[420,5.997,522,5.524,1676,13.345,1677,14.07,1678,13.345,1679,13.345,1680,13.345,1681,13.345,1682,13.345,1683,13.345,1684,13.345]],["keywords/107",[]],["title/108",[1685,944.265]],["content/108",[522,5.081,975,9.252,1548,10.868,1677,10.868,1686,12.274,1687,12.274,1688,12.274,1689,12.274,1690,12.274,1691,12.274,1692,12.274,1693,12.274,1694,12.274,1695,12.274,1696,12.274,1697,12.274,1698,12.274,1699,12.274,1700,12.274,1701,12.274,1702,12.274]],["keywords/108",[]],["title/109",[1703,836.164]],["content/109",[245,7.734,322,5.044,350,9.086,420,4.611,550,6.016,660,6.888,662,6.888,755,6.016,1185,7.734,1223,6.559,1703,9.086,1704,10.26,1705,10.26,1706,10.26,1707,10.26,1708,10.26,1709,10.26,1710,10.26,1711,10.26,1712,10.26,1713,10.26,1714,10.26,1715,10.26,1716,16.6,1717,10.26,1718,10.26,1719,10.26,1720,10.26,1721,10.26,1722,10.26,1723,10.26,1724,15.05,1725,10.26,1726,10.26,1727,10.26,1728,10.26,1729,10.26]],["keywords/109",[]],["title/110",[1730,944.265]],["content/110",[747,10.681,1731,14.169,1732,14.169,1733,14.169,1734,14.169,1735,14.169]],["keywords/110",[]],["title/111",[1736,944.265]],["content/111",[6,4.466,8,1.767,79,3.666,87,0.496,164,4.691,171,4.913,180,0.525,210,6.757,212,3.795,322,1.902,334,6.53,366,1.312,370,0.64,380,0.92,401,0.805,410,3.23,420,0.51,464,0.762,522,0.47,550,1.258,570,2.743,576,7.373,660,3.095,662,1.441,747,0.856,749,2.474,755,1.258,891,4.34,1042,1.005,1094,1.521,1121,7.782,1192,1.005,1223,3.378,1252,2.703,1299,1.005,1324,1.901,1405,0.92,1511,0.856,1737,1.135,1738,1.135,1739,1.135,1740,1.135,1741,1.135,1742,3.053,1743,1.135,1744,1.135,1745,1.135,1746,1.135,1747,1.135,1748,1.135,1749,1.135,1750,1.135,1751,1.135,1752,1.135,1753,1.135,1754,1.135,1755,1.135,1756,1.135,1757,1.135,1758,1.135,1759,1.135,1760,1.135,1761,1.135,1762,1.135,1763,1.135,1764,1.135,1765,1.135,1766,1.135,1767,1.135,1768,3.053,1769,3.053,1770,1.135,1771,2.146,1772,2.146,1773,1.135,1774,1.135,1775,1.135,1776,1.135,1777,1.135,1778,1.135,1779,1.135,1780,1.135,1781,1.135,1782,1.135,1783,3.87,1784,1.135,1785,1.135,1786,1.135,1787,1.135,1788,1.135,1789,1.135,1790,1.135,1791,1.135,1792,1.135,1793,1.135,1794,1.135,1795,1.135,1796,1.135,1797,5.9,1798,1.135,1799,1.135,1800,1.135,1801,1.135,1802,1.135,1803,1.135,1804,1.135,1805,1.135,1806,0.92,1807,1.135,1808,1.135,1809,1.135,1810,2.146,1811,1.135,1812,1.135,1813,3.735,1814,1.135,1815,11.886,1816,1.135,1817,1.135,1818,1.135,1819,2.146,1820,7.912,1821,1.135,1822,3.87,1823,2.146,1824,1.135,1825,2.146,1826,1.135,1827,1.135,1828,1.135,1829,1.135,1830,1.135,1831,1.135,1832,1.135,1833,1.135,1834,1.135,1835,1.135,1836,2.146,1837,1.135,1838,1.135,1839,2.146,1840,1.135,1841,1.135,1842,2.146,1843,1.135,1844,1.135,1845,1.135,1846,1.135,1847,2.146,1848,1.135,1849,3.053,1850,2.146,1851,1.135,1852,3.053,1853,1.135,1854,1.135,1855,1.135,1856,1.135,1857,1.135,1858,1.135,1859,2.146,1860,1.135,1861,1.135,1862,1.135,1863,1.135,1864,1.135,1865,1.135,1866,1.005,1867,1.135,1868,1.135,1869,1.135,1870,1.135,1871,1.135,1872,13.143,1873,1.135,1874,5.284,1875,1.135,1876,9.41,1877,1.135,1878,1.135,1879,10.539,1880,3.87,1881,2.146,1882,2.146,1883,2.146,1884,3.87,1885,2.146,1886,9.073,1887,2.146,1888,8.327,1889,2.146,1890,1.135,1891,1.135,1892,1.135,1893,1.135,1894,1.135,1895,1.135,1896,1.135,1897,1.135,1898,1.135,1899,1.135,1900,1.135,1901,1.135,1902,2.146,1903,1.135,1904,2.146,1905,7.467,1906,7.467,1907,3.053,1908,1.135,1909,1.135,1910,1.135,1911,1.135,1912,2.146,1913,2.146,1914,2.146,1915,1.135,1916,1.135,1917,1.135,1918,3.87,1919,2.146,1920,2.146,1921,2.146,1922,2.146,1923,2.146,1924,1.135,1925,2.146,1926,2.146,1927,2.146,1928,1.135,1929,1.135,1930,1.135,1931,1.135,1932,1.135,1933,2.146,1934,1.135,1935,2.146,1936,2.146,1937,2.146,1938,2.146,1939,2.146,1940,2.146,1941,2.146,1942,2.146,1943,2.146,1944,5.284,1945,1.135,1946,1.135,1947,3.87,1948,3.053,1949,1.135,1950,3.053,1951,3.053,1952,3.053,1953,2.146,1954,3.053,1955,3.053,1956,3.053,1957,3.053,1958,1.135,1959,2.146,1960,1.135,1961,2.146,1962,0.92,1963,1.135,1964,1.135,1965,1.135,1966,1.135,1967,1.135,1968,1.135,1969,1.135,1970,1.135,1971,1.135,1972,1.135,1973,1.135,1974,1.135,1975,1.135,1976,1.135,1977,2.146,1978,1.135,1979,1.135,1980,1.135,1981,1.135,1982,1.135,1983,1.135,1984,1.135,1985,1.135,1986,1.135,1987,1.135,1988,1.135,1989,1.135,1990,1.135,1991,2.146,1992,2.146,1993,10.305,1994,2.146,1995,2.146,1996,2.146,1997,2.146,1998,2.146,1999,2.146,2000,2.146,2001,3.87,2002,5.284,2003,3.87,2004,2.146,2005,2.146,2006,2.146,2007,2.146,2008,2.146,2009,2.146,2010,3.87,2011,1.135,2012,1.135]],["keywords/111",[]],["title/112",[2013,944.265]],["content/112",[2014,14.621,2015,14.621,2016,14.621]],["keywords/112",[]],["title/113",[2017,944.265]],["content/113",[8,6.701,159,5.376,164,4.38,180,4.576,210,6.046,212,5.305,366,6.046,486,10.521,501,6.324,674,5.8,675,5.8,975,7.456,978,8.013,979,8.013,1121,5.8,2018,9.891,2019,9.891,2020,9.891,2021,9.891,2022,9.891,2023,9.891,2024,9.891,2025,9.891,2026,9.891,2027,8.013,2028,9.891,2029,9.891]],["keywords/113",[]],["title/114",[2030,944.265]],["content/114",[8,6.92,164,4.329,171,4.97,180,4.078,210,5.388,212,4.907,366,5.388,401,6.248,486,10.21,570,6.248,660,5.918,662,5.918,664,6.644,749,5.635,755,5.168,891,5.918,1094,6.248,1121,5.168,1223,5.635,1962,7.141,2027,7.141,2031,7.805,2032,8.814,2033,8.814,2034,8.814,2035,7.141,2036,7.805,2037,7.141,2038,7.805,2039,8.814,2040,8.814,2041,8.814,2042,8.814,2043,8.814,2044,8.814,2045,8.814,2046,8.814]],["keywords/114",[]],["title/115",[2047,944.265]],["content/115",[8,6.92,164,4.329,171,4.97,180,4.078,210,5.388,212,4.907,366,5.388,401,6.248,486,10.21,570,6.248,660,5.918,662,5.918,664,6.644,749,5.635,755,5.168,891,5.918,1094,6.248,1121,5.168,1223,5.635,1962,7.141,2027,7.141,2031,7.805,2035,7.141,2036,7.805,2037,7.141,2038,7.805,2048,8.814,2049,8.814,2050,8.814,2051,8.814,2052,8.814,2053,8.814,2054,8.814,2055,8.814,2056,8.814,2057,8.814,2058,8.814]],["keywords/115",[]],["title/116",[2059,944.265]],["content/116",[2060,14.938]],["keywords/116",[]],["title/117",[2061,944.265]],["content/117",[159,6.732,164,4.482,171,5.101,322,6.088,420,7.15,501,7.918,522,6.288,550,7.262,570,8.779,662,6.073,674,8.906,675,7.262,749,7.918,755,7.262,891,8.315,975,6.819,978,7.328,979,10.034,1094,6.412,1223,7.918,1523,10.034,2037,7.328,2062,9.046,2063,9.046,2064,9.046,2065,9.046,2066,9.046,2067,9.046]],["keywords/117",[]],["title/118",[2068,944.265]],["content/118",[2069,14.621,2070,14.621,2071,14.621]],["keywords/118",[]],["title/119",[1555,764.959]],["content/119",[]],["keywords/119",[]],["title/120",[2072,944.265]],["content/120",[164,3.249,245,9.775,445,10.505,447,10.505,1017,11.483,2073,12.968,2074,12.968,2075,12.968,2076,12.968,2077,12.968,2078,12.968,2079,12.968,2080,12.968,2081,12.968,2082,12.968]],["keywords/120",[]],["title/121",[2083,944.265]],["content/121",[164,2.919,420,5.236,452,10.316,1553,10.316,1555,9.438,2084,11.65,2085,11.65,2086,11.65,2087,11.65,2088,11.65,2089,11.65,2090,11.65,2091,11.65,2092,11.65,2093,11.65,2094,11.65,2095,11.65,2096,11.65,2097,11.65,2098,11.65,2099,11.65,2100,11.65,2101,11.65,2102,11.65,2103,11.65,2104,11.65,2105,11.65]],["keywords/121",[]],["title/122",[2106,944.265]],["content/122",[2107,14.778,2108,14.778]],["keywords/122",[]],["title/123",[2109,836.164]],["content/123",[6,6.747,8,4.223,11,2.493,79,2.32,87,1.932,164,4.692,180,2.045,210,2.702,212,4.764,322,0.53,362,2.826,370,2.088,396,4.231,412,1.449,465,0.764,467,0.813,479,2.968,482,6.597,484,3.133,486,3.103,487,0.724,488,1.449,522,3.339,624,1.656,1095,1.81,1100,9.263,1121,6.585,1206,0.813,1216,0.874,1312,0.955,1315,1.656,1327,0.955,1328,0.955,1405,5.462,1458,1.81,1459,0.955,1511,0.813,1523,1.656,1610,1.81,1611,9.714,1806,0.874,1813,7.904,1866,0.955,1879,11.708,2035,0.874,2110,1.078,2111,1.078,2112,6.202,2113,1.078,2114,8.131,2115,1.078,2116,1.078,2117,1.078,2118,1.078,2119,1.078,2120,1.078,2121,1.078,2122,1.078,2123,1.078,2124,1.078,2125,0.955,2126,1.078,2127,1.078,2128,1.078,2129,0.955,2130,0.955,2131,1.078,2132,1.078,2133,1.078,2134,0.955,2135,0.955,2136,0.955,2137,0.955,2138,0.955,2139,0.955,2140,1.078,2141,1.078,2142,1.078,2143,1.078,2144,1.078,2145,3.279,2146,2.044,2147,2.044,2148,2.044,2149,2.044,2150,2.044,2151,2.044,2152,0.955,2153,1.81,2154,2.044,2155,2.044,2156,2.044,2157,3.703,2158,2.044,2159,9.345,2160,2.044,2161,2.044,2162,2.044,2163,9.755,2164,2.044,2165,2.044,2166,9.945,2167,2.044,2168,2.044,2169,1.81,2170,2.044,2171,2.044,2172,1.078,2173,1.078,2174,1.078,2175,1.078,2176,1.078,2177,1.078,2178,1.078,2179,1.078,2180,1.078,2181,1.078,2182,1.81,2183,5.517,2184,5.076,2185,3.703,2186,3.703,2187,4.42,2188,2.581,2189,2.044,2190,1.81,2191,13.299,2192,2.044,2193,2.044,2194,2.044,2195,2.044,2196,2.044,2197,2.044,2198,2.044,2199,2.044,2200,6.231,2201,2.044,2202,1.656,2203,2.044,2204,3.279,2205,2.044,2206,2.044,2207,2.044,2208,6.39,2209,2.044,2210,2.044,2211,2.044,2212,2.044,2213,3.279,2214,2.044,2215,1.078,2216,1.078,2217,1.078,2218,4.42,2219,1.078,2220,1.078,2221,1.81,2222,4.495,2223,4.495,2224,2.044,2225,2.044,2226,2.044,2227,1.81,2228,1.078,2229,1.078,2230,1.078,2231,2.581,2232,2.044,2233,2.044,2234,1.81,2235,1.078,2236,1.078,2237,0.955,2238,2.581,2239,2.044,2240,2.044,2241,2.044,2242,2.044,2243,2.915,2244,2.044,2245,1.81,2246,1.078,2247,1.078,2248,3.703,2249,1.078,2250,1.078,2251,2.915,2252,0.955,2253,2.581,2254,1.81,2255,2.044,2256,1.81,2257,2.044,2258,2.044,2259,2.044,2260,2.044,2261,2.044,2262,2.044,2263,1.81,2264,1.078,2265,2.581,2266,1.078,2267,2.044,2268,1.078,2269,1.81,2270,1.078,2271,1.81,2272,1.078,2273,0.955,2274,1.078,2275,1.078]],["keywords/123",[]],["title/124",[2276,836.164]],["content/124",[2276,12.947,2277,14.621,2278,14.621]],["keywords/124",[]],["title/125",[2279,764.959]],["content/125",[6,4.501,8,2.223,11,1.357,79,1.263,87,2.221,164,4.72,180,2.983,210,2.08,212,4.516,264,1.815,322,0.63,362,0.82,370,1.919,372,1.471,396,4.735,410,1.471,412,0.909,465,0.909,467,0.967,479,1.616,482,5.033,484,0.909,486,6.335,487,1.616,488,3.04,522,2.914,548,6.234,621,1.135,624,3.474,629,3.013,630,2.132,632,6.234,653,1.135,654,1.135,1014,2.132,1121,7.708,1206,0.967,1216,1.039,1315,1.039,1511,0.967,1611,6.141,1806,1.039,1813,10.768,1879,10.525,2112,1.95,2114,1.039,2125,4.501,2129,1.135,2130,1.135,2134,1.135,2135,1.135,2136,1.135,2137,1.135,2138,1.135,2139,1.135,2145,3.013,2152,1.135,2153,3.013,2159,10.134,2163,11.056,2166,6.234,2182,3.798,2183,5.136,2188,3.013,2190,3.798,2191,10.891,2202,1.95,2204,3.798,2208,7.929,2213,3.798,2221,1.135,2222,3.798,2223,3.798,2227,2.132,2231,1.135,2234,2.132,2237,1.135,2238,3.798,2245,3.013,2252,1.135,2253,2.132,2254,2.132,2256,3.013,2263,4.501,2265,2.132,2269,1.135,2271,1.135,2273,1.135,2279,1.039,2280,1.282,2281,2.132,2282,1.282,2283,1.282,2284,1.135,2285,1.135,2286,1.282,2287,1.282,2288,1.282,2289,1.282,2290,1.282,2291,1.282,2292,1.282,2293,1.282,2294,1.282,2295,1.282,2296,1.282,2297,1.282,2298,1.282,2299,1.282,2300,1.282,2301,1.282,2302,1.282,2303,1.282,2304,1.282,2305,1.282,2306,1.282,2307,2.407,2308,1.282,2309,2.407,2310,2.407,2311,1.282,2312,1.282,2313,12.103,2314,1.282,2315,1.282,2316,1.282,2317,1.282,2318,4.289,2319,2.407,2320,2.407,2321,4.289,2322,2.407,2323,2.407,2324,2.407,2325,4.289,2326,5.8,2327,2.407,2328,2.407,2329,2.407,2330,2.407,2331,2.407,2332,2.407,2333,2.407,2334,2.407,2335,2.407,2336,2.407,2337,2.407,2338,2.407,2339,4.289,2340,2.407,2341,2.407,2342,2.407,2343,2.407,2344,3.402,2345,1.282,2346,2.407,2347,2.407,2348,2.407,2349,2.407,2350,2.407,2351,2.407,2352,2.407,2353,2.407,2354,2.407,2355,2.407,2356,2.407,2357,2.407,2358,1.282,2359,5.083,2360,2.407,2361,1.282,2362,5.083,2363,2.407,2364,1.282,2365,1.282,2366,2.407,2367,1.282,2368,1.282,2369,1.282,2370,1.282,2371,1.282,2372,1.282,2373,1.282,2374,5.8,2375,1.282,2376,1.282,2377,1.282,2378,1.282,2379,1.282,2380,1.282,2381,1.282,2382,1.282,2383,1.282,2384,1.282,2385,1.282,2386,1.282,2387,1.282,2388,1.282,2389,1.282]],["keywords/125",[]],["title/126",[2390,836.164]],["content/126",[2112,11.247,2114,11.247,2169,12.294,2202,11.247,2281,12.294,2390,12.294,2391,13.883,2392,13.883]],["keywords/126",[]],["title/127",[2393,944.265]],["content/127",[2394,14.938]],["keywords/127",[]],["title/128",[2395,944.265]],["content/128",[2109,12.547,2279,11.479,2284,12.547,2285,12.547,2396,14.169,2397,14.169]],["keywords/128",[]]],"invertedIndex":[["",{"_index":164,"title":{},"content":{"13":{"position":[[94,1],[137,1],[139,1],[146,1],[163,1],[174,1],[208,1],[213,3],[217,2],[230,1],[232,1],[234,1],[236,1],[322,1],[334,1],[392,1],[398,1],[443,1],[458,1],[465,1],[493,1],[574,2],[607,2]]},"14":{"position":[[157,1],[168,1],[170,1],[217,1],[270,1],[301,1],[325,1],[336,2],[345,1],[375,2],[401,1],[432,2],[435,1],[437,2],[454,2],[501,1],[720,1],[806,1],[818,1],[876,1],[882,1],[927,1],[942,1],[949,1],[977,1],[1058,2]]},"19":{"position":[[13,1]]},"33":{"position":[[0,2],[36,1],[52,1],[65,1],[67,3],[71,1],[73,2],[110,1],[151,1],[153,2],[198,1],[216,1],[225,1],[227,2],[268,1],[270,2],[353,1],[355,2],[411,1],[434,1],[452,1],[465,1],[467,2],[487,1],[521,1],[523,2],[547,1],[583,1],[585,2],[614,1],[643,1],[645,2],[676,1],[689,1],[691,3],[695,1],[697,1],[699,2],[715,1],[728,2],[886,2],[964,2],[1016,2],[1073,2],[1088,2],[1151,2],[1195,2],[1246,2],[1258,2],[1296,2],[1342,2],[1384,2],[1422,2],[1460,2]]},"39":{"position":[[12,1],[28,1],[41,1],[43,3],[47,1],[49,2],[93,1],[118,1],[120,2],[167,1],[196,1],[198,2],[227,1],[251,1],[253,2],[285,1],[312,3],[319,1],[321,2],[349,1],[377,1],[379,2],[420,1],[433,1],[478,1],[487,2],[495,1],[512,1],[529,1],[531,1],[533,2],[551,1],[566,2],[728,2],[798,2],[874,2],[914,2],[956,2],[967,2],[1013,2],[1028,2],[1068,2],[1079,2],[1127,2]]},"40":{"position":[[90,2],[154,1],[156,2],[189,1],[204,2],[260,1],[283,1],[285,2],[295,2],[345,1],[347,2],[370,2],[400,1],[429,1],[431,2],[507,1],[509,2],[534,2],[564,2],[612,2],[679,1],[681,2],[711,1],[728,2],[783,1],[785,2],[791,2],[820,1],[931,1],[1004,2]]},"43":{"position":[[375,1],[394,1]]},"44":{"position":[[125,2],[158,1],[191,1],[206,1],[231,1],[243,1],[245,1],[247,2],[309,1],[325,1],[336,1],[338,2],[385,2],[428,1],[430,2],[479,1],[518,2],[550,1],[552,2],[604,1],[611,1],[613,2],[645,1],[665,1],[701,1],[703,2],[795,1],[797,2],[856,1],[871,1],[873,1],[875,2],[927,1],[960,1],[962,1],[964,1],[966,2],[1001,2],[1036,1],[1062,1],[1064,2],[1085,2],[1116,1],[1140,1],[1142,2],[1164,2],[1199,1],[1225,1],[1227,2],[1248,2],[1277,1],[1300,1],[1302,2],[1331,2],[1359,1],[1372,1],[1417,1],[1426,2],[1442,1],[1458,1],[1474,1],[1491,1],[1508,1],[1510,1],[1512,2],[1538,1],[1561,2],[1824,2],[1841,2],[1896,2],[1951,2],[2006,2],[2061,2],[2116,2],[2219,2],[2236,2],[2291,2],[2346,2],[2401,2],[2455,2],[2470,2],[2518,2],[2529,2],[2585,2]]},"50":{"position":[[111,3]]},"51":{"position":[[43,1]]},"53":{"position":[[0,2],[20,1],[36,1],[49,1],[51,3],[55,1],[57,2],[96,1],[121,1],[123,2],[162,1],[189,1],[191,2],[215,1],[259,1],[261,2],[292,1],[319,3],[326,1],[328,2],[354,1],[382,1],[384,2],[425,1],[438,1],[483,1],[492,2],[500,1],[517,1],[534,1],[536,1],[538,2],[544,2],[628,2],[647,2],[685,2],[696,2],[736,2],[747,2],[793,2],[808,2],[848,2],[859,2],[907,2]]},"54":{"position":[[48,1],[50,2],[81,1],[94,2],[138,1],[140,2],[164,1],[170,2],[187,1],[204,1],[210,2],[224,1],[243,1],[259,2],[313,1],[328,2],[344,1],[367,1],[369,2],[412,2],[455,2]]},"59":{"position":[[504,1]]},"64":{"position":[[67,1]]},"65":{"position":[[38,1]]},"67":{"position":[[70,6]]},"68":{"position":[[68,6]]},"69":{"position":[[696,1],[826,1],[859,1]]},"72":{"position":[[146,1],[150,1],[155,1],[160,1],[321,1],[325,1],[332,1],[336,1],[343,1],[347,1],[352,1],[377,1],[381,1],[388,1],[392,1],[399,1],[404,1],[409,1],[414,1]]},"76":{"position":[[1351,1],[1369,1],[1418,1],[1429,1],[1606,1],[1613,1]]},"79":{"position":[[156,1]]},"81":{"position":[[71,1],[76,1],[78,2],[115,1],[121,2],[157,1],[162,2],[221,1],[232,1],[240,1],[251,1],[272,1],[274,2],[313,1],[322,1]]},"82":{"position":[[89,1],[105,1],[120,1],[122,3],[126,2],[151,1],[156,2],[180,1],[185,2],[204,1],[206,1],[476,2],[521,1],[523,2],[582,1],[609,2],[647,1],[670,2],[700,3],[715,1],[724,1],[726,3],[730,2],[760,1],[770,1],[772,2],[806,1],[838,1],[850,1],[863,2],[902,3],[911,1],[913,2],[941,1],[958,2],[992,1],[994,1],[996,2],[1040,2],[1092,2],[1141,1],[1176,1],[1215,1],[1222,1],[1224,1],[1457,2],[1490,1],[1504,1],[1544,1],[1578,3],[1593,1],[1608,1],[1638,1],[1653,3],[1662,1],[1681,1],[1683,1],[1698,1],[1877,2],[1917,1],[1931,1],[1971,1],[2005,3],[2020,1],[2035,1],[2037,2],[2080,1],[2089,1],[2123,1],[2137,1],[2163,3],[2172,1],[2195,2],[2221,1],[2223,2],[2293,1],[2331,1],[2381,1],[2389,1],[2405,1],[2407,1],[2409,1],[2437,1],[2457,3],[2464,1],[2486,1],[2507,1],[2944,1],[2953,1],[2974,1],[2982,1],[3039,2],[3075,1],[3077,2],[3117,1],[3133,2],[3158,1],[3160,3],[3175,1],[3191,1],[3203,2],[3284,1],[3298,1],[3324,1],[3348,1],[3350,1],[3352,1],[3354,1],[3445,2],[3494,1],[3529,1],[3568,1],[3575,1],[3665,2],[3735,1],[3773,1],[3823,1],[3831,1],[3896,1],[3916,1],[3926,1],[3977,1],[4024,1],[4049,1],[4062,1],[4066,3],[4073,1],[4089,1],[4091,1],[4106,1],[4121,1],[4169,1],[4190,2],[4200,3],[4232,1],[4275,1],[4298,1],[4311,1],[4315,3],[4322,1],[4338,1],[4340,1],[4355,1],[4466,1],[4470,1],[4483,1],[4487,1],[4500,1],[4504,1],[4589,2],[4648,1],[4675,1],[4687,1],[4704,1],[4769,2],[4818,1],[4853,1],[4892,1],[4899,1],[4923,2],[4993,1],[5031,1],[5081,1],[5089,1],[5117,1],[5133,1],[5148,1],[5150,3],[5154,2],[5179,1],[5184,2],[5208,1],[5213,2],[5232,2],[5266,1],[5293,1],[5301,1],[5303,2],[5362,1],[5389,1],[5401,1],[5418,1],[5420,2],[5465,1],[5467,2],[5526,1],[5553,2],[5591,1],[5614,2],[5644,3],[5659,1],[5668,1],[5670,3],[5674,2],[5704,1],[5714,1],[5716,2],[5750,1],[5782,1],[5794,1],[5807,2],[5846,3],[5855,1],[5857,2],[5885,1],[5902,2],[5937,1],[5939,1],[5941,2],[5985,2],[6037,2],[6086,1],[6121,1],[6160,1],[6167,1],[6169,1],[6171,2],[6204,1],[6218,1],[6258,1],[6292,3],[6307,1],[6322,1],[6352,1],[6367,3],[6376,1],[6395,1],[6397,1],[6412,1],[6414,2],[6454,1],[6468,1],[6508,1],[6542,3],[6557,1],[6572,1],[6574,2],[6617,1],[6626,1],[6660,1],[6674,1],[6700,3],[6709,1],[6732,2],[6758,1],[6760,2],[6830,1],[6868,1],[6918,1],[6926,1],[6942,1],[6944,1],[6946,1],[6958,1],[6978,3],[6985,1],[6994,1],[7015,1],[7017,2],[7053,1],[7055,2],[7095,1],[7111,2],[7136,1],[7138,3],[7153,1],[7169,1],[7181,2],[7262,1],[7276,1],[7302,1],[7326,1],[7328,1],[7330,1],[7332,1],[7334,1]]},"87":{"position":[[0,2],[21,1],[37,1],[50,1],[52,2],[55,1],[57,2],[121,1],[163,1],[165,2],[203,1],[257,1],[277,1],[279,2],[325,1],[327,2],[414,1],[416,2],[449,1],[462,1],[464,2],[467,1],[469,2],[502,1],[542,1],[544,2],[580,1],[613,1],[615,1],[617,2],[633,1],[645,2],[734,2],[819,2],[859,2],[901,2],[916,2],[966,2],[1029,2],[1066,2],[1077,2],[1118,2],[1162,2],[1214,2],[1223,2]]},"89":{"position":[[0,2],[36,1],[38,2],[64,1],[77,2],[154,1],[177,1],[179,2],[262,1],[285,2],[302,1],[321,1]]},"90":{"position":[[0,2],[50,1],[52,2],[85,1],[98,2],[175,1],[202,1],[232,1],[234,1],[260,1]]},"91":{"position":[[0,2],[40,1],[42,2],[73,1],[86,2],[172,1],[200,1],[228,1],[230,1],[254,1]]},"92":{"position":[[0,2],[32,1],[34,2],[90,2],[141,1],[169,1],[185,1],[187,1],[202,1]]},"93":{"position":[[0,2],[36,1],[52,1],[65,1],[67,2],[70,1],[72,2],[136,1],[178,1],[180,2],[218,1],[272,1],[292,1],[294,2],[340,1],[342,2],[429,1],[431,2],[464,1],[477,1],[479,2],[482,1],[484,2],[517,1],[557,1],[559,2],[595,1],[628,1],[630,2],[656,2],[659,2],[695,1],[697,2],[723,1],[735,2],[812,1],[834,1],[836,2],[919,1],[941,2],[958,1],[976,1],[978,2],[1028,1],[1030,2],[1063,1],[1075,2],[1152,1],[1179,1],[1208,1],[1210,1],[1235,1],[1237,2],[1277,1],[1279,2],[1310,1],[1322,2],[1408,1],[1436,1],[1463,1],[1465,1],[1488,1],[1490,2],[1522,1],[1524,2],[1580,2],[1631,1],[1659,1],[1674,1],[1676,1],[1690,1],[1692,1]]},"95":{"position":[[609,1]]},"96":{"position":[[419,1],[438,1]]},"100":{"position":[[49,1],[85,1],[125,1],[132,1],[156,1],[178,1],[200,1],[204,1],[228,1],[250,1],[275,1],[282,1]]},"105":{"position":[[173,1],[178,1],[243,1],[248,1]]},"111":{"position":[[712,1],[728,1],[1249,2],[1267,1],[1286,1],[1297,1],[1314,1],[1333,1],[1341,1],[1343,1],[1414,1],[1499,2],[1531,1],[1547,1],[1578,3],[1588,1],[1600,1],[1611,1],[1618,1],[1657,1],[1659,1],[2085,1],[2115,1],[2117,2],[2142,3],[2152,1],[2164,1],[2172,1],[2179,1],[2215,1],[2217,1],[2224,1],[2226,2],[2252,3],[2262,1],[2275,1],[2283,1],[2290,1],[2327,1],[2329,1],[2331,1],[2431,2],[2457,1],[2497,1],[2527,3],[2537,1],[2544,1],[2557,1],[2576,1],[2578,2],[2604,1],[2644,1],[2675,3],[2685,1],[2692,1],[2706,1],[2725,1],[2879,2],[2945,1],[2987,1],[2989,2],[3021,1],[3032,3],[3079,1],[3121,1],[3151,1],[3194,1],[3201,1],[3216,1],[3218,1],[3220,2],[3250,1],[3261,1],[3286,3],[3296,1],[3321,1],[3328,1],[3341,1],[3371,1],[3378,1],[3392,1],[3399,1],[3414,1],[3416,1],[3432,1],[3604,1],[3632,1],[3656,1],[3664,2],[3742,3],[3751,1],[3764,1],[3779,2],[3820,1],[3834,1],[3854,1],[3874,1],[3881,1],[3883,2],[3905,1],[3926,1],[3947,1],[3949,2],[3991,3],[4001,1],[4017,1],[4019,1],[4149,2],[4177,1],[4236,1],[4257,1],[4282,1],[4305,1],[4322,2],[4360,3],[4398,3],[4408,1],[4426,3],[4441,1],[4453,1],[4461,1],[4485,1],[4503,1],[4511,1],[4518,1],[4537,1],[4545,1],[4547,2],[4567,1],[4625,2],[4661,2],[4697,1],[4764,2],[4796,1],[4861,2],[4895,1],[4950,1],[4985,2],[5021,1],[5089,2],[5121,1],[5187,2],[5221,1],[5246,2],[5266,1],[5295,3],[5305,1],[5307,2],[5329,2],[5368,2],[5401,2],[5445,2],[5506,3],[5521,1],[5533,1],[5553,1],[5577,1],[5595,1],[5615,1],[5622,1],[5641,1],[5661,1],[5663,1],[5691,3],[5701,1],[5703,2],[5725,2],[5764,2],[5797,2],[5841,2],[5902,3],[5917,1],[5929,1],[5950,1],[5974,1],[5992,1],[6013,1],[6020,1],[6039,1],[6060,1],[7046,2],[7065,1],[7072,1],[7074,2],[7100,1],[7134,2],[7164,3],[7179,1],[7191,1],[7204,1],[7228,1],[7246,1],[7259,1],[7266,1],[7285,1],[7298,1],[7300,2],[7337,1],[7357,1],[7359,1],[7361,2],[7413,1],[7415,2],[7446,1],[7469,1],[7506,1],[7517,2],[7555,3],[7565,1],[7583,1],[7606,1],[7625,1],[7641,1],[7643,2],[7689,3],[7708,1],[7731,1],[7766,1],[7783,1],[7803,1],[7812,2],[7832,1],[7850,1],[7878,1],[7902,1],[7910,2],[7988,3],[7997,1],[8010,1],[8025,2],[8066,1],[8080,1],[8100,1],[8120,1],[8127,1],[8129,2],[8151,1],[8172,1],[8193,1],[8195,2],[8237,3],[8247,1],[8263,1],[8265,1],[8267,2],[8305,3],[8343,3],[8353,1],[8371,3],[8386,1],[8398,1],[8406,1],[8430,1],[8448,1],[8456,1],[8463,1],[8482,1],[8490,1],[8492,2],[8512,1],[8541,3],[8551,1],[8553,2],[8575,2],[8614,2],[8647,2],[8691,2],[8752,3],[8767,1],[8779,1],[8799,1],[8823,1],[8841,1],[8861,1],[8868,1],[8887,1],[8907,1],[8909,1],[8937,3],[8947,1],[8949,2],[8971,2],[9010,2],[9043,2],[9087,2],[9148,3],[9163,1],[9175,1],[9196,1],[9220,1],[9238,1],[9259,1],[9266,1],[9285,1],[9306,1],[9308,2],[9327,1],[9334,1],[9336,2],[9362,1],[9396,2],[9426,3],[9441,1],[9453,1],[9466,1],[9490,1],[9508,1],[9521,1],[9528,1],[9547,1],[9560,1],[9562,2],[9599,1],[9619,1],[9621,1],[9623,2],[9675,1],[9677,2],[9708,1],[9731,1],[9768,1],[9779,2],[9817,3],[9827,1],[9845,1],[9868,1],[9887,1],[9903,1],[9905,2],[9951,3],[9970,1],[9993,1],[10028,1],[10045,1],[10065,1]]},"113":{"position":[[182,2],[219,1],[234,1],[236,3],[302,1],[340,1],[351,3],[494,1]]},"114":{"position":[[239,1],[291,2],[327,1],[342,1],[344,3],[409,1],[446,1],[457,3],[598,1]]},"115":{"position":[[239,1],[248,2],[286,1],[301,1],[303,3],[370,1],[409,1],[420,3],[565,1]]},"117":{"position":[[121,1],[128,1],[136,1],[142,1],[207,1],[209,1],[213,1],[215,1],[217,1],[219,1],[221,1],[223,1]]},"120":{"position":[[174,1]]},"121":{"position":[[183,2]]},"123":{"position":[[780,1],[782,2],[802,1],[807,2],[846,1],[854,2],[879,1],[887,1],[900,1],[926,1],[938,1],[946,1],[948,2],[951,1],[968,2],[1003,1],[1005,2],[1030,1],[1053,2],[1080,3],[1087,1],[1089,2],[1125,1],[1136,1],[1143,1],[1145,2],[1185,1],[1198,2],[1226,2],[1284,3],[1294,1],[1308,1],[1328,1],[1330,2],[1369,1],[1380,1],[1382,2],[1400,1],[1419,1],[1421,2],[1444,1],[1678,1],[1738,1],[1756,1],[1780,1],[1782,3],[1786,2],[1835,1],[1844,2],[1864,1],[1866,1],[1868,2],[1883,1],[1903,1],[1920,1],[1922,2],[1976,2],[2009,2],[2064,1],[2066,2],[2087,2],[2099,1],[2116,2],[2128,1],[2150,2],[2208,2],[2252,2],[2277,1],[2300,2],[2323,3],[2330,1],[2332,2],[2344,1],[2352,2],[2398,1],[2411,2],[2441,1],[2452,1],[2459,1],[2461,2],[2497,2],[2524,1],[2537,2],[2571,1],[2579,2],[2610,1],[2615,2],[2635,2],[2642,1],[2691,2],[2735,1],[2750,1],[2777,1],[2797,1],[2799,2],[2847,1],[2880,1],[2891,1],[2893,2],[2934,1],[2936,2],[3066,2],[3150,1],[3152,2],[3191,2],[3235,2],[3279,1],[3302,1],[3337,1],[3351,1],[3371,1],[3373,2],[3411,1],[3413,2],[3466,2],[3515,2],[3601,1],[3619,1],[3642,1],[3667,1],[3690,3],[3700,1],[3716,1],[3730,1],[3759,1],[3772,1],[3774,2],[3840,2],[3901,2],[3990,1],[3992,2],[4017,2],[4056,2],[4101,2],[4147,1],[4170,1],[4205,1],[4219,1],[4239,1],[4241,2],[4273,1],[4301,1],[4303,2],[4396,2],[4501,2],[4598,1],[4600,2],[4639,2],[4683,2],[4721,1],[4747,3],[4754,1],[4756,2],[4768,1],[4786,1],[4804,1],[4811,1],[4813,2],[4836,2],[4897,1],[4915,1],[4950,1],[4965,1],[4992,1],[5012,1],[5014,2],[5079,1],[5099,1],[5101,2],[5129,1],[5151,1],[5153,2],[5231,2],[5317,1],[5354,1],[5356,2],[5443,2],[5514,1],[5535,3],[5542,1],[5544,2],[5596,2],[5647,1],[5669,1],[5671,2],[5717,2],[5752,1],[5754,2],[5774,1],[5779,2],[5818,1],[5826,2],[5851,1],[5859,1],[5872,1],[5898,1],[5910,1],[5918,1],[5920,2],[5923,2],[5960,2],[5963,2],[5998,1],[6000,2],[6025,1],[6048,2],[6075,3],[6082,1],[6084,2],[6120,1],[6131,1],[6138,1],[6140,2],[6180,1],[6193,2],[6221,2],[6279,3],[6289,1],[6303,1],[6323,1],[6325,2],[6364,1],[6375,1],[6377,2],[6395,1],[6414,1],[6416,2],[6471,1],[6473,2],[6494,2],[6506,1],[6523,2],[6535,1],[6557,2],[6615,2],[6659,2],[6684,1],[6707,2],[6730,3],[6737,1],[6739,2],[6751,1],[6759,2],[6805,1],[6818,2],[6848,1],[6859,1],[6866,1],[6868,2],[6904,2],[6931,1],[6944,2],[6978,1],[6986,2],[7017,1],[7022,2],[7042,2],[7049,1],[7098,2],[7142,1],[7157,1],[7184,1],[7204,1],[7206,2],[7254,1],[7287,1],[7298,1],[7300,2],[7341,1],[7343,2],[7387,1],[7389,2],[7428,2],[7472,2],[7516,1],[7539,1],[7574,1],[7588,1],[7608,1],[7610,2],[7648,1],[7650,2],[7707,1],[7725,1],[7748,1],[7773,1],[7796,3],[7806,1],[7822,1],[7836,1],[7865,1],[7878,1],[7880,2],[7930,1],[7932,2],[7957,2],[7996,2],[8041,2],[8087,1],[8110,1],[8145,1],[8159,1],[8179,1],[8181,2],[8213,1],[8241,1],[8243,2],[8286,1],[8288,2],[8327,2],[8371,2],[8409,1],[8435,3],[8442,1],[8444,2],[8456,1],[8474,1],[8492,1],[8499,1],[8501,2],[8524,2],[8585,1],[8603,1],[8638,1],[8653,1],[8680,1],[8700,1],[8702,2],[8767,1],[8787,1],[8789,2],[8817,1],[8839,1],[8841,2],[8880,1],[8917,1],[8919,2],[8951,1],[8972,3],[8979,1],[8981,2],[9006,1],[9028,1],[9030,2],[9068,1],[9086,1],[9110,1],[9126,2],[9175,1],[9184,2],[9204,1],[9233,1],[9253,1],[9270,1],[9272,1]]},"125":{"position":[[998,2],[1052,1],[1075,1],[1103,1],[1111,1],[1113,1],[1115,2],[1173,1],[1189,1],[1210,1],[1218,1],[1220,1],[1237,2],[1272,2],[1303,1],[1305,2],[1333,1],[1360,2],[1384,3],[1394,1],[1406,1],[1427,1],[1438,1],[1445,1],[1447,2],[1475,2],[1498,1],[1522,1],[1545,1],[1556,1],[1573,1],[1590,2],[1621,2],[1662,1],[1664,2],[1703,2],[1747,2],[1777,1],[1804,2],[1831,3],[1838,1],[1840,2],[1868,3],[1878,1],[1890,1],[1911,1],[1922,1],[1929,1],[1931,4],[1974,4],[1992,1],[2020,1],[2041,1],[2052,1],[2054,1],[2074,3],[2091,1],[2093,2],[2121,1],[2145,1],[2168,1],[2179,1],[2186,1],[2188,2],[2195,1],[2232,1],[2253,1],[2283,1],[2291,2],[2341,1],[2356,1],[2383,1],[2403,1],[2405,2],[2433,1],[2457,1],[2486,1],[2518,1],[2529,1],[2559,1],[2578,2],[2602,2],[2638,1],[2640,2],[2679,2],[2726,2],[2758,1],[2784,3],[2791,1],[2793,2],[2807,3],[2827,3],[2834,1],[2836,2],[2862,1],[2880,1],[2888,1],[2895,1],[2897,2],[2922,1],[2955,1],[2963,1],[2965,2],[2978,1],[2995,2],[3004,2],[3050,1],[3058,1],[3078,3],[3099,1],[3101,2],[3128,1],[3161,1],[3179,1],[3197,1],[3204,1],[3206,2],[3214,1],[3256,1],[3278,1],[3322,1],[3337,1],[3364,1],[3384,1],[3404,1],[3446,1],[3462,1],[3477,1],[3504,1],[3521,2],[3557,2],[3595,1],[3597,2],[3633,1],[3660,2],[3727,1],[3753,2],[3809,1],[3827,1],[3851,1],[3853,3],[3857,2],[3906,1],[3915,2],[3935,1],[3937,1],[3940,2],[3955,1],[3975,1],[3992,1],[4017,2],[4071,1],[4089,1],[4113,1],[4115,3],[4119,2],[4168,1],[4177,2],[4197,1],[4199,1],[4202,2],[4217,1],[4237,1],[4254,1],[4336,1],[4352,1],[4373,1],[4381,1],[4383,2],[4420,2],[4423,2],[4458,2],[4489,1],[4491,2],[4519,1],[4546,2],[4570,3],[4580,1],[4592,1],[4613,1],[4624,1],[4631,1],[4633,2],[4661,2],[4684,1],[4708,1],[4731,1],[4742,1],[4759,1],[4761,2],[4792,2],[4833,1],[4835,2],[4874,2],[4918,2],[4948,1],[4975,2],[5002,3],[5009,1],[5011,2],[5039,3],[5049,1],[5061,1],[5082,1],[5093,1],[5100,1],[5102,4],[5145,4],[5163,1],[5191,1],[5212,1],[5223,1],[5225,1],[5245,3],[5262,1],[5264,2],[5292,1],[5316,1],[5339,1],[5350,1],[5357,1],[5359,2],[5366,1],[5403,1],[5424,1],[5454,1],[5462,2],[5512,1],[5527,1],[5554,1],[5574,1],[5576,2],[5604,1],[5628,1],[5657,1],[5689,1],[5700,1],[5730,1],[5732,2],[5770,1],[5804,1],[5806,2],[5840,1],[5870,1],[5872,2],[5896,2],[5932,1],[5934,2],[5973,2],[6020,2],[6052,1],[6078,3],[6085,1],[6087,2],[6117,3],[6124,1],[6126,2],[6152,1],[6170,1],[6178,1],[6185,1],[6187,2],[6212,1],[6245,1],[6253,1],[6255,1],[6275,3],[6296,1],[6298,2],[6325,1],[6358,1],[6376,1],[6394,1],[6401,1],[6403,2],[6411,1],[6453,1],[6475,1],[6519,1],[6534,1],[6561,1],[6581,1],[6601,1],[6643,1],[6659,1],[6674,1],[6701,1],[6703,2],[6739,2],[6777,1],[6779,2],[6815,1],[6842,2],[6909,1],[6911,2],[6964,1],[6993,1],[6995,2],[7027,1],[7053,1],[7055,2],[7080,1],[7103,1],[7105,2],[7161,1],[7179,1],[7203,1],[7219,2],[7268,1],[7277,2],[7297,1],[7327,1],[7347,1],[7364,1],[7366,2],[7420,1],[7438,1],[7462,1],[7478,2],[7527,1],[7536,2],[7556,1],[7586,1],[7606,1],[7623,1],[7625,1],[7627,2],[7656,1],[7682,2],[7851,2],[7985,2],[8043,2],[8055,2],[8126,2],[8168,2],[8276,2],[8370,2],[8531,2],[8604,2]]}},"keywords":{}}],["0",{"_index":482,"title":{},"content":{"39":{"position":[[316,2]]},"40":{"position":[[402,2]]},"43":{"position":[[95,1]]},"44":{"position":[[667,2],[832,2]]},"53":{"position":[[323,2]]},"54":{"position":[[135,2]]},"60":{"position":[[307,1],[361,1],[445,1],[485,1],[529,1],[539,2],[573,1],[596,1],[620,2],[646,1]]},"61":{"position":[[48,1]]},"65":{"position":[[379,1]]},"76":{"position":[[1448,2]]},"80":{"position":[[115,1]]},"81":{"position":[[159,2]]},"82":{"position":[[153,2],[808,2],[2082,2],[2461,2],[3177,2],[4070,2],[4319,2],[5181,2],[5752,2],[6619,2],[6982,2],[7155,2]]},"96":{"position":[[440,1]]},"97":{"position":[[75,1],[127,1]]},"123":{"position":[[578,1],[793,1],[804,2],[1084,2],[1098,1],[1155,1],[2101,1],[2178,1],[2206,1],[2327,2],[2346,1],[2464,1],[2612,2],[2633,1],[2640,1],[3189,1],[3304,2],[3644,2],[4054,1],[4172,2],[4637,1],[4751,2],[4770,1],[4830,1],[4917,2],[5539,2],[5765,1],[5776,2],[6079,2],[6093,1],[6150,1],[6508,1],[6585,1],[6613,1],[6734,2],[6753,1],[6871,1],[7019,2],[7040,1],[7047,1],[7426,1],[7541,2],[7750,2],[7994,1],[8112,2],[8325,1],[8439,2],[8458,1],[8518,1],[8605,2],[8976,2]]},"125":{"position":[[673,1],[1701,1],[1835,2],[1846,1],[2193,1],[2234,2],[2677,1],[2788,2],[3212,1],[3258,2],[4872,1],[5006,2],[5017,1],[5364,1],[5405,2],[5971,1],[6082,2],[6409,1],[6455,2]]}},"keywords":{}}],["0.25",{"_index":1374,"title":{},"content":{"82":{"position":[[3600,4],[5295,5]]}},"keywords":{}}],["0.75",{"_index":1339,"title":{},"content":{"82":{"position":[[2710,4],[3384,4],[5268,5]]}},"keywords":{}}],["0.75，则扩容",{"_index":1291,"title":{},"content":{"82":{"position":[[1117,8],[3470,8],[4794,8],[6062,8]]}},"keywords":{}}],["05",{"_index":66,"title":{},"content":{"2":{"position":[[239,2],[260,2]]}},"keywords":{}}],["0~9",{"_index":1084,"title":{},"content":{"75":{"position":[[34,3]]}},"keywords":{}}],["0）个互不相交的有限集合",{"_index":1570,"title":{},"content":{"96":{"position":[[522,12]]}},"keywords":{}}],["0）个节点构成的有限集合。当",{"_index":1563,"title":{},"content":{"96":{"position":[[421,14]]}},"keywords":{}}],["0），它具备以下性质",{"_index":1565,"title":{},"content":{"96":{"position":[[466,11]]}},"keywords":{}}],["0，否则每次探测都是原地踏步的死循环",{"_index":1156,"title":{},"content":{"76":{"position":[[1313,19]]}},"keywords":{}}],["0，要根据方向来定",{"_index":903,"title":{},"content":{"60":{"position":[[673,10]]}},"keywords":{}}],["0，这意味着我们浪费了计算机存储空间来表示根本不存在的边。而且即使只有一个边，我们也必须遍历一行来找出这个边，也浪费很多时间",{"_index":951,"title":{},"content":{"65":{"position":[[539,63]]}},"keywords":{}}],["1",{"_index":522,"title":{},"content":{"40":{"position":[[305,1],[342,2],[421,2],[594,1]]},"50":{"position":[[56,1],[73,1],[92,1],[105,1],[190,2]]},"53":{"position":[[255,3],[637,3],[916,1]]},"60":{"position":[[311,1],[387,1],[447,1],[487,1],[531,1],[577,1],[612,1],[665,1]]},"61":{"position":[[52,1]]},"65":{"position":[[442,1],[462,1]]},"72":{"position":[[148,1],[390,1]]},"76":{"position":[[535,1],[849,1]]},"79":{"position":[[186,2]]},"82":{"position":[[2191,3],[3853,1],[3876,1],[3923,2],[3996,2],[4188,1],[4468,1],[4485,1],[4502,1],[6728,3]]},"95":{"position":[[60,1]]},"97":{"position":[[340,1]]},"102":{"position":[[171,2],[202,1]]},"105":{"position":[[85,2],[250,1]]},"107":{"position":[[171,1]]},"108":{"position":[[325,1]]},"111":{"position":[[540,1]]},"117":{"position":[[49,1],[123,1],[144,3],[229,1]]},"123":{"position":[[1402,1],[2130,1],[3584,2],[3769,2],[3849,1],[3911,1],[5114,1],[6397,1],[6537,1],[7690,2],[7875,2],[8802,1]]},"125":{"position":[[2710,2],[2831,2],[3096,2],[3230,1],[6004,2],[6121,2],[6293,2],[6427,1]]}},"keywords":{}}],["1)整除。遍历",{"_index":1382,"title":{},"content":{"82":{"position":[[3906,7]]}},"keywords":{}}],["1)（2的k",{"_index":1661,"title":{},"content":{"105":{"position":[[107,6]]}},"keywords":{}}],["1)，i",{"_index":1656,"title":{},"content":{"105":{"position":[[37,4]]}},"keywords":{}}],["1,2",{"_index":562,"title":{},"content":{"42":{"position":[[113,3]]}},"keywords":{}}],["1,2,3,4",{"_index":732,"title":{},"content":{"49":{"position":[[142,7],[162,7]]}},"keywords":{}}],["1,最小为2^(k",{"_index":1660,"title":{},"content":{"105":{"position":[[97,9]]}},"keywords":{}}],["1.65]，可通过下标值取出信息。字典形式：{&quot;age&quot",{"_index":328,"title":{},"content":{"29":{"position":[[57,39]]}},"keywords":{}}],["1.任意选择一个顶点",{"_index":954,"title":{},"content":{"67":{"position":[[0,10]]},"68":{"position":[[0,10]]}},"keywords":{}}],["1.安装flexibl",{"_index":232,"title":{},"content":{"14":{"position":[[1164,12]]}},"keywords":{}}],["1.将要插入的元素放到最后",{"_index":268,"title":{},"content":{"20":{"position":[[33,13]]}},"keywords":{}}],["10",{"_index":171,"title":{},"content":{"13":{"position":[[210,2],[400,2]]},"14":{"position":[[403,3],[884,2]]},"44":{"position":[[1617,4],[1892,3]]},"72":{"position":[[288,2],[349,2]]},"75":{"position":[[17,2]]},"76":{"position":[[103,2]]},"111":{"position":[[546,2],[564,2],[577,2],[611,2],[625,2],[660,2],[674,2],[694,2],[709,2],[725,2],[763,2],[4317,3],[6229,2]]},"114":{"position":[[164,2]]},"115":{"position":[[148,2]]},"117":{"position":[[247,2]]}},"keywords":{}}],["1000",{"_index":1029,"title":{},"content":{"71":{"position":[[437,4]]}},"keywords":{}}],["1011000",{"_index":843,"title":{},"content":{"54":{"position":[[464,7]]}},"keywords":{}}],["10^2",{"_index":1057,"title":{},"content":{"72":{"position":[[338,4]]}},"keywords":{}}],["10^3",{"_index":1056,"title":{},"content":{"72":{"position":[[327,4]]}},"keywords":{}}],["10，只需要查找",{"_index":1759,"title":{},"content":{"111":{"position":[[516,8]]}},"keywords":{}}],["10，可以通过：parent.right",{"_index":1903,"title":{},"content":{"111":{"position":[[4284,20]]}},"keywords":{}}],["10，最终查找到数据",{"_index":1774,"title":{},"content":{"111":{"position":[[714,10]]}},"keywords":{}}],["10，需要查询",{"_index":1777,"title":{},"content":{"111":{"position":[[755,7]]}},"keywords":{}}],["11",{"_index":662,"title":{},"content":{"44":{"position":[[1701,4],[1947,3]]},"109":{"position":[[168,2]]},"111":{"position":[[645,2],[685,2]]},"114":{"position":[[173,2]]},"115":{"position":[[236,2]]},"117":{"position":[[250,2]]}},"keywords":{}}],["1100100",{"_index":841,"title":{},"content":{"54":{"position":[[421,7]]}},"keywords":{}}],["111111111111111111111111111111111111",{"_index":146,"title":{},"content":{"9":{"position":[[4,36]]},"10":{"position":[[4,36]]},"56":{"position":[[0,36]]}},"keywords":{}}],["11。情况",{"_index":1931,"title":{},"content":{"111":{"position":[[5043,5]]}},"keywords":{}}],["11，所以",{"_index":1773,"title":{},"content":{"111":{"position":[[668,5]]}},"keywords":{}}],["11，此时通过：this.root",{"_index":1914,"title":{},"content":{"111":{"position":[[4679,17],[5003,17]]}},"keywords":{}}],["11；情况",{"_index":1916,"title":{},"content":{"111":{"position":[[4718,5]]}},"keywords":{}}],["12",{"_index":2037,"title":{},"content":{"114":{"position":[[182,2]]},"115":{"position":[[173,2]]},"117":{"position":[[253,2]]}},"keywords":{}}],["123",{"_index":1458,"title":{},"content":{"87":{"position":[[751,5],[983,5]]},"123":{"position":[[3075,3],[3475,3]]}},"keywords":{}}],["12345",{"_index":2248,"title":{},"content":{"123":{"position":[[4405,5],[4510,5],[5240,5],[5452,5]]}},"keywords":{}}],["13",{"_index":1094,"title":{},"content":{"76":{"position":[[89,2],[229,2],[238,2],[285,2],[371,2],[395,2],[690,2]]},"111":{"position":[[596,2],[636,2]]},"114":{"position":[[191,2]]},"115":{"position":[[191,2]]},"117":{"position":[[256,2]]}},"keywords":{}}],["13。查询过程中不会遍历整个哈希表，只要查询到空位置，就停止，因为插入",{"_index":1116,"title":{},"content":{"76":{"position":[[335,35]]}},"keywords":{}}],["13，所以",{"_index":1770,"title":{},"content":{"111":{"position":[[619,5]]}},"keywords":{}}],["13，所谓合适的位置指的是空的位置，如上图中",{"_index":1103,"title":{},"content":{"76":{"position":[[182,22]]}},"keywords":{}}],["13，第三次找",{"_index":1780,"title":{},"content":{"111":{"position":[[804,7]]}},"keywords":{}}],["14",{"_index":1962,"title":{},"content":{"111":{"position":[[6453,2]]},"114":{"position":[[200,2]]},"115":{"position":[[182,2]]}},"keywords":{}}],["14，14",{"_index":1395,"title":{},"content":{"82":{"position":[[4452,5]]}},"keywords":{}}],["15",{"_index":660,"title":{},"content":{"44":{"position":[[1659,4],[2002,3],[2287,3],[2596,2]]},"82":{"position":[[4472,2]]},"109":{"position":[[173,2]]},"111":{"position":[[735,2],[6374,2],[6385,2],[6424,2],[6470,2]]},"114":{"position":[[209,2]]},"115":{"position":[[227,2]]}},"keywords":{}}],["15…。我们发现如果把每次二分的数据拿出来以树的形式表示的话就是二叉搜索树。这就是数组二分法查找效率之所以高的原因",{"_index":1781,"title":{},"content":{"111":{"position":[[812,58]]}},"keywords":{}}],["15，可知节点",{"_index":1961,"title":{},"content":{"111":{"position":[[6445,7],[6491,7]]}},"keywords":{}}],["16",{"_index":1398,"title":{},"content":{"82":{"position":[[4489,2]]}},"keywords":{}}],["16.14",{"_index":96,"title":{},"content":{"6":{"position":[[16,5]]}},"keywords":{}}],["163",{"_index":1147,"title":{},"content":{"76":{"position":[[1012,3]]}},"keywords":{}}],["165}，可以通过",{"_index":333,"title":{},"content":{"29":{"position":[[156,9]]}},"keywords":{}}],["17",{"_index":1062,"title":{},"content":{"72":{"position":[[411,2]]},"82":{"position":[[4506,2],[4525,3]]}},"keywords":{}}],["18",{"_index":401,"title":{},"content":{"33":{"position":[[811,4],[928,3],[1160,3],[1255,2],[1393,4]]},"44":{"position":[[1785,4],[2057,3],[2342,3],[2601,2]]},"111":{"position":[[6499,2]]},"114":{"position":[[218,2]]},"115":{"position":[[200,2]]}},"keywords":{}}],["180",{"_index":1519,"title":{},"content":{"95":{"position":[[103,4]]}},"keywords":{}}],["19",{"_index":329,"title":{},"content":{"29":{"position":[[97,3]]},"72":{"position":[[157,2]]}},"keywords":{}}],["1、new",{"_index":513,"title":{},"content":{"40":{"position":[[159,5]]}},"keywords":{}}],["1、posit",{"_index":2222,"title":{},"content":{"123":{"position":[[3155,10],[4020,10],[4603,10],[7392,10],[7960,10],[8291,10]]},"125":{"position":[[1667,10],[2643,10],[4838,10],[5937,10]]}},"keywords":{}}],["1、保存旧的",{"_index":1360,"title":{},"content":{"82":{"position":[[3080,6],[7058,6]]}},"keywords":{}}],["1、创建一个新集合",{"_index":1476,"title":{},"content":{"89":{"position":[[41,9]]},"90":{"position":[[55,9]]},"91":{"position":[[45,9]]},"93":{"position":[[700,9],[1033,9],[1282,9]]}},"keywords":{}}],["1、创建双向链表节点",{"_index":2320,"title":{},"content":{"125":{"position":[[1308,10],[4494,10]]}},"keywords":{}}],["1、创建新节点",{"_index":2156,"title":{},"content":{"123":{"position":[[1008,7],[6003,7]]}},"keywords":{}}],["1、删除",{"_index":2352,"title":{},"content":{"125":{"position":[[3600,4],[6782,4]]}},"keywords":{}}],["1、删除的是叶子节点的情况",{"_index":1904,"title":{},"content":{"111":{"position":[[4325,13],[8270,13]]}},"keywords":{}}],["1、定义存储",{"_index":1227,"title":{},"content":{"81":{"position":[[124,6]]}},"keywords":{}}],["1、对",{"_index":2195,"title":{},"content":{"123":{"position":[[2153,3],[6560,3]]}},"keywords":{}}],["1、找到后续节点",{"_index":1992,"title":{},"content":{"111":{"position":[[7077,8],[9339,8]]}},"keywords":{}}],["1、根据",{"_index":1263,"title":{},"content":{"82":{"position":[[526,4],[5470,4]]}},"keywords":{}}],["1。update(posit",{"_index":2130,"title":{},"content":{"123":{"position":[[443,18]]},"125":{"position":[[533,18]]}},"keywords":{}}],["1。如",{"_index":1592,"title":{},"content":{"97":{"position":[[363,3]]}},"keywords":{}}],["1。那么这种情况下会造成空间的浪费，解决办法需自己去研究下",{"_index":948,"title":{},"content":{"65":{"position":[[469,30]]}},"keywords":{}}],["1号节点堆化结果",{"_index":300,"title":{},"content":{"24":{"position":[[277,9]]}},"keywords":{}}],["1次方）；对任何非空二叉树，若",{"_index":1662,"title":{},"content":{"105":{"position":[[114,15]]}},"keywords":{}}],["1（2的k次方",{"_index":1659,"title":{},"content":{"105":{"position":[[75,7]]}},"keywords":{}}],["1），并拼接到一起",{"_index":836,"title":{},"content":{"54":{"position":[[277,10]]}},"keywords":{}}],["1），这样在查找时遇到",{"_index":1123,"title":{},"content":{"76":{"position":[[523,11]]}},"keywords":{}}],["1，b",{"_index":1034,"title":{},"content":{"72":{"position":[[52,3]]}},"keywords":{}}],["1，不能保证一定可以",{"_index":902,"title":{},"content":{"60":{"position":[[654,10]]}},"keywords":{}}],["1，也可以保证",{"_index":899,"title":{},"content":{"60":{"position":[[604,7]]}},"keywords":{}}],["1，因为只有空白的单元才能放入元素；链地址法的装填因子可以大于",{"_index":1170,"title":{},"content":{"76":{"position":[[1635,31]]}},"keywords":{}}],["1，因为只要愿意，拉链法可以无限延伸下去",{"_index":1171,"title":{},"content":{"76":{"position":[[1667,21]]}},"keywords":{}}],["1，并且左右两个子树都是一棵平衡二叉树",{"_index":1706,"title":{},"content":{"109":{"position":[[58,20]]}},"keywords":{}}],["1，所以这个哈希表可以无限制地插入新数据。但是，随着数据量的增多，storag",{"_index":1333,"title":{},"content":{"82":{"position":[[2585,40]]}},"keywords":{}}],["1：current",{"_index":1911,"title":{},"content":{"111":{"position":[[4638,9]]}},"keywords":{}}],["1：从节点",{"_index":1951,"title":{},"content":{"111":{"position":[[6153,5],[6284,5],[6418,5]]}},"keywords":{}}],["1：当",{"_index":1823,"title":{},"content":{"111":{"position":[[1762,3],[1924,3]]}},"keywords":{}}],["1：非空左子树的所有键值小于其根节点的键值。比如三中节点",{"_index":1743,"title":{},"content":{"111":{"position":[[84,28]]}},"keywords":{}}],["1；如下图所示：h，e，i，j，g",{"_index":1667,"title":{},"content":{"105":{"position":[[180,17]]}},"keywords":{}}],["1；深度为",{"_index":1657,"title":{},"content":{"105":{"position":[[48,5]]}},"keywords":{}}],["2",{"_index":420,"title":{},"content":{"33":{"position":[[1469,1]]},"39":{"position":[[1077,1]]},"49":{"position":[[194,1]]},"50":{"position":[[58,1],[71,1],[90,1],[182,1]]},"53":{"position":[[641,2],[745,1],[857,1],[918,1]]},"54":{"position":[[166,3],[206,3]]},"60":{"position":[[333,1]]},"82":{"position":[[1217,4],[2383,5],[3570,4],[3825,5],[3894,1],[3914,1],[4026,2],[4119,1],[4277,2],[4383,1],[4894,4],[5083,5],[6162,4],[6920,5]]},"87":{"position":[[1075,1]]},"99":{"position":[[104,1]]},"102":{"position":[[90,1]]},"105":{"position":[[150,1],[222,1]]},"107":{"position":[[78,1]]},"109":{"position":[[205,1]]},"111":{"position":[[604,1]]},"117":{"position":[[51,1],[119,1],[132,1],[140,1],[231,1]]},"121":{"position":[[278,1]]}},"keywords":{}}],["2*i+1",{"_index":260,"title":{},"content":{"18":{"position":[[88,7]]}},"keywords":{}}],["2*i，右子节点序号为",{"_index":259,"title":{},"content":{"18":{"position":[[76,11]]}},"keywords":{}}],["2.1.1",{"_index":1944,"title":{},"content":{"111":{"position":[[5771,5],[5804,5],[5848,5],[9017,5],[9050,5],[9094,5]]}},"keywords":{}}],["2.1.1、currentnod",{"_index":1938,"title":{},"content":{"111":{"position":[[5375,17],[8621,17]]}},"keywords":{}}],["2.1.2、parentnode.left",{"_index":1939,"title":{},"content":{"111":{"position":[[5408,21],[8654,21]]}},"keywords":{}}],["2.1.3、parentnode.right",{"_index":1940,"title":{},"content":{"111":{"position":[[5452,22],[8698,22]]}},"keywords":{}}],["2.1、currentnod",{"_index":1936,"title":{},"content":{"111":{"position":[[5334,15],[8580,15]]}},"keywords":{}}],["2.2、currentnod",{"_index":1942,"title":{},"content":{"111":{"position":[[5730,15],[8976,15]]}},"keywords":{}}],["2.从底向上，如果父结点比该元素小，则该节点和父结点交换，直到无法交换",{"_index":270,"title":{},"content":{"20":{"position":[[73,35]]}},"keywords":{}}],["2.在",{"_index":234,"title":{},"content":{"14":{"position":[[1201,3]]}},"keywords":{}}],["2.找到走1步就可以到达的顶点，分别遍历他们（顺序随意，但是需要在一起",{"_index":955,"title":{},"content":{"67":{"position":[[11,36]]}},"keywords":{}}],["2.随机找到走1步就可以到达的顶点并遍历他，如果都遍历访问过，则返回到存在步数为1可到达的没有被访问遍历的节点处",{"_index":968,"title":{},"content":{"68":{"position":[[11,56]]}},"keywords":{}}],["20",{"_index":664,"title":{},"content":{"44":{"position":[[1743,4],[2112,3],[2397,3],[2606,2]]},"72":{"position":[[152,2],[401,2]]},"114":{"position":[[227,2]]},"115":{"position":[[218,2]]}},"keywords":{}}],["2019",{"_index":65,"title":{},"content":{"2":{"position":[[234,4]]}},"keywords":{}}],["213，这种情况会造成步长不一的一种聚集（虽然这种情况出现的概率较线性探测的聚集要小），同样会影响性能",{"_index":1149,"title":{},"content":{"76":{"position":[[1021,52]]}},"keywords":{}}],["23、24、25、26、27，这就意味着下标值为",{"_index":1127,"title":{},"content":{"76":{"position":[[597,24]]}},"keywords":{}}],["25",{"_index":2038,"title":{},"content":{"114":{"position":[[236,2]]},"115":{"position":[[209,2]]}},"keywords":{}}],["26，空格为",{"_index":1038,"title":{},"content":{"72":{"position":[[75,6]]}},"keywords":{}}],["27",{"_index":1061,"title":{},"content":{"72":{"position":[[406,2],[579,2]]}},"keywords":{}}],["27^2",{"_index":1060,"title":{},"content":{"72":{"position":[[394,4]]}},"keywords":{}}],["27^3",{"_index":1059,"title":{},"content":{"72":{"position":[[383,4]]}},"keywords":{}}],["27（不考虑大写情况",{"_index":1039,"title":{},"content":{"72":{"position":[[82,12]]}},"keywords":{}}],["2^(i",{"_index":1635,"title":{},"content":{"102":{"position":[[166,4]]}},"keywords":{}}],["2^(k",{"_index":1641,"title":{},"content":{"102":{"position":[[221,5]]}},"keywords":{}}],["2^(k+1",{"_index":1639,"title":{},"content":{"102":{"position":[[194,7]]}},"keywords":{}}],["2i+1。这个性质使得完全二叉树利用数组存储时可以极大地节省空间，以及利用序号找到某个节点的父结点和子节点，后续二叉树的存储会详细介绍",{"_index":1702,"title":{},"content":{"108":{"position":[[367,68]]}},"keywords":{}}],["2i，右子节点的序号是",{"_index":1701,"title":{},"content":{"108":{"position":[[355,11]]}},"keywords":{}}],["2、从当前集合中取出每一个",{"_index":1492,"title":{},"content":{"90":{"position":[[101,13]]},"91":{"position":[[89,13]]},"93":{"position":[[1078,13],[1325,13]]}},"keywords":{}}],["2、使用霍纳法则（秦九韶算法），计算",{"_index":1229,"title":{},"content":{"81":{"position":[[165,18]]}},"keywords":{}}],["2、创建新的双向链表节点",{"_index":2327,"title":{},"content":{"125":{"position":[[1750,12],[4921,12]]}},"keywords":{}}],["2、创建新节点",{"_index":2198,"title":{},"content":{"123":{"position":[[2255,7],[6662,7]]}},"keywords":{}}],["2、删除指定",{"_index":2255,"title":{},"content":{"123":{"position":[[4686,6],[8374,6]]}},"keywords":{}}],["2、删除的是只有一个子节点的节点",{"_index":1907,"title":{},"content":{"111":{"position":[[4550,16],[5249,16],[8495,16]]}},"keywords":{}}],["2、判断是否为根节点",{"_index":1995,"title":{},"content":{"111":{"position":[[7137,10],[9399,10]]}},"keywords":{}}],["2、在",{"_index":2355,"title":{},"content":{"125":{"position":[[3663,3],[6845,3]]}},"keywords":{}}],["2、将",{"_index":516,"title":{},"content":{"40":{"position":[[207,3]]}},"keywords":{}}],["2、将当前集合（this）的所有",{"_index":1478,"title":{},"content":{"89":{"position":[[80,16]]},"93":{"position":[[738,16]]}},"keywords":{}}],["2、根据",{"_index":1268,"title":{},"content":{"82":{"position":[[612,4],[5556,4]]}},"keywords":{}}],["2、根据不同情况删除元素",{"_index":2340,"title":{},"content":{"125":{"position":[[2729,12],[6023,12]]}},"keywords":{}}],["2、痛过循环遍历，找到指定",{"_index":2242,"title":{},"content":{"123":{"position":[[4104,13],[8044,13]]}},"keywords":{}}],["2、获取指定",{"_index":2224,"title":{},"content":{"123":{"position":[[3238,6],[7475,6]]}},"keywords":{}}],["2、追加元素",{"_index":2322,"title":{},"content":{"125":{"position":[[1363,6],[4549,6]]}},"keywords":{}}],["2、追加新节点",{"_index":2158,"title":{},"content":{"123":{"position":[[1056,7],[6051,7]]}},"keywords":{}}],["2、重置所有属性",{"_index":1362,"title":{},"content":{"82":{"position":[[3136,8],[7114,8]]}},"keywords":{}}],["2号节点堆化结果",{"_index":299,"title":{},"content":{"24":{"position":[[266,9]]}},"keywords":{}}],["2比如",{"_index":884,"title":{},"content":{"60":{"position":[[383,3]]}},"keywords":{}}],["2，c",{"_index":1035,"title":{},"content":{"72":{"position":[[58,3]]}},"keywords":{}}],["2，右子节点的序号等于父节点序号",{"_index":2065,"title":{},"content":{"117":{"position":[[102,16]]}},"keywords":{}}],["2：current",{"_index":1917,"title":{},"content":{"111":{"position":[[4724,9]]}},"keywords":{}}],["2：从节点",{"_index":1955,"title":{},"content":{"111":{"position":[[6196,5],[6327,5],[6464,5]]}},"keywords":{}}],["2：当",{"_index":1825,"title":{},"content":{"111":{"position":[[1786,3],[1948,3]]}},"keywords":{}}],["2：非空右子树的所有键值大于其根节点的键值；比如三中节点",{"_index":1745,"title":{},"content":{"111":{"position":[[136,28]]}},"keywords":{}}],["2；叶节点（leaf）：度为",{"_index":1576,"title":{},"content":{"97":{"position":[[60,14]]}},"keywords":{}}],["2；树的度：树的所有节点中最大的度数，如上图树的度为",{"_index":1575,"title":{},"content":{"97":{"position":[[33,26]]}},"keywords":{}}],["2；树的深度（depth）：树种所有节点中的最大层次是这棵树的深度，如上图树的深度为",{"_index":1594,"title":{},"content":{"97":{"position":[[380,42]]}},"keywords":{}}],["3",{"_index":322,"title":{},"content":{"27":{"position":[[337,1]]},"44":{"position":[[2527,1]]},"49":{"position":[[277,1]]},"50":{"position":[[52,1],[69,1],[101,1],[174,1]]},"53":{"position":[[644,2],[694,1]]},"60":{"position":[[322,1],[537,1]]},"72":{"position":[[379,1]]},"76":{"position":[[1019,1]]},"99":{"position":[[77,1]]},"109":{"position":[[203,1]]},"111":{"position":[[369,1],[388,1],[653,1],[4039,1]]},"117":{"position":[[53,1],[233,1]]},"123":{"position":[[5726,1]]},"125":{"position":[[8135,1]]}},"keywords":{}}],["3.找到走2步就可以到达的顶点",{"_index":956,"title":{},"content":{"67":{"position":[[48,21]]}},"keywords":{}}],["30",{"_index":67,"title":{},"content":{"2":{"position":[[242,2],[263,2]]}},"keywords":{}}],["31",{"_index":1226,"title":{},"content":{"81":{"position":[[117,3]]}},"keywords":{}}],["33。而线性探测就是从",{"_index":1099,"title":{},"content":{"76":{"position":[[139,11]]}},"keywords":{}}],["375",{"_index":170,"title":{},"content":{"13":{"position":[[204,3],[220,3]]},"14":{"position":[[378,3],[397,3]]}},"keywords":{}}],["3~7",{"_index":1131,"title":{},"content":{"76":{"position":[[705,3]]}},"keywords":{}}],["3、4、5、6、7",{"_index":1128,"title":{},"content":{"76":{"position":[[622,9]]}},"keywords":{}}],["3、修改节点",{"_index":2244,"title":{},"content":{"123":{"position":[[4244,6],[8184,6]]}},"keywords":{}}],["3、删除的是有两个子节点的节点",{"_index":1991,"title":{},"content":{"111":{"position":[[7049,15],[9311,15]]}},"keywords":{}}],["3、判断多种插入情况",{"_index":2328,"title":{},"content":{"125":{"position":[[1807,10],[4978,10]]}},"keywords":{}}],["3、判断是否存在",{"_index":1271,"title":{},"content":{"82":{"position":[[673,8],[5617,8]]}},"keywords":{}}],["3、对",{"_index":1233,"title":{},"content":{"81":{"position":[[277,3]]}},"keywords":{}}],["3、将",{"_index":1482,"title":{},"content":{"89":{"position":[[182,3]]},"93":{"position":[[839,3]]}},"keywords":{}}],["3、将后续的左节点改为被删除的左节点",{"_index":1996,"title":{},"content":{"111":{"position":[[7303,18],[9565,18]]}},"keywords":{}}],["3、开始数数",{"_index":520,"title":{},"content":{"40":{"position":[[288,6]]}},"keywords":{}}],["3、插入节点",{"_index":2199,"title":{},"content":{"123":{"position":[[2303,6],[6710,6]]}},"keywords":{}}],["3、更新链表长度",{"_index":2262,"title":{},"content":{"123":{"position":[[5104,8],[8792,8]]}},"keywords":{}}],["3、返回",{"_index":2226,"title":{},"content":{"123":{"position":[[3376,4],[7613,4]]}},"keywords":{}}],["3、追加完新节点后，链表长度",{"_index":2171,"title":{},"content":{"123":{"position":[[1385,14],[6380,14]]}},"keywords":{}}],["3、遍历",{"_index":1364,"title":{},"content":{"82":{"position":[[3206,4],[7184,4]]}},"keywords":{}}],["3号节点堆化结果",{"_index":298,"title":{},"content":{"24":{"position":[[255,9]]}},"keywords":{}}],["3号节点进行自顶向下（沉底）堆化，注意，顺序是从后往前堆化，从3号节点开始，一直到1号节点",{"_index":297,"title":{},"content":{"24":{"position":[[208,46]]}},"keywords":{}}],["3，以此类推",{"_index":1036,"title":{},"content":{"72":{"position":[[64,6]]}},"keywords":{}}],["3，你点击前进按钮，我们将",{"_index":743,"title":{},"content":{"49":{"position":[[263,13]]}},"keywords":{}}],["3：current",{"_index":1924,"title":{},"content":{"111":{"position":[[4821,9]]}},"keywords":{}}],["3：左、右子树本身也都是二叉搜索树",{"_index":1747,"title":{},"content":{"111":{"position":[[188,18]]}},"keywords":{}}],["3；节点的层次（level）：规定根节点在",{"_index":1590,"title":{},"content":{"97":{"position":[[318,21]]}},"keywords":{}}],["3；这样单词也可以用该种方式来表示：cat",{"_index":1058,"title":{},"content":{"72":{"position":[[354,22]]}},"keywords":{}}],["4",{"_index":550,"title":{},"content":{"40":{"position":[[949,3]]},"50":{"position":[[50,1],[84,1],[103,1],[166,1]]},"60":{"position":[[409,1]]},"61":{"position":[[59,1]]},"72":{"position":[[345,1]]},"82":{"position":[[4204,2]]},"109":{"position":[[201,1]]},"111":{"position":[[525,1],[702,1]]},"117":{"position":[[55,1],[235,1]]}},"keywords":{}}],["4,3",{"_index":738,"title":{},"content":{"49":{"position":[[218,3]]}},"keywords":{}}],["4.以此类推，遍历完所有顶点",{"_index":957,"title":{},"content":{"67":{"position":[[77,14]]}},"keywords":{}}],["4.以此类推，遍历完所有顶点（顶点不可以重复遍历",{"_index":969,"title":{},"content":{"68":{"position":[[75,25]]}},"keywords":{}}],["43",{"_index":1046,"title":{},"content":{"72":{"position":[[170,2]]}},"keywords":{}}],["43，比如",{"_index":1050,"title":{},"content":{"72":{"position":[[229,5]]}},"keywords":{}}],["43，那么就把",{"_index":1045,"title":{},"content":{"72":{"position":[[162,7]]}},"keywords":{}}],["45",{"_index":1623,"title":{},"content":{"101":{"position":[[28,3]]}},"keywords":{}}],["456",{"_index":2218,"title":{},"content":{"123":{"position":[[3082,3],[4414,3],[4522,3],[5252,3],[5464,3]]}},"keywords":{}}],["4、判断是插入数据操作还是修改数据操作",{"_index":1273,"title":{},"content":{"82":{"position":[[775,19],[5719,19]]}},"keywords":{}}],["4、获取最后剩下的那个人",{"_index":538,"title":{},"content":{"40":{"position":[[684,12]]}},"keywords":{}}],["4（层数",{"_index":1595,"title":{},"content":{"97":{"position":[[423,6]]}},"keywords":{}}],["4：current",{"_index":1929,"title":{},"content":{"111":{"position":[[4962,9]]}},"keywords":{}}],["4；满足",{"_index":1672,"title":{},"content":{"105":{"position":[[235,4]]}},"keywords":{}}],["5",{"_index":755,"title":{},"content":{"50":{"position":[[67,1],[88,1],[107,1],[158,1],[359,1]]},"60":{"position":[[449,1],[489,1],[533,1]]},"72":{"position":[[334,1]]},"76":{"position":[[1420,1]]},"109":{"position":[[199,1]]},"111":{"position":[[6317,1],[6805,1]]},"114":{"position":[[124,1]]},"115":{"position":[[132,1]]},"117":{"position":[[57,1],[237,1]]}},"keywords":{}}],["54321",{"_index":2251,"title":{},"content":{"123":{"position":[[4516,5],[5246,5],[5458,5]]}},"keywords":{}}],["5、bucket",{"_index":1285,"title":{},"content":{"82":{"position":[[999,8],[5944,8]]}},"keywords":{}}],["5、返回这个人在原数组中对应的索引",{"_index":541,"title":{},"content":{"40":{"position":[[731,17]]}},"keywords":{}}],["5），满足需求，并且结果不可能为",{"_index":1162,"title":{},"content":{"76":{"position":[[1431,16]]}},"keywords":{}}],["5，此时通过：parent.left",{"_index":1921,"title":{},"content":{"111":{"position":[[4777,18],[5102,18]]}},"keywords":{}}],["5：current",{"_index":1932,"title":{},"content":{"111":{"position":[[5049,9]]}},"keywords":{}}],["5；a，b，c，f",{"_index":1669,"title":{},"content":{"105":{"position":[[208,9]]}},"keywords":{}}],["5；情况",{"_index":1923,"title":{},"content":{"111":{"position":[[4816,4],[5142,4]]}},"keywords":{}}],["6",{"_index":749,"title":{},"content":{"50":{"position":[[5,1],[54,1],[75,1],[86,1],[109,1],[150,1]]},"60":{"position":[[535,1]]},"72":{"position":[[323,1]]},"111":{"position":[[113,1],[130,2],[165,1],[182,2]]},"114":{"position":[[132,1]]},"115":{"position":[[124,1]]},"117":{"position":[[59,1],[239,1]]}},"keywords":{}}],["60337",{"_index":1063,"title":{},"content":{"72":{"position":[[416,6]]}},"keywords":{}}],["63",{"_index":1148,"title":{},"content":{"76":{"position":[[1016,2]]}},"keywords":{}}],["6543",{"_index":1055,"title":{},"content":{"72":{"position":[[316,4]]}},"keywords":{}}],["654321）。b",{"_index":769,"title":{},"content":{"50":{"position":[[257,9]]}},"keywords":{}}],["654321）。c",{"_index":777,"title":{},"content":{"50":{"position":[[323,9]]}},"keywords":{}}],["6，5，4，3，2，1",{"_index":751,"title":{},"content":{"50":{"position":[[11,11]]}},"keywords":{}}],["6，所以错误。d",{"_index":782,"title":{},"content":{"50":{"position":[[367,8]]}},"keywords":{}}],["6：current",{"_index":1934,"title":{},"content":{"111":{"position":[[5147,9]]}},"keywords":{}}],["7",{"_index":1223,"title":{},"content":{"81":{"position":[[73,2]]},"82":{"position":[[182,2],[201,2],[2269,1],[2547,1],[3711,1],[4969,1],[5210,2],[5229,2],[6806,1]]},"109":{"position":[[171,1]]},"111":{"position":[[6244,1],[6254,1],[6290,1],[6333,1],[6812,1],[6869,1]]},"114":{"position":[[140,1]]},"115":{"position":[[165,1]]},"117":{"position":[[61,1],[241,1]]}},"keywords":{}}],["7,8。当进行入队、出队操作的时候，front",{"_index":564,"title":{},"content":{"42":{"position":[[128,23]]}},"keywords":{}}],["7，可知节点",{"_index":1959,"title":{},"content":{"111":{"position":[[6310,6],[6353,6]]}},"keywords":{}}],["8",{"_index":570,"title":{},"content":{"42":{"position":[[246,1]]},"111":{"position":[[4269,2],[6186,1],[6360,1],[6862,1]]},"114":{"position":[[148,1]]},"115":{"position":[[140,1]]},"117":{"position":[[63,1],[243,1]]}},"keywords":{}}],["8，可以通过：parent.left",{"_index":1901,"title":{},"content":{"111":{"position":[[4238,18]]}},"keywords":{}}],["9",{"_index":891,"title":{},"content":{"60":{"position":[[451,1],[491,1]]},"61":{"position":[[63,1]]},"111":{"position":[[554,1],[588,1],[4915,2],[5242,2],[6114,1],[6124,1],[6159,1],[6202,1]]},"114":{"position":[[156,1]]},"115":{"position":[[157,1]]},"117":{"position":[[65,1],[245,1]]}},"keywords":{}}],["9，可知节点",{"_index":1953,"title":{},"content":{"111":{"position":[[6179,6],[6222,6]]}},"keywords":{}}],["9，所以",{"_index":1765,"title":{},"content":{"111":{"position":[[572,4]]}},"keywords":{}}],["9，此时通过：parent.right",{"_index":1927,"title":{},"content":{"111":{"position":[[4875,19],[5201,19]]}},"keywords":{}}],["9，第二次找",{"_index":1779,"title":{},"content":{"111":{"position":[[797,6]]}},"keywords":{}}],["a[i][j]=n",{"_index":924,"title":{},"content":{"64":{"position":[[57,9]]}},"keywords":{}}],["aa",{"_index":2185,"title":{},"content":{"123":{"position":[[1985,2],[3079,2],[3524,2],[4411,2]]}},"keywords":{}}],["aaa",{"_index":145,"title":{"9":{"position":[[0,3]]},"10":{"position":[[0,3]]},"55":{"position":[[0,3]]}},"content":{"9":{"position":[[0,3]]},"10":{"position":[[0,3]]}},"keywords":{}}],["aaaaaaaaaa）所表示的数字就非常大，此时要求很大容量的数组，然而其中却有许多下标值指向的是无效的数据（比如不存在",{"_index":1065,"title":{},"content":{"72":{"position":[[452,60]]}},"keywords":{}}],["abc",{"_index":1460,"title":{},"content":{"87":{"position":[[774,4]]}},"keywords":{}}],["abov",{"_index":97,"title":{},"content":{"6":{"position":[[25,6]]}},"keywords":{}}],["ad",{"_index":60,"title":{},"content":{"2":{"position":[[151,5]]},"7":{"position":[[102,5]]},"44":{"position":[[639,5],[850,5],[918,8]]}},"keywords":{}}],["adapt",{"_index":179,"title":{},"content":{"13":{"position":[[312,9],[467,9],[495,7]]},"14":{"position":[[796,9],[951,9],[979,7]]}},"keywords":{}}],["adapter.j",{"_index":176,"title":{},"content":{"13":{"position":[[264,10],[539,10]]},"14":{"position":[[748,10],[1023,10],[1132,10]]}},"keywords":{}}],["add",{"_index":54,"title":{},"content":{"2":{"position":[[68,3]]},"14":{"position":[[41,3]]},"87":{"position":[[648,5]]},"89":{"position":[[288,5]]},"93":{"position":[[944,5]]}},"keywords":{}}],["add(valu",{"_index":1428,"title":{},"content":{"86":{"position":[[0,10]]},"87":{"position":[[168,10],[192,10]]},"93":{"position":[[183,10],[207,10]]}},"keywords":{}}],["adipisc",{"_index":20,"title":{},"content":{"0":{"position":[[166,10],[345,10],[524,10],[703,10],[882,10],[1061,10],[1240,10],[1419,10],[1598,10],[1777,10],[1956,10],[2135,10],[2314,10],[2493,10],[2672,10],[2851,10]]},"26":{"position":[[40,10]]}},"keywords":{}}],["ag",{"_index":407,"title":{},"content":{"33":{"position":[[923,4],[1154,5]]}},"keywords":{}}],["alert('button",{"_index":45,"title":{},"content":{"1":{"position":[[151,13]]}},"keywords":{}}],["aliquam",{"_index":30,"title":{},"content":{"0":{"position":[[259,7],[438,7],[617,7],[796,7],[975,7],[1154,7],[1333,7],[1512,7],[1691,7],[1870,7],[2049,7],[2228,7],[2407,7],[2586,7],[2765,7],[2944,7]]},"26":{"position":[[133,7]]}},"keywords":{}}],["amet",{"_index":18,"title":{},"content":{"0":{"position":[[148,5],[300,4],[327,5],[479,4],[506,5],[658,4],[685,5],[837,4],[864,5],[1016,4],[1043,5],[1195,4],[1222,5],[1374,4],[1401,5],[1553,4],[1580,5],[1732,4],[1759,5],[1911,4],[1938,5],[2090,4],[2117,5],[2269,4],[2296,5],[2448,4],[2475,5],[2627,4],[2654,5],[2806,4],[2833,5],[2985,4]]},"26":{"position":[[22,5],[174,4]]}},"keywords":{}}],["amf",{"_index":233,"title":{},"content":{"14":{"position":[[1183,4],[1233,5]]}},"keywords":{}}],["amp",{"_index":1204,"title":{},"content":{"79":{"position":[[172,5]]}},"keywords":{}}],["amp;&amp",{"_index":1324,"title":{},"content":{"82":{"position":[[2271,10],[3713,10],[4971,10],[6808,10]]},"111":{"position":[[4369,10],[8314,10]]}},"keywords":{}}],["app",{"_index":155,"title":{},"content":{"13":{"position":[[21,3]]},"14":{"position":[[20,3],[27,3],[80,3],[98,3],[234,3],[534,3],[590,3],[645,3]]}},"keywords":{}}],["append",{"_index":2153,"title":{},"content":{"123":{"position":[[971,8],[5966,8]]},"125":{"position":[[1278,8],[4464,8],[7685,8]]}},"keywords":{}}],["append(data",{"_index":2155,"title":{},"content":{"123":{"position":[[990,12],[5985,12]]}},"keywords":{}}],["append(el",{"_index":2125,"title":{},"content":{"123":{"position":[[305,15]]},"125":{"position":[[387,15],[1240,15],[1287,15],[4426,15],[4473,15]]}},"keywords":{}}],["author",{"_index":59,"title":{},"content":{"2":{"position":[[136,7]]}},"keywords":{}}],["authors.yml",{"_index":61,"title":{},"content":{"2":{"position":[[160,12]]}},"keywords":{}}],["automat",{"_index":107,"title":{},"content":{"7":{"position":[[85,13]]},"8":{"position":[[433,13]]}},"keywords":{}}],["avl",{"_index":1724,"title":{},"content":{"109":{"position":[[509,3],[554,3],[661,3]]}},"keywords":{}}],["a，b",{"_index":940,"title":{},"content":{"65":{"position":[[353,3]]}},"keywords":{}}],["a：5",{"_index":753,"title":{},"content":{"50":{"position":[[46,3]]}},"keywords":{}}],["b",{"_index":674,"title":{},"content":{"44":{"position":[[2594,1]]},"48":{"position":[[68,1],[74,1]]},"69":{"position":[[61,1],[88,1],[162,1],[189,1],[230,1],[251,1],[274,1],[301,1],[354,1],[383,1],[414,1],[487,1],[525,1],[573,1],[606,1],[643,1],[680,1]]},"82":{"position":[[3311,1],[7289,1]]},"95":{"position":[[250,1],[313,1],[367,1]]},"97":{"position":[[27,1],[144,1],[174,1],[193,1],[239,1],[367,1]]},"100":{"position":[[87,1]]},"113":{"position":[[116,1]]},"117":{"position":[[31,1],[130,1],[138,1],[203,1]]}},"keywords":{}}],["b[1",{"_index":1368,"title":{},"content":{"82":{"position":[[3341,6],[7319,6]]}},"keywords":{}}],["backwardstr",{"_index":2362,"title":{},"content":{"125":{"position":[[4020,16],[4054,16],[7369,16],[7403,16],[8607,16]]}},"keywords":{}}],["bb",{"_index":2186,"title":{},"content":{"123":{"position":[[1988,2],[3086,2],[4418,2],[4526,2]]}},"keywords":{}}],["between",{"_index":1547,"title":{},"content":{"95":{"position":[[560,7]]}},"keywords":{}}],["binari",{"_index":1677,"title":{},"content":{"107":{"position":[[14,6],[39,6]]},"108":{"position":[[15,6]]}},"keywords":{}}],["binarystr",{"_index":834,"title":{},"content":{"54":{"position":[[230,12],[315,12],[353,13]]}},"keywords":{}}],["blog",{"_index":1,"title":{"0":{"position":[[5,4]]},"1":{"position":[[4,4]]},"26":{"position":[[6,4]]}},"content":{"0":{"position":[[35,4],[93,4]]},"1":{"position":[[0,4],[110,4]]},"2":{"position":[[11,8],[48,4],[107,4],[131,4],[177,4],[285,4],[333,4],[355,4],[407,5],[449,5]]}},"keywords":{}}],["break",{"_index":646,"title":{},"content":{"44":{"position":[[864,6]]}},"keywords":{}}],["bucket",{"_index":1259,"title":{},"content":{"82":{"position":[[385,6],[629,6],[640,6],[682,6],[692,7],[717,6],[762,7],[1043,6],[1318,6],[1361,6],[1415,6],[1537,6],[1570,7],[1630,7],[1795,6],[1964,6],[1997,7],[2641,6],[2879,6],[3262,6],[3289,8],[3316,7],[5573,6],[5584,6],[5626,6],[5636,7],[5661,6],[5706,7],[5988,6],[6251,6],[6284,7],[6344,7],[6501,6],[6534,7],[7240,6],[7267,8],[7294,7]]}},"keywords":{}}],["bucket.length",{"_index":1274,"title":{},"content":{"82":{"position":[[818,14],[2091,14],[5762,14],[6628,14]]}},"keywords":{}}],["bucket.push([key",{"_index":1287,"title":{},"content":{"82":{"position":[[1013,17],[5958,17]]}},"keywords":{}}],["bucket.splice(i",{"_index":1321,"title":{},"content":{"82":{"position":[[2174,16],[6711,16]]}},"keywords":{}}],["bucket[i",{"_index":1276,"title":{},"content":{"82":{"position":[[852,10],[2139,10],[5796,10],[6676,10]]}},"keywords":{}}],["bucket。接着，判断获取到的",{"_index":1298,"title":{},"content":{"82":{"position":[[1301,16],[1778,16]]}},"keywords":{}}],["bucket，如果",{"_index":1258,"title":{},"content":{"82":{"position":[[375,9]]}},"keywords":{}}],["bucket，寻找对应的数据，并且删除。最后，依然没有找到，返回",{"_index":1314,"title":{},"content":{"82":{"position":[[1838,32]]}},"keywords":{}}],["bucket，找到对应位置的",{"_index":1318,"title":{},"content":{"82":{"position":[[2043,14],[6580,14]]}},"keywords":{}}],["bucket，随后放置在该索引值的位置；接着，判断新增还是修改原来的值。如果已经有值了，就修改该值；如果没有，就执行后续操作。最后，进行新增数据操作",{"_index":1261,"title":{},"content":{"82":{"position":[[400,75]]}},"keywords":{}}],["build",{"_index":132,"title":{},"content":{"8":{"position":[[243,6]]}},"keywords":{}}],["build&quot",{"_index":221,"title":{},"content":{"14":{"position":[[602,12]]}},"keywords":{}}],["b（也就是顶点到自己的连线），通常使用",{"_index":941,"title":{},"content":{"65":{"position":[[359,19]]}},"keywords":{}}],["b，b",{"_index":705,"title":{},"content":{"48":{"position":[[30,3]]}},"keywords":{}}],["b，c，d；b",{"_index":1601,"title":{},"content":{"99":{"position":[[91,7]]}},"keywords":{}}],["b，通常表示无向",{"_index":867,"title":{},"content":{"59":{"position":[[506,9]]}},"keywords":{}}],["b，通常表示有向",{"_index":868,"title":{},"content":{"59":{"position":[[524,9]]}},"keywords":{}}],["b：4",{"_index":754,"title":{},"content":{"50":{"position":[[60,6]]}},"keywords":{}}],["c",{"_index":501,"title":{},"content":{"39":{"position":[[965,1],[1136,1]]},"48":{"position":[[85,1]]},"69":{"position":[[34,1],[57,1],[84,1],[193,1],[232,1],[253,1],[276,1],[303,1],[385,1],[416,1],[489,1],[527,1],[575,1],[608,1],[645,1],[682,1]]},"97":{"position":[[371,1]]},"100":{"position":[[202,1]]},"113":{"position":[[156,1]]},"117":{"position":[[33,1],[205,1]]}},"keywords":{}}],["cat",{"_index":1043,"title":{},"content":{"72":{"position":[[133,4],[176,4]]}},"keywords":{}}],["cc",{"_index":2187,"title":{},"content":{"123":{"position":[[1991,2],[3089,2],[4421,2],[4529,2],[5256,2]]}},"keywords":{}}],["cd",{"_index":125,"title":{},"content":{"8":{"position":[[28,2],[61,2]]}},"keywords":{}}],["chang",{"_index":126,"title":{},"content":{"8":{"position":[[72,7],[465,8]]}},"keywords":{}}],["check",{"_index":100,"title":{},"content":{"6":{"position":[[80,5]]}},"keywords":{}}],["checkbox",{"_index":101,"title":{},"content":{"6":{"position":[[90,10]]}},"keywords":{}}],["class",{"_index":370,"title":{},"content":{"33":{"position":[[26,5]]},"39":{"position":[[0,5]]},"44":{"position":[[139,5],[275,5]]},"53":{"position":[[10,5]]},"82":{"position":[[73,5],[5101,5]]},"87":{"position":[[11,5]]},"93":{"position":[[26,5]]},"111":{"position":[[1256,5]]},"123":{"position":[[763,5],[881,5],[5735,5],[5853,5]]},"125":{"position":[[1022,5],[1131,5],[4294,5]]}},"keywords":{}}],["classic",{"_index":105,"title":{},"content":{"7":{"position":[[41,7],[63,7],[189,7]]}},"keywords":{}}],["clear",{"_index":394,"title":{},"content":{"33":{"position":[[648,7],[668,7]]},"87":{"position":[[419,7],[441,7],[1165,7]]},"93":{"position":[[434,7],[456,7]]}},"keywords":{}}],["click",{"_index":48,"title":{},"content":{"1":{"position":[[205,5]]}},"keywords":{}}],["clicked!')}&gt;click",{"_index":46,"title":{},"content":{"1":{"position":[[165,20]]}},"keywords":{}}],["co",{"_index":71,"title":{},"content":{"2":{"position":[[323,2]]}},"keywords":{}}],["code",{"_index":120,"title":{},"content":{"7":{"position":[[308,4]]}},"keywords":{}}],["command",{"_index":110,"title":{},"content":{"7":{"position":[[142,8],[216,7],[229,7],[325,7]]},"8":{"position":[[64,7],[235,7]]}},"keywords":{}}],["comment",{"_index":9,"title":{},"content":{"0":{"position":[[76,7]]}},"keywords":{}}],["config",{"_index":80,"title":{},"content":{"2":{"position":[[480,7]]},"14":{"position":[[447,6]]}},"keywords":{}}],["config.overrides.j",{"_index":200,"title":{},"content":{"14":{"position":[[125,19]]}},"keywords":{}}],["consectetur",{"_index":19,"title":{},"content":{"0":{"position":[[154,11],[333,11],[512,11],[691,11],[870,11],[1049,11],[1228,11],[1407,11],[1586,11],[1765,11],[1944,11],[2123,11],[2302,11],[2481,11],[2660,11],[2839,11]]},"26":{"position":[[28,11]]}},"keywords":{}}],["consequat",{"_index":31,"title":{},"content":{"0":{"position":[[267,10],[446,10],[625,10],[804,10],[983,10],[1162,10],[1341,10],[1520,10],[1699,10],[1878,10],[2057,10],[2236,10],[2415,10],[2594,10],[2773,10],[2952,10]]},"26":{"position":[[141,10]]}},"keywords":{}}],["console.log(&quot;击鼓传花&quot",{"_index":551,"title":{},"content":{"40":{"position":[[953,29]]}},"keywords":{}}],["console.log(dec2bin(100",{"_index":840,"title":{},"content":{"54":{"position":[[385,26]]}},"keywords":{}}],["console.log(dec2bin(88",{"_index":842,"title":{},"content":{"54":{"position":[[429,25]]}},"keywords":{}}],["console.log(doublylinkedlist",{"_index":2374,"title":{},"content":{"125":{"position":[[7820,30],[7954,30],[8137,30],[8245,30],[8339,30],[8500,30]]}},"keywords":{}}],["console.log(doublylinkedlist.backwardstr",{"_index":2389,"title":{},"content":{"125":{"position":[[8627,47]]}},"keywords":{}}],["console.log(doublylinkedlist.forwardtostr",{"_index":2388,"title":{},"content":{"125":{"position":[[8555,48]]}},"keywords":{}}],["console.log(doublylinkedlist.getdata(1",{"_index":2379,"title":{},"content":{"125":{"position":[[8001,41]]}},"keywords":{}}],["console.log(doublylinkedlist.indexof(&quot;xx&quot",{"_index":2381,"title":{},"content":{"125":{"position":[[8071,54]]}},"keywords":{}}],["console.log(doublylinkedlist.remove(&quot;111111&quot",{"_index":2386,"title":{},"content":{"125":{"position":[[8385,57]]}},"keywords":{}}],["console.log(doublylinkedlist.remove(&quot;22222&quot",{"_index":2387,"title":{},"content":{"125":{"position":[[8443,56]]}},"keywords":{}}],["console.log(linkedlist",{"_index":2175,"title":{},"content":{"123":{"position":[[1566,24]]}},"keywords":{}}],["console.log(linkedlist.getdata(0",{"_index":2228,"title":{},"content":{"123":{"position":[[3430,35]]}},"keywords":{}}],["console.log(linkedlist.getdata(1",{"_index":2229,"title":{},"content":{"123":{"position":[[3479,35]]}},"keywords":{}}],["console.log(linkedlist.indexof(&quot;aa&quot",{"_index":2235,"title":{},"content":{"123":{"position":[[3791,48]]}},"keywords":{}}],["console.log(linkedlist.indexof(&quot;abc&quot",{"_index":2236,"title":{},"content":{"123":{"position":[[3851,49]]}},"keywords":{}}],["console.log(linkedlist.isempti",{"_index":2270,"title":{},"content":{"123":{"position":[[5561,34]]}},"keywords":{}}],["console.log(linkedlist.s",{"_index":2272,"title":{},"content":{"123":{"position":[[5685,31]]}},"keywords":{}}],["console.log(linkedlist.tostr",{"_index":2184,"title":{},"content":{"123":{"position":[[1940,35],[3030,35],[4360,35],[4465,35],[5195,35],[5407,35]]}},"keywords":{}}],["console.log(map",{"_index":404,"title":{},"content":{"33":{"position":[[868,17],[1133,17]]}},"keywords":{}}],["console.log(map.get(&quot;age&quot",{"_index":414,"title":{},"content":{"33":{"position":[[1207,38]]}},"keywords":{}}],["console.log(map.has(&quot;address&quot",{"_index":411,"title":{},"content":{"33":{"position":[[1030,42]]}},"keywords":{}}],["console.log(map.has(&quot;name&quot",{"_index":409,"title":{},"content":{"33":{"position":[[976,39]]}},"keywords":{}}],["console.log(map.key",{"_index":415,"title":{},"content":{"33":{"position":[[1271,24]]}},"keywords":{}}],["console.log(map.s",{"_index":419,"title":{},"content":{"33":{"position":[[1435,24]]}},"keywords":{}}],["console.log(map.valu",{"_index":418,"title":{},"content":{"33":{"position":[[1357,26]]}},"keywords":{}}],["console.log(priorityqueue.isempti",{"_index":671,"title":{},"content":{"44":{"position":[[2417,37]]}},"keywords":{}}],["console.log(priorityqueue.item",{"_index":666,"title":{},"content":{"44":{"position":[[1790,33],[2185,33]]}},"keywords":{}}],["console.log(priorityqueue.s",{"_index":672,"title":{},"content":{"44":{"position":[[2483,34]]}},"keywords":{}}],["console.log(priorityqueue.tostr",{"_index":673,"title":{},"content":{"44":{"position":[[2546,38]]}},"keywords":{}}],["console.log(queue.front",{"_index":500,"title":{},"content":{"39":{"position":[[928,27]]}},"keywords":{}}],["console.log(queue.isempti",{"_index":502,"title":{},"content":{"39":{"position":[[983,29]]}},"keywords":{}}],["console.log(queue.item",{"_index":494,"title":{},"content":{"39":{"position":[[702,25],[848,25]]}},"keywords":{}}],["console.log(queue.s",{"_index":503,"title":{},"content":{"39":{"position":[[1041,26]]}},"keywords":{}}],["console.log(queue.tostr",{"_index":504,"title":{},"content":{"39":{"position":[[1096,30]]}},"keywords":{}}],["console.log(set",{"_index":1457,"title":{},"content":{"87":{"position":[[717,16],[949,16]]}},"keywords":{}}],["console.log(set.has('123",{"_index":1464,"title":{},"content":{"87":{"position":[[831,27]]}},"keywords":{}}],["console.log(set.has('456",{"_index":1465,"title":{},"content":{"87":{"position":[[873,27]]}},"keywords":{}}],["console.log(set.s",{"_index":1467,"title":{},"content":{"87":{"position":[[1042,23]]}},"keywords":{}}],["console.log(set.valu",{"_index":1468,"title":{},"content":{"87":{"position":[[1092,25],[1188,25]]}},"keywords":{}}],["console.log(stack.isempti",{"_index":818,"title":{},"content":{"53":{"position":[[763,29]]}},"keywords":{}}],["console.log(stack.item",{"_index":815,"title":{},"content":{"53":{"position":[[602,25]]}},"keywords":{}}],["console.log(stack.peek",{"_index":817,"title":{},"content":{"53":{"position":[[709,26]]}},"keywords":{}}],["console.log(stack.pop",{"_index":816,"title":{},"content":{"53":{"position":[[659,25]]}},"keywords":{}}],["console.log(stack.s",{"_index":819,"title":{},"content":{"53":{"position":[[821,26]]}},"keywords":{}}],["console.log(stack.tostr",{"_index":820,"title":{},"content":{"53":{"position":[[876,30]]}},"keywords":{}}],["const",{"_index":180,"title":{},"content":{"13":{"position":[[324,5],[373,5]]},"14":{"position":[[151,5],[197,5],[808,5],[857,5]]},"33":{"position":[[705,5]]},"39":{"position":[[539,5]]},"40":{"position":[[177,5],[235,6],[697,5],[808,5],[913,5]]},"44":{"position":[[460,5],[1518,5]]},"54":{"position":[[69,5]]},"81":{"position":[[103,5]]},"82":{"position":[[570,5],[1492,5],[1531,5],[1614,6],[1919,5],[1958,5],[2125,5],[3100,5],[3255,6],[3304,6],[4221,5],[5514,5],[6206,5],[6245,5],[6328,6],[6456,5],[6495,5],[6662,5],[7078,5],[7233,6],[7282,6]]},"87":{"position":[[623,5]]},"111":{"position":[[1533,5]]},"113":{"position":[[221,5]]},"114":{"position":[[329,5]]},"115":{"position":[[288,5]]},"123":{"position":[[1016,5],[1427,5],[2263,5],[6011,5],[6670,5]]},"125":{"position":[[1319,5],[1763,5],[3620,5],[4505,5],[4934,5],[6802,5],[7633,5]]}},"keywords":{}}],["constant",{"_index":1159,"title":{},"content":{"76":{"position":[[1353,8],[1384,8]]}},"keywords":{}}],["constant）；其中",{"_index":1160,"title":{},"content":{"76":{"position":[[1371,12]]}},"keywords":{}}],["constructor",{"_index":372,"title":{},"content":{"33":{"position":[[38,13]]},"39":{"position":[[14,13]]},"44":{"position":[[311,13]]},"53":{"position":[[22,13]]},"82":{"position":[[91,13],[5119,13]]},"87":{"position":[[23,13]]},"93":{"position":[[38,13]]},"125":{"position":[[1175,13],[4338,13]]}},"keywords":{}}],["constructor(data",{"_index":2151,"title":{},"content":{"123":{"position":[[908,17],[5880,17]]}},"keywords":{}}],["constructor(el",{"_index":621,"title":{},"content":{"44":{"position":[[160,20]]},"125":{"position":[[1054,20]]}},"keywords":{}}],["constructor(key",{"_index":1802,"title":{},"content":{"111":{"position":[[1269,16]]}},"keywords":{}}],["conveni",{"_index":70,"title":{},"content":{"2":{"position":[[309,10]]}},"keywords":{}}],["count",{"_index":1354,"title":{},"content":{"82":{"position":[[2976,5]]}},"keywords":{}}],["cpu",{"_index":452,"title":{},"content":{"36":{"position":[[65,3]]},"121":{"position":[[30,3]]}},"keywords":{}}],["cra",{"_index":197,"title":{},"content":{"14":{"position":[[70,3],[191,5]]}},"keywords":{}}],["creat",{"_index":41,"title":{},"content":{"1":{"position":[[91,6]]},"5":{"position":[[15,8]]},"8":{"position":[[148,7]]},"13":{"position":[[11,6]]},"14":{"position":[[7,6]]}},"keywords":{}}],["css",{"_index":167,"title":{},"content":{"13":{"position":[[141,4]]}},"keywords":{}}],["current",{"_index":1872,"title":{},"content":{"111":{"position":[[3484,7],[3542,7],[4141,7],[4228,7],[4274,7],[4595,7],[4921,7],[6598,7],[6627,7],[6641,7],[6659,7],[6690,7],[6708,7],[6763,7],[6782,7],[6820,7],[6839,7],[6888,7],[6905,7],[6927,7],[6961,7],[6983,7],[7014,7],[7461,7],[7525,7],[7546,8],[7608,8],[7617,7],[9723,7],[9787,7],[9808,8],[9870,8],[9879,7]]}},"keywords":{}}],["current.left",{"_index":2006,"title":{},"content":{"111":{"position":[[7627,13],[9889,13]]}},"keywords":{}}],["current.left，删除根节点",{"_index":1915,"title":{},"content":{"111":{"position":[[4699,18]]}},"keywords":{}}],["current.left，删除节点",{"_index":1922,"title":{},"content":{"111":{"position":[[4798,17],[4897,17]]}},"keywords":{}}],["current.right，删除根节点",{"_index":1930,"title":{},"content":{"111":{"position":[[5023,19]]}},"keywords":{}}],["current.right，删除节点",{"_index":1933,"title":{},"content":{"111":{"position":[[5123,18],[5223,18]]}},"keywords":{}}],["currentnod",{"_index":1879,"title":{},"content":{"111":{"position":[[3592,11],[3766,12],[3842,11],[3914,11],[3978,12],[4413,12],[5310,11],[5433,11],[5478,11],[5493,12],[5706,11],[5777,11],[5829,11],[5874,11],[5889,12],[7151,12],[7838,11],[8012,12],[8088,11],[8160,11],[8224,12],[8358,12],[8556,11],[8679,11],[8724,11],[8739,12],[8952,11],[9023,11],[9075,11],[9120,11],[9135,12],[9413,12]]},"123":{"position":[[1173,11],[1296,11],[1601,11],[1635,11],[1744,11],[1821,13],[1871,11],[2512,11],[2664,11],[2752,12],[2765,11],[2849,12],[3267,11],[3339,11],[3607,11],[3653,13],[3718,11],[4135,11],[4207,11],[4288,12],[4709,11],[4868,11],[4967,12],[4980,11],[5138,12],[6168,11],[6291,11],[6919,11],[7071,11],[7159,12],[7172,11],[7256,12],[7504,11],[7576,11],[7713,11],[7759,13],[7824,11],[8075,11],[8147,11],[8228,12],[8397,11],[8556,11],[8655,12],[8668,11],[8826,12],[9074,11],[9161,13],[9221,11]]},"125":{"position":[[2241,11],[2358,12],[2371,11],[2488,12],[2746,11],[3116,11],[3339,12],[3352,11],[3815,11],[3892,13],[3943,11],[4077,11],[4154,13],[4205,11],[5412,11],[5529,12],[5542,11],[5659,12],[6040,11],[6313,11],[6536,12],[6549,11],[7167,11],[7254,13],[7315,11],[7426,11],[7513,13],[7574,11]]}},"keywords":{}}],["currentnode.data",{"_index":2183,"title":{},"content":{"123":{"position":[[1847,16],[3393,17],[3672,17],[4256,16],[7630,17],[7778,17],[8196,16],[9187,16]]},"125":{"position":[[3486,17],[3918,16],[4180,16],[6683,17],[7280,16],[7539,16]]}},"keywords":{}}],["currentnode.key",{"_index":1884,"title":{},"content":{"111":{"position":[[3725,16],[3803,16],[7971,16],[8049,16]]}},"keywords":{}}],["currentnode.left",{"_index":1886,"title":{},"content":{"111":{"position":[[3856,17],[4342,17],[5535,17],[5597,17],[5643,17],[5673,17],[7339,17],[8102,17],[8287,17],[8781,17],[8843,17],[8889,17],[8919,17],[9601,17]]}},"keywords":{}}],["currentnode.next",{"_index":2166,"title":{},"content":{"123":{"position":[[1203,16],[1266,17],[1310,17],[1352,16],[1661,16],[1885,17],[2779,17],[3353,17],[3732,17],[4221,17],[4994,17],[5081,17],[6198,16],[6261,17],[6305,17],[6347,16],[7186,17],[7590,17],[7838,17],[8161,17],[8682,17],[8769,17],[9235,17]]},"125":{"position":[[2385,17],[3366,17],[3406,17],[3957,17],[5556,17],[6563,17],[6603,17],[7329,17]]}},"keywords":{}}],["currentnode.next.perv",{"_index":2350,"title":{},"content":{"125":{"position":[[3424,21],[6621,21]]}},"keywords":{}}],["currentnode.prev",{"_index":2339,"title":{},"content":{"125":{"position":[[2501,16],[4219,17],[5672,16],[7588,17]]}},"keywords":{}}],["currentnode.right",{"_index":1888,"title":{},"content":{"111":{"position":[[3928,18],[4380,17],[5276,18],[5931,18],[5994,18],[6041,18],[8174,18],[8325,17],[8522,18],[9177,18],[9240,18],[9287,18]]}},"keywords":{}}],["currentnode，以及它的",{"_index":1882,"title":{},"content":{"111":{"position":[[3679,16],[7925,16]]}},"keywords":{}}],["custom",{"_index":196,"title":{},"content":{"14":{"position":[[60,9]]}},"keywords":{}}],["c，c",{"_index":707,"title":{},"content":{"48":{"position":[[37,3]]}},"keywords":{}}],["c，d",{"_index":1586,"title":{},"content":{"97":{"position":[[243,3]]}},"keywords":{}}],["c：3",{"_index":756,"title":{},"content":{"50":{"position":[[77,6]]}},"keywords":{}}],["d",{"_index":159,"title":{},"content":{"13":{"position":[[52,1]]},"14":{"position":[[1198,1]]},"39":{"position":[[1138,1]]},"44":{"position":[[2604,1]]},"48":{"position":[[89,1],[140,1],[164,1]]},"65":{"position":[[438,1],[454,1]]},"69":{"position":[[63,1],[90,1],[195,1],[228,1],[249,1],[272,1],[299,1],[418,1],[491,1],[529,1],[577,1],[610,1],[647,1],[684,1]]},"95":{"position":[[256,1],[302,1],[350,1],[374,1]]},"97":{"position":[[150,1],[178,1],[188,1]]},"113":{"position":[[124,1]]},"117":{"position":[[35,1],[125,2]]}},"keywords":{}}],["data",{"_index":1611,"title":{},"content":{"100":{"position":[[51,4],[158,4],[230,4]]},"123":{"position":[[889,5],[940,5],[2058,5],[3126,5],[3258,4],[3381,4],[3562,4],[3694,5],[3945,5],[3961,5],[3984,5],[4251,4],[4275,5],[5292,4],[5861,5],[5912,5],[6465,5],[7364,4],[7495,4],[7618,4],[7668,4],[7800,5],[7902,4],[7924,5],[8191,4],[8215,5],[8858,4]]},"125":{"position":[[1610,5],[3541,5],[3589,5],[3705,6],[4781,5],[6723,5],[6771,5],[6887,6],[6932,4]]}},"keywords":{}}],["date",{"_index":62,"title":{},"content":{"2":{"position":[[187,4]]}},"keywords":{}}],["dec",{"_index":828,"title":{},"content":{"54":{"position":[[125,4],[183,3]]}},"keywords":{}}],["dec2bin",{"_index":839,"title":{},"content":{"54":{"position":[[372,9]]}},"keywords":{}}],["dec2bin(dec",{"_index":823,"title":{},"content":{"54":{"position":[[35,12]]}},"keywords":{}}],["default",{"_index":369,"title":{},"content":{"33":{"position":[[18,7]]},"93":{"position":[[18,7]]}},"keywords":{}}],["delet",{"_index":78,"title":{},"content":{"2":{"position":[[418,6]]},"33":{"position":[[329,6]]},"87":{"position":[[389,6]]},"93":{"position":[[404,6]]}},"keywords":{}}],["delnod",{"_index":2001,"title":{},"content":{"111":{"position":[[7448,8],[7508,8],[9710,8],[9770,8]]}},"keywords":{}}],["delnode.right",{"_index":2002,"title":{},"content":{"111":{"position":[[7471,14],[7693,14],[7768,14],[9733,14],[9955,14],[10030,14]]}},"keywords":{}}],["depend",{"_index":103,"title":{},"content":{"6":{"position":[[112,13]]},"7":{"position":[[361,12]]}},"keywords":{}}],["depth",{"_index":1549,"title":{},"content":{"95":{"position":[[573,5]]}},"keywords":{}}],["dequeu",{"_index":473,"title":{},"content":{"39":{"position":[[123,9],[157,9],[801,9]]},"40":{"position":[[647,7]]},"44":{"position":[[969,9],[1016,9],[1026,9],[2122,9]]}},"keywords":{}}],["develop",{"_index":123,"title":{},"content":{"8":{"position":[[8,11],[295,11]]}},"keywords":{}}],["dictonary，python",{"_index":344,"title":{},"content":{"30":{"position":[[29,16]]}},"keywords":{}}],["dict。有些编程语言中称这种映射关系为",{"_index":345,"title":{},"content":{"30":{"position":[[49,20]]}},"keywords":{}}],["differ",{"_index":1498,"title":{},"content":{"91":{"position":[[3,12]]},"93":{"position":[[1240,12]]},"95":{"position":[[549,10]]}},"keywords":{}}],["difference(otherset",{"_index":1500,"title":{},"content":{"91":{"position":[[19,20]]},"93":{"position":[[1256,20]]}},"keywords":{}}],["differenceset",{"_index":1501,"title":{},"content":{"91":{"position":[[59,13],[239,14]]},"93":{"position":[[1296,13],[1474,13]]}},"keywords":{}}],["differenceset.add(valu",{"_index":1503,"title":{},"content":{"91":{"position":[[202,25]]},"93":{"position":[[1438,24]]}},"keywords":{}}],["dignissim",{"_index":24,"title":{},"content":{"0":{"position":[[206,9],[385,9],[564,9],[743,9],[922,9],[1101,9],[1280,9],[1459,9],[1638,9],[1817,9],[1996,9],[2175,9],[2354,9],[2533,9],[2712,9],[2891,9]]},"26":{"position":[[80,9]]}},"keywords":{}}],["dip",{"_index":181,"title":{},"content":{"13":{"position":[[330,3],[394,3]]},"14":{"position":[[814,3],[878,3]]}},"keywords":{}}],["directori",{"_index":57,"title":{},"content":{"2":{"position":[[112,10],[430,10]]},"8":{"position":[[84,9]]}},"keywords":{}}],["display",{"_index":144,"title":{},"content":{"8":{"position":[[451,8]]}},"keywords":{}}],["dlr",{"_index":2023,"title":{},"content":{"113":{"position":[[194,4]]}},"keywords":{}}],["docs/intro.md",{"_index":139,"title":{},"content":{"8":{"position":[[369,13]]}},"keywords":{}}],["document.documentelement.clientwidth",{"_index":182,"title":{},"content":{"13":{"position":[[336,36]]},"14":{"position":[[820,36]]}},"keywords":{}}],["document.documentelement.style.fonts",{"_index":184,"title":{},"content":{"13":{"position":[[403,39]]},"14":{"position":[[887,39]]}},"keywords":{}}],["docusauru",{"_index":34,"title":{},"content":{"1":{"position":[[19,10]]},"2":{"position":[[0,10],[469,10]]},"5":{"position":[[43,10]]},"7":{"position":[[15,10],[390,11]]},"8":{"position":[[156,10]]}},"keywords":{}}],["docusaurus.new",{"_index":91,"title":{},"content":{"5":{"position":[[71,15]]}},"keywords":{}}],["docusaurus@latest",{"_index":113,"title":{},"content":{"7":{"position":[[160,17]]}},"keywords":{}}],["dolor",{"_index":16,"title":{},"content":{"0":{"position":[[138,5],[290,5],[317,5],[469,5],[496,5],[648,5],[675,5],[827,5],[854,5],[1006,5],[1033,5],[1185,5],[1212,5],[1364,5],[1391,5],[1543,5],[1570,5],[1722,5],[1749,5],[1901,5],[1928,5],[2080,5],[2107,5],[2259,5],[2286,5],[2438,5],[2465,5],[2617,5],[2644,5],[2796,5],[2823,5],[2975,5]]},"26":{"position":[[12,5],[164,5]]}},"keywords":{}}],["don't",{"_index":76,"title":{},"content":{"2":{"position":[[394,5]]}},"keywords":{}}],["doublylinkedlist",{"_index":2318,"title":{},"content":{"125":{"position":[[1137,16],[4300,16],[7639,16],[7662,19]]}},"keywords":{}}],["doublylinkedlist.append(&quot;cc&quot",{"_index":2373,"title":{},"content":{"125":{"position":[[7779,40]]}},"keywords":{}}],["doublylinkedlist.append(&quot;xx&quot",{"_index":2372,"title":{},"content":{"125":{"position":[[7738,40]]}},"keywords":{}}],["doublylinkedlist.append(&quot;zz&quot",{"_index":2371,"title":{},"content":{"125":{"position":[[7697,40]]}},"keywords":{}}],["doublylinkedlist.insert(0",{"_index":2375,"title":{},"content":{"125":{"position":[[7866,26]]}},"keywords":{}}],["doublylinkedlist.insert(2",{"_index":2377,"title":{},"content":{"125":{"position":[[7910,26]]}},"keywords":{}}],["doublylinkedlist.removeat(0",{"_index":2382,"title":{},"content":{"125":{"position":[[8185,29]]}},"keywords":{}}],["doublylinkedlist.removeat(1",{"_index":2383,"title":{},"content":{"125":{"position":[[8215,29]]}},"keywords":{}}],["doublylinkedlist.update(0",{"_index":2384,"title":{},"content":{"125":{"position":[[8291,26]]}},"keywords":{}}],["doublynod",{"_index":2307,"title":{},"content":{"125":{"position":[[878,10],[1028,10]]}},"keywords":{}}],["doublynode(el",{"_index":2321,"title":{},"content":{"125":{"position":[[1339,20],[1783,20],[4525,20],[4954,20]]}},"keywords":{}}],["d、f、h、i",{"_index":1538,"title":{},"content":{"95":{"position":[[406,7]]}},"keywords":{}}],["d：2",{"_index":757,"title":{},"content":{"50":{"position":[[94,6]]}},"keywords":{}}],["d；在",{"_index":708,"title":{},"content":{"48":{"position":[[44,3]]}},"keywords":{}}],["e",{"_index":675,"title":{},"content":{"44":{"position":[[2599,1]]},"59":{"position":[[455,1]]},"69":{"position":[[65,1],[92,1],[131,1],[154,1],[181,1],[282,1],[309,1],[614,1],[651,1],[688,1]]},"95":{"position":[[378,1]]},"97":{"position":[[154,1],[249,1]]},"99":{"position":[[118,1]]},"100":{"position":[[180,1]]},"113":{"position":[[148,1]]},"117":{"position":[[37,1],[134,1]]}},"keywords":{}}],["edg",{"_index":865,"title":{},"content":{"59":{"position":[[457,6]]}},"keywords":{}}],["edit",{"_index":141,"title":{},"content":{"8":{"position":[[399,4]]}},"keywords":{}}],["editor",{"_index":121,"title":{},"content":{"7":{"position":[[313,7]]}},"keywords":{}}],["eject&quot",{"_index":226,"title":{},"content":{"14":{"position":[[708,11]]}},"keywords":{}}],["element",{"_index":624,"title":{},"content":{"44":{"position":[[208,8],[1857,9],[1912,9],[1967,9],[2022,9],[2077,9],[2252,9],[2307,9],[2362,9]]},"123":{"position":[[351,8],[462,8]]},"125":{"position":[[433,8],[552,8],[1653,8],[4824,8]]}},"keywords":{}}],["elementum",{"_index":23,"title":{},"content":{"0":{"position":[[196,9],[375,9],[554,9],[733,9],[912,9],[1091,9],[1270,9],[1449,9],[1628,9],[1807,9],[1986,9],[2165,9],[2344,9],[2523,9],[2702,9],[2881,9]]},"26":{"position":[[70,9]]}},"keywords":{}}],["elit",{"_index":21,"title":{},"content":{"0":{"position":[[177,5],[356,5],[535,5],[714,5],[893,5],[1072,5],[1251,5],[1430,5],[1609,5],[1788,5],[1967,5],[2146,5],[2325,5],[2504,5],[2683,5],[2862,5]]},"26":{"position":[[51,5]]}},"keywords":{}}],["email",{"_index":408,"title":{},"content":{"33":{"position":[[932,6],[1164,6]]}},"keywords":{}}],["endnam",{"_index":539,"title":{},"content":{"40":{"position":[[703,7]]}},"keywords":{}}],["enqueu",{"_index":489,"title":{},"content":{"39":{"position":[[569,9]]},"44":{"position":[[391,9],[1567,9]]}},"keywords":{}}],["enqueue(el",{"_index":456,"title":{},"content":{"38":{"position":[[0,16]]},"44":{"position":[[341,16],[401,16]]}},"keywords":{}}],["enqueue(item",{"_index":470,"title":{},"content":{"39":{"position":[[52,13],[79,13]]}},"keywords":{}}],["env",{"_index":207,"title":{},"content":{"14":{"position":[[290,4]]}},"keywords":{}}],["ero",{"_index":29,"title":{},"content":{"0":{"position":[[254,4],[433,4],[612,4],[791,4],[970,4],[1149,4],[1328,4],[1507,4],[1686,4],[1865,4],[2044,4],[2223,4],[2402,4],[2581,4],[2760,4],[2939,4]]},"26":{"position":[[128,4]]}},"keywords":{}}],["es6",{"_index":1424,"title":{},"content":{"85":{"position":[[0,3]]}},"keywords":{}}],["exclud",{"_index":209,"title":{},"content":{"14":{"position":[[407,8]]}},"keywords":{}}],["export",{"_index":368,"title":{},"content":{"33":{"position":[[11,6]]},"44":{"position":[[268,6]]},"93":{"position":[[11,6]]}},"keywords":{}}],["extend",{"_index":629,"title":{},"content":{"44":{"position":[[295,7]]},"125":{"position":[[1039,7],[1154,7],[4317,7]]}},"keywords":{}}],["extract",{"_index":63,"title":{},"content":{"2":{"position":[[199,9]]}},"keywords":{}}],["f",{"_index":979,"title":{},"content":{"69":{"position":[[96,1],[135,1],[158,1],[185,1],[311,1],[653,1],[690,1]]},"113":{"position":[[164,1]]},"117":{"position":[[39,1],[211,1]]}},"keywords":{}}],["f(x)的值就转化为求",{"_index":1187,"title":{},"content":{"78":{"position":[[87,11]]}},"keywords":{}}],["fals",{"_index":79,"title":{},"content":{"2":{"position":[[455,5]]},"33":{"position":[[289,5],[322,6],[1082,5]]},"39":{"position":[[1022,5]]},"44":{"position":[[647,6],[2464,5]]},"53":{"position":[[802,5]]},"82":{"position":[[4006,6],[4082,6],[4214,6],[4331,6]]},"87":{"position":[[104,5],[233,5],[348,5],[383,5],[910,5]]},"92":{"position":[[84,5],[178,6]]},"93":{"position":[[119,5],[248,5],[363,5],[398,5],[1574,5],[1668,5]]},"111":{"position":[[2927,5],[3049,6],[3425,6],[3907,6],[3969,5],[4010,6],[8153,6],[8215,5],[8256,6]]},"123":{"position":[[2245,6],[4094,6],[5605,5],[6652,6],[8034,6]]},"125":{"position":[[1740,6],[4911,6]]}},"keywords":{}}],["false。clear",{"_index":1432,"title":{},"content":{"86":{"position":[[77,13]]}},"keywords":{}}],["false。get(key",{"_index":358,"title":{},"content":{"32":{"position":[[98,14]]}},"keywords":{}}],["false。preordertravers",{"_index":1787,"title":{},"content":{"111":{"position":[[953,22]]}},"keywords":{}}],["false。s",{"_index":465,"title":{},"content":{"38":{"position":[[194,12]]},"52":{"position":[[123,12]]},"80":{"position":[[121,12]]},"123":{"position":[[584,12]]},"125":{"position":[[679,12]]}},"keywords":{}}],["false），如节点",{"_index":1926,"title":{},"content":{"111":{"position":[[4864,10],[5190,10]]}},"keywords":{}}],["featur",{"_index":36,"title":{},"content":{"1":{"position":[[39,9]]},"2":{"position":[[20,8]]}},"keywords":{}}],["fifo，first",{"_index":425,"title":{},"content":{"35":{"position":[[29,10]]}},"keywords":{}}],["fifo：first",{"_index":439,"title":{},"content":{"35":{"position":[[218,11]]}},"keywords":{}}],["file",{"_index":55,"title":{},"content":{"2":{"position":[[81,5]]}},"keywords":{}}],["filenam",{"_index":64,"title":{},"content":{"2":{"position":[[214,10]]}},"keywords":{}}],["first",{"_index":316,"title":{"26":{"position":[[0,5]]}},"content":{"35":{"position":[[44,5],[233,5]]},"47":{"position":[[108,5]]},"49":{"position":[[49,5]]}},"keywords":{}}],["fixedthreadpool",{"_index":607,"title":{},"content":{"43":{"position":[[673,16]]}},"keywords":{}}],["flag,当",{"_index":591,"title":{},"content":{"43":{"position":[[211,6]]}},"keywords":{}}],["flag=0",{"_index":593,"title":{},"content":{"43":{"position":[[233,6]]}},"keywords":{}}],["flag=1",{"_index":595,"title":{},"content":{"43":{"position":[[265,6]]}},"keywords":{}}],["flexibl",{"_index":230,"title":{},"content":{"14":{"position":[[1152,8],[1188,8],[1239,9]]}},"keywords":{}}],["folder",{"_index":56,"title":{},"content":{"2":{"position":[[91,8],[295,6]]}},"keywords":{}}],["forwardtostr",{"_index":2359,"title":{},"content":{"125":{"position":[[3756,17],[3791,17],[7108,17],[7143,17],[8534,17]]}},"keywords":{}}],["front",{"_index":476,"title":{},"content":{"39":{"position":[[201,7],[219,7],[917,7]]},"42":{"position":[[354,5]]},"43":{"position":[[388,5]]},"44":{"position":[[1067,7],[1100,7],[1108,7]]}},"keywords":{}}],["front==rear",{"_index":588,"title":{},"content":{"43":{"position":[[149,11],[218,11],[250,11],[290,11]]}},"keywords":{}}],["function",{"_index":178,"title":{},"content":{"13":{"position":[[303,8]]},"14":{"position":[[787,8]]},"40":{"position":[[118,8]]},"54":{"position":[[26,8]]},"82":{"position":[[3952,8],[4144,8]]}},"keywords":{}}],["fusc",{"_index":26,"title":{},"content":{"0":{"position":[[227,5],[406,5],[585,5],[764,5],[943,5],[1122,5],[1301,5],[1480,5],[1659,5],[1838,5],[2017,5],[2196,5],[2375,5],[2554,5],[2733,5],[2912,5]]},"26":{"position":[[101,5]]}},"keywords":{}}],["f；k",{"_index":1603,"title":{},"content":{"99":{"position":[[122,3]]}},"keywords":{}}],["g",{"_index":978,"title":{},"content":{"69":{"position":[[94,1],[137,1],[160,1],[187,1],[313,1],[692,1]]},"113":{"position":[[172,2]]},"117":{"position":[[41,1]]}},"keywords":{}}],["gener",{"_index":104,"title":{"7":{"position":[[0,8]]}},"content":{"7":{"position":[[0,8]]}},"keywords":{}}],["get",{"_index":85,"title":{"5":{"position":[[0,7]]}},"content":{},"keywords":{}}],["get(key",{"_index":385,"title":{},"content":{"33":{"position":[[358,8],[402,8]]},"82":{"position":[[1463,8],[1481,8],[6177,8],[6195,8]]}},"keywords":{}}],["getdata",{"_index":2227,"title":{},"content":{"123":{"position":[[3419,7],[7346,9]]},"125":{"position":[[5735,9],[7988,9]]}},"keywords":{}}],["getdata(posit",{"_index":2221,"title":{},"content":{"123":{"position":[[3132,17],[7369,17]]},"125":{"position":[[5752,17]]}},"keywords":{}}],["getprim",{"_index":1404,"title":{},"content":{"82":{"position":[[4575,8]]}},"keywords":{}}],["getprime(numb",{"_index":1406,"title":{},"content":{"82":{"position":[[4592,16],[4631,16],[5306,16],[5345,16]]}},"keywords":{}}],["getsuccessor(delnod",{"_index":1999,"title":{},"content":{"111":{"position":[[7391,21],[9653,21]]}},"keywords":{}}],["gt",{"_index":8,"title":{},"content":{"0":{"position":[[71,4]]},"1":{"position":[[145,5]]},"14":{"position":[[295,5],[339,5]]},"33":{"position":[[1020,4],[1077,4],[1250,4],[1300,4],[1388,4],[1464,4]]},"39":{"position":[[732,4],[878,4],[960,4],[1017,4],[1072,4],[1131,4]]},"40":{"position":[[337,4],[1008,4]]},"44":{"position":[[1828,4],[2223,4],[2459,4],[2522,4],[2589,4]]},"50":{"position":[[153,4],[161,4],[169,4],[177,4],[185,4]]},"53":{"position":[[632,4],[689,4],[740,4],[797,4],[852,4],[911,4]]},"54":{"position":[[130,4],[416,4],[459,4]]},"59":{"position":[[518,5]]},"60":{"position":[[599,4],[615,4],[649,4],[668,4]]},"65":{"position":[[433,4],[457,4]]},"82":{"position":[[1112,4],[1154,4],[2264,4],[2705,4],[3379,4],[3465,4],[3507,4],[3706,4],[4789,4],[4831,4],[4964,4],[6057,4],[6099,4],[6801,4]]},"87":{"position":[[738,4],[863,4],[905,4],[970,4],[1070,4],[1122,4],[1218,4]]},"96":{"position":[[461,4],[517,4]]},"105":{"position":[[42,5],[91,5]]},"111":{"position":[[567,4],[1892,5],[2823,4],[3136,4],[3356,4]]},"113":{"position":[[111,4],[119,4],[127,4],[135,4],[143,4],[151,4],[159,4],[167,4]]},"114":{"position":[[119,4],[127,4],[135,4],[143,4],[151,4],[159,4],[168,4],[177,4],[186,4],[195,4],[204,4],[213,4],[222,4],[231,4]]},"115":{"position":[[119,4],[127,4],[135,4],[143,4],[152,4],[160,4],[168,4],[177,4],[186,4],[195,4],[204,4],[213,4],[222,4],[231,4]]},"123":{"position":[[1980,4],[2220,4],[3070,4],[3203,5],[3470,4],[3519,4],[3844,4],[3905,4],[4068,5],[4400,4],[4505,4],[4651,5],[4825,4],[5235,4],[5447,4],[5600,4],[5721,4],[6627,4],[7440,5],[8008,5],[8339,5],[8513,4]]},"125":{"position":[[1715,4],[2691,4],[4886,4],[5985,4],[8047,4],[8130,4]]}},"keywords":{}}],["gt;a;递归",{"_index":720,"title":{},"content":{"48":{"position":[[178,9]]}},"keywords":{}}],["gt;b",{"_index":715,"title":{},"content":{"48":{"position":[[114,5],[172,5]]}},"keywords":{}}],["gt;c",{"_index":716,"title":{},"content":{"48":{"position":[[120,5],[166,5]]}},"keywords":{}}],["gt;d（栈顶",{"_index":717,"title":{},"content":{"48":{"position":[[126,9]]}},"keywords":{}}],["gt;h",{"_index":1588,"title":{},"content":{"97":{"position":[[305,5]]}},"keywords":{}}],["h",{"_index":975,"title":{},"content":{"69":{"position":[[32,1],[55,1],[82,1],[164,1],[191,1],[257,1],[280,1],[307,1],[531,1],[579,1],[612,1],[649,1],[686,1]]},"108":{"position":[[251,1]]},"113":{"position":[[132,1]]},"117":{"position":[[43,1]]}},"keywords":{}}],["has(key",{"_index":374,"title":{},"content":{"33":{"position":[[76,8],[101,8]]}},"keywords":{}}],["has(valu",{"_index":1439,"title":{},"content":{"87":{"position":[[60,10],[110,10]]},"93":{"position":[[75,10],[125,10]]}},"keywords":{}}],["hashcod",{"_index":1026,"title":{},"content":{"71":{"position":[[403,9]]},"81":{"position":[[11,8],[131,8],[148,8],[184,8],[223,8],[242,8],[281,8],[304,8]]}},"keywords":{}}],["hashcode(key",{"_index":1203,"title":{},"content":{"79":{"position":[[158,13]]}},"keywords":{}}],["hashfn(key",{"_index":1267,"title":{},"content":{"82":{"position":[[584,11],[1506,11],[1933,11],[5528,11],[6220,11],[6470,11]]}},"keywords":{}}],["hashfn(str",{"_index":1222,"title":{},"content":{"81":{"position":[[50,14]]}},"keywords":{}}],["hashmap",{"_index":348,"title":{},"content":{"30":{"position":[[85,7]]},"76":{"position":[[1948,7]]},"79":{"position":[[122,7]]}},"keywords":{}}],["hashtabl",{"_index":1240,"title":{},"content":{"82":{"position":[[79,9],[4539,9],[5107,9]]}},"keywords":{}}],["hashtable.length",{"_index":1355,"title":{},"content":{"82":{"position":[[2984,17]]}},"keywords":{}}],["hashtable，并添加必要的属性和上面实现的哈希函数，再进行其他方法的实现",{"_index":1239,"title":{},"content":{"82":{"position":[[32,40]]}},"keywords":{}}],["head",{"_index":2114,"title":{},"content":{"123":{"position":[[97,4],[213,4],[813,4],[841,4],[1106,4],[2380,4],[2414,4],[2549,4],[2582,4],[2618,4],[5785,4],[5813,4],[6101,4],[6787,4],[6821,4],[6956,4],[6989,4],[7025,4]]},"125":{"position":[[241,4]]},"126":{"position":[[30,4]]}},"keywords":{}}],["head，而",{"_index":2391,"title":{},"content":{"126":{"position":[[23,6]]}},"keywords":{}}],["height?open",{"_index":1550,"title":{},"content":{"95":{"position":[[583,11]]}},"keywords":{}}],["hello",{"_index":82,"title":{},"content":{"3":{"position":[[6,5]]},"11":{"position":[[6,5]]},"57":{"position":[[6,5]]}},"keywords":{}}],["http://localhost:3000",{"_index":137,"title":{},"content":{"8":{"position":[[340,23]]}},"keywords":{}}],["h，i",{"_index":1578,"title":{},"content":{"97":{"position":[[105,3]]}},"keywords":{}}],["imag",{"_index":73,"title":{},"content":{"2":{"position":[[343,7]]}},"keywords":{}}],["immedi",{"_index":90,"title":{},"content":{"5":{"position":[[54,11]]}},"keywords":{}}],["import",{"_index":189,"title":{},"content":{"13":{"position":[[550,6],[579,6]]},"14":{"position":[[1034,6],[1063,6],[1226,6]]}},"keywords":{}}],["index",{"_index":1100,"title":{},"content":{"76":{"position":[[151,5]]},"82":{"position":[[576,5],[617,5],[1498,5],[1925,5],[2631,5],[5520,5],[5561,5],[6212,5],[6462,5]]},"123":{"position":[[2604,5],[2625,5],[2711,8],[3296,5],[3313,8],[3636,5],[3709,6],[3750,8],[4164,5],[4181,8],[4909,5],[4926,8],[7011,5],[7032,5],[7118,8],[7533,5],[7550,8],[7742,5],[7815,6],[7856,8],[8104,5],[8121,8],[8597,5],[8614,8]]}},"keywords":{}}],["index+1",{"_index":1114,"title":{},"content":{"76":{"position":[[311,7]]}},"keywords":{}}],["index.j",{"_index":235,"title":{},"content":{"14":{"position":[[1205,8]]}},"keywords":{}}],["index=3",{"_index":1110,"title":{},"content":{"76":{"position":[[260,7]]}},"keywords":{}}],["index=3，但是该位置已经放置了数据",{"_index":1098,"title":{},"content":{"76":{"position":[[118,20]]}},"keywords":{}}],["index=3，如果",{"_index":1109,"title":{},"content":{"76":{"position":[[249,10]]}},"keywords":{}}],["index=4",{"_index":1104,"title":{},"content":{"76":{"position":[[205,7]]}},"keywords":{}}],["indexof",{"_index":2234,"title":{},"content":{"123":{"position":[[3780,7],[7653,9]]},"125":{"position":[[5809,9],[8058,9]]}},"keywords":{}}],["indexof(data",{"_index":2231,"title":{},"content":{"123":{"position":[[3543,13],[3587,13],[7693,13]]},"125":{"position":[[5826,13]]}},"keywords":{}}],["index。然后，根据索引值获取对应的",{"_index":1297,"title":{},"content":{"82":{"position":[[1281,19],[1758,19]]}},"keywords":{}}],["index（通过哈希函数获取",{"_index":1266,"title":{},"content":{"82":{"position":[[554,15],[5498,15]]}},"keywords":{}}],["index，如果没有，返回",{"_index":2233,"title":{},"content":{"123":{"position":[[3569,13],[7675,13]]}},"keywords":{}}],["index，目的为将数据插入到",{"_index":1255,"title":{},"content":{"82":{"position":[[334,15]]}},"keywords":{}}],["init",{"_index":112,"title":{},"content":{"7":{"position":[[155,4]]}},"keywords":{}}],["inordertravers",{"_index":2042,"title":{},"content":{"114":{"position":[[308,18]]}},"keywords":{}}],["inordertraversalnode(nod",{"_index":2044,"title":{},"content":{"114":{"position":[[411,26]]}},"keywords":{}}],["insert",{"_index":2188,"title":{},"content":{"123":{"position":[[2012,8],[2942,6],[6419,8]]},"125":{"position":[[1627,8],[4798,8],[7854,8]]}},"keywords":{}}],["insert(key",{"_index":1783,"title":{},"content":{"111":{"position":[[883,11],[1482,11],[1502,11],[1519,11]]}},"keywords":{}}],["insert(posit",{"_index":2190,"title":{},"content":{"123":{"position":[[2041,16],[6448,16]]},"125":{"position":[[1593,16],[1636,16],[4764,16],[4807,16]]}},"keywords":{}}],["insertnod",{"_index":1810,"title":{},"content":{"111":{"position":[[1460,12],[1991,10]]}},"keywords":{}}],["insertnode()，直到遇到传入",{"_index":1833,"title":{},"content":{"111":{"position":[[1971,19]]}},"keywords":{}}],["insertnode()，直到遇到无左子节点成功插入",{"_index":1827,"title":{},"content":{"111":{"position":[[1807,26]]}},"keywords":{}}],["insertnode()，递归停止",{"_index":1829,"title":{},"content":{"111":{"position":[[1859,18]]}},"keywords":{}}],["insertnode(root",{"_index":1836,"title":{},"content":{"111":{"position":[[2034,16],[2062,16]]}},"keywords":{}}],["instal",{"_index":98,"title":{},"content":{"6":{"position":[[37,10]]},"7":{"position":[[338,8]]}},"keywords":{}}],["integr",{"_index":119,"title":{},"content":{"7":{"position":[[280,10]]}},"keywords":{}}],["interact",{"_index":42,"title":{},"content":{"1":{"position":[[98,11]]}},"keywords":{}}],["intersect",{"_index":1488,"title":{},"content":{"90":{"position":[[3,14]]},"93":{"position":[[981,14]]}},"keywords":{}}],["intersection(otherset",{"_index":1490,"title":{},"content":{"90":{"position":[[27,22]]},"93":{"position":[[1005,22]]}},"keywords":{}}],["intersectionset",{"_index":1491,"title":{},"content":{"90":{"position":[[69,15],[243,16]]},"93":{"position":[[1047,15],[1219,15]]}},"keywords":{}}],["intersectionset.add(valu",{"_index":1496,"title":{},"content":{"90":{"position":[[204,27]]},"93":{"position":[[1181,26]]}},"keywords":{}}],["intro",{"_index":81,"title":{"3":{"position":[[0,5]]},"4":{"position":[[9,5]]},"11":{"position":[[0,5]]},"57":{"position":[[0,5]]}},"content":{"3":{"position":[[0,5]]},"11":{"position":[[0,5]]},"57":{"position":[[0,5]]}},"keywords":{}}],["ipsum",{"_index":15,"title":{},"content":{"0":{"position":[[132,5],[241,5],[284,5],[311,5],[420,5],[463,5],[490,5],[599,5],[642,5],[669,5],[778,5],[821,5],[848,5],[957,5],[1000,5],[1027,5],[1136,5],[1179,5],[1206,5],[1315,5],[1358,5],[1385,5],[1494,5],[1537,5],[1564,5],[1673,5],[1716,5],[1743,5],[1852,5],[1895,5],[1922,5],[2031,5],[2074,5],[2101,5],[2210,5],[2253,5],[2280,5],[2389,5],[2432,5],[2459,5],[2568,5],[2611,5],[2638,5],[2747,5],[2790,5],[2817,5],[2926,5],[2969,5]]},"26":{"position":[[6,5],[115,5],[158,5]]}},"keywords":{}}],["isempti",{"_index":479,"title":{},"content":{"39":{"position":[[256,9],[275,9],[970,9]]},"44":{"position":[[1145,9],[1179,9],[1189,9],[2404,9]]},"53":{"position":[[264,9],[282,9],[750,9]]},"82":{"position":[[2427,9],[6948,9]]},"123":{"position":[[5484,9],[5504,9],[5550,7],[8922,9],[8941,9]]},"125":{"position":[[6998,9],[7017,9]]}},"keywords":{}}],["isleftchild",{"_index":1876,"title":{},"content":{"111":{"position":[[3527,11],[3644,11],[3822,11],[3893,11],[4471,13],[5563,13],[5960,13],[7214,13],[7890,11],[8068,11],[8139,11],[8416,13],[8809,13],[9206,13],[9476,13]]}},"keywords":{}}],["isprim",{"_index":1392,"title":{},"content":{"82":{"position":[[4401,7],[4558,7]]}},"keywords":{}}],["isprime(numb",{"_index":1385,"title":{},"content":{"82":{"position":[[3961,15],[4153,15],[4656,18],[5370,18]]}},"keywords":{}}],["item",{"_index":405,"title":{},"content":{"33":{"position":[[889,7]]},"39":{"position":[[458,4],[490,4]]},"44":{"position":[[1397,4]]},"53":{"position":[[463,4],[495,4]]},"81":{"position":[[205,4]]},"87":{"position":[[743,7],[975,7]]}},"keywords":{}}],["item.charcodeat",{"_index":1232,"title":{},"content":{"81":{"position":[[253,18]]}},"keywords":{}}],["item.el",{"_index":656,"title":{},"content":{"44":{"position":[[1429,12]]}},"keywords":{}}],["item.prior",{"_index":657,"title":{},"content":{"44":{"position":[[1460,13]]}},"keywords":{}}],["i序号",{"_index":2063,"title":{},"content":{"117":{"position":[[45,3]]}},"keywords":{}}],["i，那么左子节点的序号就是",{"_index":1700,"title":{},"content":{"108":{"position":[[341,13]]}},"keywords":{}}],["java",{"_index":347,"title":{},"content":{"30":{"position":[[77,4]]},"43":{"position":[[751,4]]},"76":{"position":[[1940,4]]},"79":{"position":[[114,4]]}},"keywords":{}}],["javascript",{"_index":1206,"title":{},"content":{"79":{"position":[[235,10],[271,10]]},"84":{"position":[[38,10]]},"123":{"position":[[662,10]]},"125":{"position":[[757,10]]}},"keywords":{}}],["k",{"_index":1637,"title":{},"content":{"102":{"position":[[182,1]]},"105":{"position":[[54,1],[88,2]]}},"keywords":{}}],["key",{"_index":334,"title":{},"content":{"29":{"position":[[166,3],[188,3]]},"33":{"position":[[97,3],[252,3],[372,3],[476,3],[480,6],[1261,6]]},"71":{"position":[[268,3]]},"76":{"position":[[1364,4],[1424,4]]},"82":{"position":[[250,5],[324,3],[531,3],[906,4],[919,3],[1065,5],[1250,3],[1373,3],[1657,4],[1727,3],[1897,3],[2167,4],[5475,3],[5850,4],[5863,3],[6010,5],[6371,4],[6434,3],[6704,4]]},"111":{"position":[[1239,3],[1299,4],[1374,3],[2775,3],[2981,5],[3016,4],[3059,4],[3115,5],[3131,4],[3188,5],[3301,4],[3351,4],[3746,4],[3793,4],[7992,4],[8039,4]]}},"keywords":{}}],["key。如果等于，直接返回对应的",{"_index":1305,"title":{},"content":{"82":{"position":[[1385,16]]}},"keywords":{}}],["key，用于保存不同的元素",{"_index":1023,"title":{},"content":{"71":{"position":[[288,14]]}},"keywords":{}}],["key，直接",{"_index":1308,"title":{},"content":{"82":{"position":[[1434,6]]}},"keywords":{}}],["key，返回",{"_index":383,"title":{},"content":{"33":{"position":[[282,6]]}},"keywords":{}}],["key，那么就是修改操作",{"_index":1251,"title":{},"content":{"82":{"position":[[297,13]]}},"keywords":{}}],["key，那么就是插入操作，如果原来已经存在该",{"_index":1250,"title":{},"content":{"82":{"position":[[274,22]]}},"keywords":{}}],["k，且结点总数是(2^k",{"_index":1682,"title":{},"content":{"107":{"position":[[156,13]]}},"keywords":{}}],["laodfactor",{"_index":1370,"title":{},"content":{"82":{"position":[[3368,10],[3584,10]]}},"keywords":{}}],["last",{"_index":684,"title":{},"content":{"47":{"position":[[100,4]]},"49":{"position":[[41,4]]}},"keywords":{}}],["ldr",{"_index":2041,"title":{},"content":{"114":{"position":[[303,4]]}},"keywords":{}}],["left、right",{"_index":1799,"title":{},"content":{"111":{"position":[[1226,10]]}},"keywords":{}}],["len",{"_index":1320,"title":{},"content":{"82":{"position":[[2085,3],[2113,4],[6622,3],[6650,4]]}},"keywords":{}}],["length",{"_index":362,"title":{},"content":{"32":{"position":[[177,6]]},"38":{"position":[[224,6]]},"52":{"position":[[155,6]]},"79":{"position":[[178,7]]},"86":{"position":[[126,6]]},"123":{"position":[[614,6],[795,6],[2486,6],[5767,6],[6893,6]]},"125":{"position":[[709,6]]}},"keywords":{}}],["lib",{"_index":229,"title":{},"content":{"14":{"position":[[1148,3]]}},"keywords":{}}],["lili",{"_index":553,"title":{},"content":{"40":{"position":[[1013,4]]}},"keywords":{}}],["limit",{"_index":10,"title":{},"content":{"0":{"position":[[87,5]]},"81":{"position":[[65,5],[315,6]]}},"keywords":{}}],["line",{"_index":142,"title":{},"content":{"8":{"position":[[409,6]]}},"keywords":{}}],["linkedblockingqueue。但是有界队列就不一样了，当队列满的话后面再有任务/请求就会拒绝，在",{"_index":609,"title":{},"content":{"43":{"position":[[697,53]]}},"keywords":{}}],["linkedlist",{"_index":2145,"title":{},"content":{"123":{"position":[[769,10],[1433,10],[1450,13],[5741,10]]},"125":{"position":[[956,10],[1162,10],[4325,10]]}},"keywords":{}}],["linkedlist.append(&quot;a&quot",{"_index":2172,"title":{},"content":{"123":{"position":[[1464,33]]}},"keywords":{}}],["linkedlist.append(&quot;b&quot",{"_index":2173,"title":{},"content":{"123":{"position":[[1498,33]]}},"keywords":{}}],["linkedlist.append(&quot;c&quot",{"_index":2174,"title":{},"content":{"123":{"position":[[1532,33]]}},"keywords":{}}],["linkedlist.insert(0",{"_index":2215,"title":{},"content":{"123":{"position":[[2952,20]]}},"keywords":{}}],["linkedlist.insert(2",{"_index":2216,"title":{},"content":{"123":{"position":[[2991,20]]}},"keywords":{}}],["linkedlist.remove(&quot;cc&quot",{"_index":2268,"title":{},"content":{"123":{"position":[[5372,34]]}},"keywords":{}}],["linkedlist.removeat(3",{"_index":2264,"title":{},"content":{"123":{"position":[[5171,23]]}},"keywords":{}}],["linkedlist.update(0",{"_index":2246,"title":{},"content":{"123":{"position":[[4319,20]]}},"keywords":{}}],["linkedlist.update(1",{"_index":2249,"title":{},"content":{"123":{"position":[[4424,20]]}},"keywords":{}}],["linkedlist，添加基本属性，再逐步实现单向链表的常用方法",{"_index":2144,"title":{},"content":{"123":{"position":[[729,33]]}},"keywords":{}}],["list",{"_index":12,"title":{},"content":{"0":{"position":[[115,4]]}},"keywords":{}}],["loaderopt",{"_index":168,"title":{},"content":{"13":{"position":[[148,14]]}},"keywords":{}}],["loadfactor",{"_index":1338,"title":{},"content":{"82":{"position":[[2694,10],[2963,10]]}},"keywords":{}}],["local",{"_index":133,"title":{},"content":{"8":{"position":[[263,7]]}},"keywords":{}}],["locat",{"_index":72,"title":{},"content":{"2":{"position":[[326,6]]}},"keywords":{}}],["long",{"_index":0,"title":{"0":{"position":[[0,4]]}},"content":{"0":{"position":[[30,4]]}},"keywords":{}}],["lorem",{"_index":14,"title":{},"content":{"0":{"position":[[126,5],[278,5],[305,5],[457,5],[484,5],[636,5],[663,5],[815,5],[842,5],[994,5],[1021,5],[1173,5],[1200,5],[1352,5],[1379,5],[1531,5],[1558,5],[1710,5],[1737,5],[1889,5],[1916,5],[2068,5],[2095,5],[2247,5],[2274,5],[2426,5],[2453,5],[2605,5],[2632,5],[2784,5],[2811,5],[2963,5]]},"26":{"position":[[0,5],[152,5]]}},"keywords":{}}],["lrd",{"_index":2051,"title":{},"content":{"115":{"position":[[260,4]]}},"keywords":{}}],["lt",{"_index":6,"title":{},"content":{"0":{"position":[[52,5]]},"40":{"position":[[407,4]]},"44":{"position":[[672,4],[766,4]]},"82":{"position":[[813,4],[2108,4],[2306,4],[3595,4],[3748,4],[3990,5],[4031,4],[4182,5],[4282,4],[5006,4],[5757,4],[6645,4],[6843,4]]},"111":{"position":[[614,4],[663,4],[1739,4],[2100,4],[2796,4],[3064,4],[3306,4],[3798,4],[8044,4]]},"123":{"position":[[2201,4],[2466,4],[2480,5],[2720,4],[3184,4],[3322,4],[4049,4],[4190,4],[4632,4],[4935,4],[6608,4],[6873,4],[6887,5],[7127,4],[7421,4],[7559,4],[7989,4],[8130,4],[8320,4],[8623,4]]},"125":{"position":[[1696,4],[2326,4],[2672,4],[3307,4],[4867,4],[5497,4],[5966,4],[6504,4]]}},"keywords":{}}],["lt;button",{"_index":43,"title":{},"content":{"1":{"position":[[122,10]]}},"keywords":{}}],["map",{"_index":371,"title":{},"content":{"33":{"position":[[32,3],[711,3],[721,6]]},"38":{"position":[[138,3]]},"53":{"position":[[16,3]]},"54":{"position":[[87,6]]}},"keywords":{}}],["map.remove(&quot;name&quot",{"_index":413,"title":{},"content":{"33":{"position":[[1103,29]]}},"keywords":{}}],["map.set(&quot;age&quot",{"_index":400,"title":{},"content":{"33":{"position":[[786,24]]}},"keywords":{}}],["map.set(&quot;email&quot",{"_index":402,"title":{},"content":{"33":{"position":[[816,26]]}},"keywords":{}}],["map.set(&quot;name&quot",{"_index":398,"title":{},"content":{"33":{"position":[[740,25]]}},"keywords":{}}],["map，保存余数",{"_index":824,"title":{},"content":{"54":{"position":[[60,8]]}},"keywords":{}}],["map，比如",{"_index":346,"title":{},"content":{"30":{"position":[[70,6]]}},"keywords":{}}],["markdown",{"_index":35,"title":{},"content":{"1":{"position":[[30,8]]},"2":{"position":[[72,8]]}},"keywords":{}}],["math.ceil(math.sqrt(numb",{"_index":1389,"title":{},"content":{"82":{"position":[[4234,29]]}},"keywords":{}}],["math.floor(dec",{"_index":832,"title":{},"content":{"54":{"position":[[189,14]]}},"keywords":{}}],["max",{"_index":1850,"title":{},"content":{"111":{"position":[[2581,5],[2598,5]]}},"keywords":{}}],["mdx",{"_index":32,"title":{"1":{"position":[[0,3]]}},"content":{"1":{"position":[[57,4]]}},"keywords":{}}],["me!&lt;/button&gt",{"_index":47,"title":{},"content":{"1":{"position":[[186,18]]}},"keywords":{}}],["min",{"_index":1847,"title":{},"content":{"111":{"position":[[2434,5],[2451,5]]}},"keywords":{}}],["module.export",{"_index":166,"title":{},"content":{"13":{"position":[[122,14]]},"14":{"position":[[255,14]]}},"keywords":{}}],["modules/i",{"_index":211,"title":{},"content":{"14":{"position":[[422,9]]}},"keywords":{}}],["m序号",{"_index":2067,"title":{},"content":{"117":{"position":[[225,3]]}},"keywords":{}}],["m（m",{"_index":1569,"title":{},"content":{"96":{"position":[[513,3]]}},"keywords":{}}],["n",{"_index":1185,"title":{},"content":{"78":{"position":[[80,1],[99,1]]},"95":{"position":[[43,1],[58,1]]},"96":{"position":[[436,1]]},"109":{"position":[[456,2]]}},"keywords":{}}],["n)。但是它的整体效率不如红黑树，开发中比较少用。红黑树：同样通过一些特性来保持树的平衡，时间复杂度也是",{"_index":1727,"title":{},"content":{"109":{"position":[[582,52]]}},"keywords":{}}],["n)。而对于一棵非平衡二叉树来说，相当于编写了一个链表，查找效率变成了",{"_index":1717,"title":{},"content":{"109":{"position":[[340,35]]}},"keywords":{}}],["n)。进行插入/删除等操作时，性能优于",{"_index":1728,"title":{},"content":{"109":{"position":[[641,19]]}},"keywords":{}}],["n)来操作一棵树，我们需要保证树总是平衡的",{"_index":1720,"title":{},"content":{"109":{"position":[[404,22]]}},"keywords":{}}],["n0",{"_index":1663,"title":{},"content":{"105":{"position":[[130,2],[240,2]]}},"keywords":{}}],["n2",{"_index":1666,"title":{},"content":{"105":{"position":[[175,2],[245,2]]}},"keywords":{}}],["name",{"_index":406,"title":{},"content":{"33":{"position":[[897,6]]},"40":{"position":[[242,4],[814,5]]}},"keywords":{}}],["namelist",{"_index":517,"title":{},"content":{"40":{"position":[[211,8],[250,9]]}},"keywords":{}}],["namelist.indexof(endnam",{"_index":542,"title":{},"content":{"40":{"position":[[756,26]]}},"keywords":{}}],["names[targetindex",{"_index":552,"title":{},"content":{"40":{"position":[[983,20]]}},"keywords":{}}],["navig",{"_index":131,"title":{},"content":{"8":{"position":[[188,8]]}},"keywords":{}}],["necessari",{"_index":122,"title":{},"content":{"7":{"position":[[351,9]]}},"keywords":{}}],["need",{"_index":93,"title":{"6":{"position":[[12,5]]}},"content":{"7":{"position":[[378,4]]},"8":{"position":[[180,4]]}},"keywords":{}}],["new",{"_index":87,"title":{"7":{"position":[[11,3]]}},"content":{"5":{"position":[[26,3]]},"7":{"position":[[11,3]]},"33":{"position":[[717,3]]},"39":{"position":[[553,3]]},"40":{"position":[[191,3]]},"44":{"position":[[481,3],[1540,3]]},"54":{"position":[[53,3],[83,3]]},"87":{"position":[[635,3]]},"89":{"position":[[66,3]]},"90":{"position":[[87,3]]},"91":{"position":[[75,3]]},"93":{"position":[[725,3],[1065,3],[1312,3]]},"95":{"position":[[598,3]]},"102":{"position":[[276,3]]},"111":{"position":[[1549,3]]},"123":{"position":[[1032,3],[1446,3],[2279,3],[6027,3],[6686,3]]},"125":{"position":[[1335,3],[1779,3],[4521,3],[4950,3],[7658,3]]}},"keywords":{}}],["newli",{"_index":130,"title":{},"content":{"8":{"position":[[142,5]]}},"keywords":{}}],["newlimit",{"_index":1363,"title":{},"content":{"82":{"position":[[3193,9],[7171,9]]}},"keywords":{}}],["newnod",{"_index":1813,"title":{},"content":{"111":{"position":[[1539,7],[1602,8],[1647,9],[1834,7],[2022,7]]},"123":{"position":[[1022,7],[1127,8],[1371,8],[1701,8],[2269,7],[2423,7],[2443,8],[2882,8],[2925,8],[6017,7],[6122,8],[6366,8],[6676,7],[6830,7],[6850,8],[7289,8],[7332,8]]},"125":{"position":[[1325,7],[1408,8],[1429,8],[1500,8],[1547,8],[1769,7],[1892,8],[1913,8],[1962,7],[2022,8],[2043,8],[2123,8],[2170,8],[2435,8],[2520,8],[4511,7],[4594,8],[4615,8],[4686,8],[4733,8],[4940,7],[5063,8],[5084,8],[5133,7],[5193,8],[5214,8],[5294,8],[5341,8],[5606,8],[5691,8]]}},"keywords":{}}],["newnode.key",{"_index":1819,"title":{},"content":{"111":{"position":[[1727,11],[1880,11]]}},"keywords":{}}],["newnode.next",{"_index":2204,"title":{},"content":{"123":{"position":[[2385,12],[2834,12],[6792,12],[7241,12]]},"125":{"position":[[1979,12],[2473,12],[5150,12],[5644,12]]}},"keywords":{}}],["newnode.prev",{"_index":2326,"title":{},"content":{"125":{"position":[[1509,12],[2132,12],[2444,12],[4695,12],[5303,12],[5615,12]]}},"keywords":{}}],["newnode，直接把新节点作为二叉搜索树的根节点。若存在根节点则重新定义一个内部方法",{"_index":1809,"title":{},"content":{"111":{"position":[[1416,43]]}},"keywords":{}}],["newnode，让最后一个节点指向新节点",{"_index":2180,"title":{},"content":{"123":{"position":[[1680,20]]}},"keywords":{}}],["next",{"_index":2112,"title":{},"content":{"123":{"position":[[26,4],[895,4],[1246,4],[1341,4],[2361,4],[5029,4],[5867,4],[6241,4],[6336,4],[6768,4],[8717,4]]},"125":{"position":[[31,4],[362,4]]},"126":{"position":[[15,4]]}},"keywords":{}}],["next，相当于删除了当前节点",{"_index":2261,"title":{},"content":{"123":{"position":[[5044,16],[8732,16]]}},"keywords":{}}],["node",{"_index":210,"title":{},"content":{"14":{"position":[[416,5]]},"100":{"position":[[26,5],[140,5],[212,5]]},"111":{"position":[[1262,4],[1766,4],[1790,4],[1928,4],[1952,4],[2007,4],[2051,5],[2079,5],[2166,5],[2208,6],[2277,5],[2320,6],[2492,4],[2539,4],[2639,4],[2687,4],[3026,5],[3256,4],[3280,5],[3323,4],[3373,4]]},"113":{"position":[[345,5]]},"114":{"position":[[451,5]]},"115":{"position":[[414,5]]},"123":{"position":[[646,4],[868,5],[874,4],[5840,5],[5846,4]]},"125":{"position":[[741,4],[898,4],[1047,4]]}},"keywords":{}}],["node(key",{"_index":1814,"title":{},"content":{"111":{"position":[[1553,10]]}},"keywords":{}}],["node.j",{"_index":94,"title":{},"content":{"6":{"position":[[0,7],[48,8]]}},"keywords":{}}],["node.key",{"_index":1820,"title":{},"content":{"111":{"position":[[1744,8],[1898,8],[2090,9],[2566,9],[2715,9],[2787,8],[2814,8],[3069,9],[3141,9],[3311,9],[3361,9]]}},"keywords":{}}],["node.left",{"_index":1849,"title":{},"content":{"111":{"position":[[2516,10],[2546,10],[3330,10]]}},"keywords":{}}],["node.right",{"_index":1852,"title":{},"content":{"111":{"position":[[2663,11],[2694,11],[3380,11]]}},"keywords":{}}],["node，nod",{"_index":2070,"title":{},"content":{"118":{"position":[[26,9]]}},"keywords":{}}],["npm",{"_index":111,"title":{},"content":{"7":{"position":[[151,3]]},"8":{"position":[[42,3],[221,3]]},"13":{"position":[[30,3],[628,3]]},"14":{"position":[[1177,3]]}},"keywords":{}}],["null",{"_index":1121,"title":{},"content":{"76":{"position":[[475,4]]},"82":{"position":[[1448,4],[1602,5],[1692,5],[1871,5],[2029,5],[6316,5],[6406,5],[6566,5]]},"100":{"position":[[127,4],[252,4],[277,4]]},"111":{"position":[[1316,5],[1335,5],[1582,5],[2146,5],[2256,5],[2482,5],[2531,5],[2629,5],[2679,5],[2848,4],[3036,5],[3290,5],[3634,5],[3995,5],[4364,4],[4402,5],[4455,5],[4505,5],[4539,5],[4628,6],[4952,6],[5299,5],[5695,5],[7559,5],[7880,5],[8241,5],[8309,4],[8347,5],[8400,5],[8450,5],[8484,5],[8545,5],[8941,5],[9821,5]]},"113":{"position":[[355,5]]},"114":{"position":[[461,5]]},"115":{"position":[[424,5]]},"123":{"position":[[134,5],[245,5],[276,5],[848,5],[902,5],[1253,4],[1288,5],[1810,4],[2573,5],[2595,4],[3229,5],[4677,5],[4899,5],[5820,5],[5874,5],[6248,4],[6283,5],[6980,5],[7002,4],[7466,5],[8365,5],[8587,5],[9150,4]]},"125":{"position":[[370,5],[1105,5],[1212,5],[1388,5],[1872,5],[2285,5],[2720,5],[2864,5],[2882,5],[2957,5],[2998,5],[3007,4],[3052,5],[3163,5],[3280,5],[3881,4],[4143,4],[4375,5],[4574,5],[5043,5],[5456,5],[6014,5],[6154,5],[6172,5],[6247,5],[6360,5],[6477,5],[7243,4],[7502,4]]}},"keywords":{}}],["null。双向链表的最后一个节点的",{"_index":2294,"title":{},"content":{"125":{"position":[[344,17]]}},"keywords":{}}],["null。随后，线性查找",{"_index":1313,"title":{},"content":{"82":{"position":[[1825,12]]}},"keywords":{}}],["null。随后，线性遍历",{"_index":1302,"title":{},"content":{"82":{"position":[[1348,12]]}},"keywords":{}}],["null，head",{"_index":2148,"title":{},"content":{"123":{"position":[[820,9],[5792,9]]}},"keywords":{}}],["null，删除根节点",{"_index":1898,"title":{},"content":{"111":{"position":[[4179,11]]}},"keywords":{}}],["null，删除节点",{"_index":1902,"title":{},"content":{"111":{"position":[[4259,9],[4307,9]]}},"keywords":{}}],["null，否则会影响到之后其他的查询操作，因为一遇到为",{"_index":1120,"title":{},"content":{"76":{"position":[[447,27]]}},"keywords":{}}],["null，如果为",{"_index":1300,"title":{},"content":{"82":{"position":[[1329,8],[1806,8]]}},"keywords":{}}],["null，直接返回",{"_index":1301,"title":{},"content":{"82":{"position":[[1338,9],[1815,9]]}},"keywords":{}}],["null，而是指向链表的头结点",{"_index":2278,"title":{},"content":{"124":{"position":[[38,16]]}},"keywords":{}}],["num",{"_index":1383,"title":{},"content":{"82":{"position":[[3918,4],[4123,3]]}},"keywords":{}}],["number",{"_index":509,"title":{},"content":{"40":{"position":[[63,6],[146,7],[353,6],[375,6],[412,6],[434,6],[512,6],[574,6],[585,6],[619,6]]},"82":{"position":[[3880,6],[3898,7],[3982,7],[4036,7],[4054,7],[4174,7],[4193,6],[4303,7],[4615,6],[4677,9],[4696,7],[5329,6],[5391,9],[5410,7]]}},"keywords":{}}],["number，循环遍历数组内元素，遍历到的元素为指定数字",{"_index":508,"title":{},"content":{"40":{"position":[[34,28]]}},"keywords":{}}],["n（n",{"_index":1562,"title":{},"content":{"96":{"position":[[415,3]]}},"keywords":{}}],["o",{"_index":1196,"title":{},"content":{"78":{"position":[[174,1]]}},"keywords":{}}],["o(1",{"_index":1017,"title":{},"content":{"71":{"position":[[124,4]]},"120":{"position":[[114,4]]}},"keywords":{}}],["o(1)，但是，涉及到更新（插入或删除）数据时，时间复杂度为",{"_index":241,"title":{},"content":{"16":{"position":[[115,30]]}},"keywords":{}}],["o(1)，相对数组效率高很多",{"_index":2101,"title":{},"content":{"121":{"position":[[522,15]]}},"keywords":{}}],["o(log",{"_index":1716,"title":{},"content":{"109":{"position":[[334,5],[398,5],[450,5],[576,5],[635,5]]}},"keywords":{}}],["o(log(n",{"_index":243,"title":{},"content":{"16":{"position":[[161,9]]}},"keywords":{}}],["o(n",{"_index":245,"title":{},"content":{"16":{"position":[[198,4]]},"78":{"position":[[204,5]]},"109":{"position":[[376,5]]},"120":{"position":[[169,4]]}},"keywords":{}}],["o(n)，即使是使用复杂度为",{"_index":242,"title":{},"content":{"16":{"position":[[146,14]]}},"keywords":{}}],["o(n^2)降到了",{"_index":1198,"title":{},"content":{"78":{"position":[[194,9]]}},"keywords":{}}],["o(nlog(n))，堆可以做到o(1)时间复杂度取出最大值或者最小值，o(log(n))时间复杂度插入或者删除数据，具体操作在后续章节详细介绍",{"_index":249,"title":{},"content":{"16":{"position":[[251,73]]}},"keywords":{}}],["o(nlog(n))，查找最大值或者最小值时间复杂度都是",{"_index":240,"title":{},"content":{"16":{"position":[[86,28]]}},"keywords":{}}],["object",{"_index":1418,"title":{},"content":{"84":{"position":[[51,6]]}},"keywords":{}}],["object.keys(this.item",{"_index":390,"title":{},"content":{"33":{"position":[[496,24]]},"87":{"position":[[589,23]]},"93":{"position":[[604,23]]}},"keywords":{}}],["object.keys(this.items).length",{"_index":1452,"title":{},"content":{"87":{"position":[[511,30]]},"93":{"position":[[526,30]]}},"keywords":{}}],["object.values(this.item",{"_index":391,"title":{},"content":{"33":{"position":[[556,26]]}},"keywords":{}}],["oldstorag",{"_index":1344,"title":{},"content":{"82":{"position":[[2796,10],[2862,10],[3106,10],[3272,11],[7084,10],[7250,11]]}},"keywords":{}}],["oldstorage，取出所有数据，重新",{"_index":1365,"title":{},"content":{"82":{"position":[[3211,20],[7189,20]]}},"keywords":{}}],["onclick",{"_index":44,"title":{},"content":{"1":{"position":[[133,11]]}},"keywords":{}}],["open",{"_index":138,"title":{},"content":{"8":{"position":[[364,4]]}},"keywords":{}}],["order",{"_index":129,"title":{},"content":{"8":{"position":[[118,5]]}},"keywords":{}}],["otherset",{"_index":1483,"title":{},"content":{"89":{"position":[[186,8]]},"90":{"position":[[127,8]]},"91":{"position":[[115,8]]},"92":{"position":[[61,8]]},"93":{"position":[[843,8],[1104,8],[1351,8],[1551,8]]}},"keywords":{}}],["otherset.has(valu",{"_index":1495,"title":{},"content":{"90":{"position":[[180,21]]},"91":{"position":[[177,22]]},"92":{"position":[[146,22]]},"93":{"position":[[1157,21],[1413,22],[1636,22]]}},"keywords":{}}],["otherset.valu",{"_index":1485,"title":{},"content":{"89":{"position":[[243,18]]},"93":{"position":[[900,18]]}},"keywords":{}}],["out",{"_index":426,"title":{},"content":{"35":{"position":[[50,4],[239,5]]},"47":{"position":[[114,4]]},"49":{"position":[[55,4]]}},"keywords":{}}],["output",{"_index":667,"title":{},"content":{"44":{"position":[[1833,7],[2228,7]]}},"keywords":{}}],["overfloat",{"_index":725,"title":{},"content":{"48":{"position":[[280,11]]}},"keywords":{}}],["overrid",{"_index":202,"title":{},"content":{"14":{"position":[[159,8]]}},"keywords":{}}],["override((config",{"_index":206,"title":{},"content":{"14":{"position":[[272,17]]}},"keywords":{}}],["package.json",{"_index":214,"title":{},"content":{"14":{"position":[[460,12]]}},"keywords":{}}],["page",{"_index":140,"title":{},"content":{"8":{"position":[[389,5]]}},"keywords":{}}],["parent",{"_index":1874,"title":{},"content":{"111":{"position":[[3507,6],[3554,6],[4739,6],[4836,6],[5064,6],[5162,6]]}},"keywords":{}}],["parentnod",{"_index":1880,"title":{},"content":{"111":{"position":[[3621,10],[3753,10],[7867,10],[7999,10]]}},"keywords":{}}],["parentnode.left",{"_index":1905,"title":{},"content":{"111":{"position":[[4487,15],[5579,15],[5810,15],[5976,15],[7230,15],[8432,15],[8825,15],[9056,15],[9222,15],[9492,15]]}},"keywords":{}}],["parentnode.right",{"_index":1906,"title":{},"content":{"111":{"position":[[4520,16],[5624,16],[5854,16],[6022,16],[7268,16],[8465,16],[8870,16],[9100,16],[9268,16],[9530,16]]}},"keywords":{}}],["parentnode、isleftchild",{"_index":1883,"title":{},"content":{"111":{"position":[[3696,22],[7942,22]]}},"keywords":{}}],["passgam",{"_index":543,"title":{},"content":{"40":{"position":[[794,10]]}},"keywords":{}}],["passgame(nam",{"_index":549,"title":{},"content":{"40":{"position":[[933,15]]}},"keywords":{}}],["passgame(namelist",{"_index":512,"title":{},"content":{"40":{"position":[[127,18]]}},"keywords":{}}],["peek",{"_index":461,"title":{},"content":{"38":{"position":[[145,4]]},"53":{"position":[[194,6],[208,6],[699,6]]}},"keywords":{}}],["pellentesqu",{"_index":22,"title":{},"content":{"0":{"position":[[183,12],[362,12],[541,12],[720,12],[899,12],[1078,12],[1257,12],[1436,12],[1615,12],[1794,12],[1973,12],[2152,12],[2331,12],[2510,12],[2689,12],[2868,12]]},"26":{"position":[[57,12]]}},"keywords":{}}],["plugin",{"_index":52,"title":{},"content":{"2":{"position":[[53,7]]},"13":{"position":[[176,8]]},"14":{"position":[[327,8]]}},"keywords":{}}],["pop",{"_index":686,"title":{},"content":{"47":{"position":[[136,3]]},"53":{"position":[[126,5],[156,5],[650,5]]}},"keywords":{}}],["posit",{"_index":2191,"title":{},"content":{"123":{"position":[[2069,8],[2090,8],[2119,8],[2157,8],[2191,9],[2211,8],[2313,9],[2335,8],[2471,8],[2644,8],[2725,9],[3174,9],[3194,8],[3245,8],[3327,9],[3999,8],[4039,9],[4059,8],[4118,8],[4195,9],[4622,9],[4642,8],[4693,8],[4737,9],[4759,8],[4816,8],[4851,8],[4940,9],[6476,8],[6497,8],[6526,8],[6564,8],[6598,9],[6618,8],[6720,9],[6742,8],[6878,8],[7051,8],[7132,9],[7411,9],[7431,8],[7482,8],[7564,9],[7939,8],[7979,9],[7999,8],[8058,8],[8135,9],[8310,9],[8330,8],[8381,8],[8425,9],[8447,8],[8504,8],[8539,8],[8628,9]]},"125":{"position":[[1686,9],[1706,8],[1821,9],[2064,9],[2331,9],[2662,9],[2682,8],[2774,9],[3068,9],[3312,9],[3605,8],[3667,8],[4857,9],[4877,8],[4992,9],[5235,9],[5502,9],[5956,9],[5976,8],[6068,9],[6265,9],[6509,9],[6787,8],[6849,8]]}},"keywords":{}}],["post",{"_index":2,"title":{"0":{"position":[[10,4]]},"1":{"position":[[9,4]]},"26":{"position":[[11,4]]}},"content":{"0":{"position":[[40,5],[98,4]]},"1":{"position":[[5,5],[115,6]]},"2":{"position":[[182,4],[290,4],[338,4]]}},"keywords":{}}],["postcss",{"_index":157,"title":{},"content":{"13":{"position":[[36,7],[165,8]]},"14":{"position":[[45,7],[109,7],[245,9]]}},"keywords":{}}],["postordertravers",{"_index":2052,"title":{},"content":{"115":{"position":[[265,20]]}},"keywords":{}}],["postordertraversalnode(nod",{"_index":2054,"title":{},"content":{"115":{"position":[[372,28]]}},"keywords":{}}],["power",{"_index":39,"title":{},"content":{"1":{"position":[[73,5]]},"2":{"position":[[33,7]]}},"keywords":{}}],["powershel",{"_index":117,"title":{},"content":{"7":{"position":[[245,11]]}},"keywords":{}}],["preordertravers",{"_index":2024,"title":{},"content":{"113":{"position":[[199,19]]}},"keywords":{}}],["preordertraversalnode(nod",{"_index":2026,"title":{},"content":{"113":{"position":[[304,27]]}},"keywords":{}}],["prev",{"_index":2281,"title":{},"content":{"125":{"position":[[15,4],[336,4]]},"126":{"position":[[37,4]]}},"keywords":{}}],["previousnod",{"_index":2208,"title":{},"content":{"123":{"position":[[2558,12],[2678,12],[2737,12],[4884,12],[4952,12],[6965,12],[7085,12],[7144,12],[8572,12],[8640,12]]},"125":{"position":[[2270,12],[2343,12],[2459,13],[3265,12],[3324,12],[3448,13],[5441,12],[5514,12],[5630,13],[6462,12],[6521,12],[6645,13]]}},"keywords":{}}],["previousnode.next",{"_index":2213,"title":{},"content":{"123":{"position":[[2862,17],[5061,17],[7269,17],[8749,17]]},"125":{"position":[[2415,17],[3386,17],[5586,17],[6583,17]]}},"keywords":{}}],["prime",{"_index":1225,"title":{},"content":{"81":{"position":[[109,5],[234,5]]}},"keywords":{}}],["prioriti",{"_index":622,"title":{},"content":{"44":{"position":[[181,9],[233,9],[358,9],[418,9],[507,10],[1882,9],[1937,9],[1992,9],[2047,9],[2102,9],[2277,9],[2332,9],[2387,9]]}},"keywords":{}}],["priorityqueu",{"_index":628,"title":{},"content":{"44":{"position":[[281,13],[1524,13],[1544,16]]}},"keywords":{}}],["priorityqueue.dequeu",{"_index":670,"title":{},"content":{"44":{"position":[[2135,24],[2160,24]]}},"keywords":{}}],["priorityqueue.enqueue(&quot;a&quot",{"_index":658,"title":{},"content":{"44":{"position":[[1580,36]]}},"keywords":{}}],["priorityqueue.enqueue(&quot;b&quot",{"_index":659,"title":{},"content":{"44":{"position":[[1622,36]]}},"keywords":{}}],["priorityqueue.enqueue(&quot;c&quot",{"_index":661,"title":{},"content":{"44":{"position":[[1664,36]]}},"keywords":{}}],["priorityqueue.enqueue(&quot;d&quot",{"_index":663,"title":{},"content":{"44":{"position":[[1706,36]]}},"keywords":{}}],["priorityqueue.enqueue(&quot;e&quot",{"_index":665,"title":{},"content":{"44":{"position":[[1748,36]]}},"keywords":{}}],["project",{"_index":108,"title":{},"content":{"7":{"position":[[116,7]]}},"keywords":{}}],["prompt",{"_index":116,"title":{},"content":{"7":{"position":[[237,7]]}},"keywords":{}}],["push",{"_index":795,"title":{},"content":{"52":{"position":[[0,6]]},"53":{"position":[[547,6]]}},"keywords":{}}],["push(item",{"_index":803,"title":{},"content":{"53":{"position":[[60,10],[85,10]]}},"keywords":{}}],["put",{"_index":1366,"title":{},"content":{"82":{"position":[[3232,3],[4715,3],[4753,3],[7210,3]]}},"keywords":{}}],["put(key",{"_index":1210,"title":{},"content":{"80":{"position":[[0,8]]},"82":{"position":[[479,8],[505,8],[5423,8],[5449,8]]}},"keywords":{}}],["px",{"_index":185,"title":{},"content":{"13":{"position":[[460,4]]},"14":{"position":[[944,4]]}},"keywords":{}}],["px2rem",{"_index":158,"title":{},"content":{"13":{"position":[[44,6],[87,6],[113,8],[185,9]]},"14":{"position":[[53,6],[364,10]]}},"keywords":{}}],["queue",{"_index":469,"title":{},"content":{"39":{"position":[[6,5],[545,5],[557,8]]},"40":{"position":[[168,5],[183,5],[195,8]]},"44":{"position":[[259,5],[303,5],[1007,5],[1091,5],[1170,5],[1254,5]]}},"keywords":{}}],["queue.dequeu",{"_index":499,"title":{},"content":{"39":{"position":[[814,16],[831,16]]},"40":{"position":[[662,16]]}},"keywords":{}}],["queue.enqueue(&quot;a&quot",{"_index":490,"title":{},"content":{"39":{"position":[[582,29]]}},"keywords":{}}],["queue.enqueue(&quot;b&quot",{"_index":491,"title":{},"content":{"39":{"position":[[612,29]]}},"keywords":{}}],["queue.enqueue(&quot;c&quot",{"_index":492,"title":{},"content":{"39":{"position":[[642,29]]}},"keywords":{}}],["queue.enqueue(&quot;d&quot",{"_index":493,"title":{},"content":{"39":{"position":[[672,29]]}},"keywords":{}}],["queue.enqueue(nam",{"_index":519,"title":{},"content":{"40":{"position":[[262,20]]}},"keywords":{}}],["queue.enqueue(queue.dequeu",{"_index":529,"title":{},"content":{"40":{"position":[[475,31]]}},"keywords":{}}],["queue.front",{"_index":540,"title":{},"content":{"40":{"position":[[713,14]]}},"keywords":{}}],["queue.siz",{"_index":524,"title":{},"content":{"40":{"position":[[323,13]]}},"keywords":{}}],["queueelement",{"_index":620,"title":{},"content":{"44":{"position":[[145,12],[444,12],[466,12],[835,14],[1844,12],[1899,12],[1954,12],[2009,12],[2064,12],[2239,12],[2294,12],[2349,12]]}},"keywords":{}}],["queueelement(el",{"_index":634,"title":{},"content":{"44":{"position":[[485,21]]}},"keywords":{}}],["queueelement.prior",{"_index":642,"title":{},"content":{"44":{"position":[[743,22]]}},"keywords":{}}],["queuesiz",{"_index":600,"title":{},"content":{"43":{"position":[[377,10]]}},"keywords":{}}],["quot",{"_index":488,"title":{},"content":{"39":{"position":[[497,6],[504,7]]},"44":{"position":[[1444,6],[1451,6],[1476,6],[1483,7]]},"53":{"position":[[502,6],[509,7]]},"123":{"position":[[9206,6],[9213,7]]},"125":{"position":[[7299,6],[7307,7],[7558,6],[7566,7]]}},"keywords":{}}],["quot;&quot",{"_index":487,"title":{},"content":{"39":{"position":[[435,13]]},"44":{"position":[[1374,13]]},"53":{"position":[[440,13]]},"54":{"position":[[245,13]]},"123":{"position":[[9112,13]]},"125":{"position":[[7205,13],[7464,13]]}},"keywords":{}}],["quot;00&quot",{"_index":2376,"title":{},"content":{"125":{"position":[[7893,16]]}},"keywords":{}}],["quot;111111&quot",{"_index":2385,"title":{},"content":{"125":{"position":[[8318,20]]}},"keywords":{}}],["quot;123&quot",{"_index":1459,"title":{},"content":{"87":{"position":[[757,16],[989,16],[1127,17]]},"123":{"position":[[2973,17]]}},"keywords":{}}],["quot;12345&quot",{"_index":2247,"title":{},"content":{"123":{"position":[[4340,19]]}},"keywords":{}}],["quot;22&quot",{"_index":2378,"title":{},"content":{"125":{"position":[[7937,16]]}},"keywords":{}}],["quot;456&quot",{"_index":2217,"title":{},"content":{"123":{"position":[[3012,17]]}},"keywords":{}}],["quot;54321&quot",{"_index":2250,"title":{},"content":{"123":{"position":[[4445,19]]}},"keywords":{}}],["quot;a&quot",{"_index":495,"title":{},"content":{"39":{"position":[[737,15]]},"44":{"position":[[1867,14]]}},"keywords":{}}],["quot;abc&quot",{"_index":1461,"title":{},"content":{"87":{"position":[[779,16]]}},"keywords":{}}],["quot;age&quot",{"_index":416,"title":{},"content":{"33":{"position":[[1305,17]]}},"keywords":{}}],["quot;b&quot",{"_index":496,"title":{},"content":{"39":{"position":[[753,14]]},"44":{"position":[[1977,14],[2262,14]]}},"keywords":{}}],["quot;build&quot",{"_index":220,"title":{},"content":{"14":{"position":[[559,18]]}},"keywords":{}}],["quot;c&quot",{"_index":497,"title":{},"content":{"39":{"position":[[768,14],[883,15]]},"44":{"position":[[1922,14]]}},"keywords":{}}],["quot;d&quot",{"_index":498,"title":{},"content":{"39":{"position":[[783,14],[899,14]]},"44":{"position":[[2087,14],[2372,14]]}},"keywords":{}}],["quot;e&quot",{"_index":668,"title":{},"content":{"44":{"position":[[2032,14],[2317,14]]}},"keywords":{}}],["quot;eject&quot",{"_index":224,"title":{},"content":{"14":{"position":[[669,18]]}},"keywords":{}}],["quot;email&quot",{"_index":417,"title":{},"content":{"33":{"position":[[1323,18]]}},"keywords":{}}],["quot;height&quot",{"_index":332,"title":{},"content":{"29":{"position":[[136,19]]}},"keywords":{}}],["quot;i@xpoet.cn&quot",{"_index":403,"title":{},"content":{"33":{"position":[[843,24],[939,24],[1171,23],[1398,23]]}},"keywords":{}}],["quot;jack&quot",{"_index":547,"title":{},"content":{"40":{"position":[[894,18]]}},"keywords":{}}],["quot;lily&quot",{"_index":544,"title":{},"content":{"40":{"position":[[822,18]]}},"keywords":{}}],["quot;lucy&quot",{"_index":545,"title":{},"content":{"40":{"position":[[841,17]]}},"keywords":{}}],["quot;name&quot",{"_index":330,"title":{},"content":{"29":{"position":[[101,17]]}},"keywords":{}}],["quot;react",{"_index":218,"title":{},"content":{"14":{"position":[[522,11],[578,11],[633,11],[688,11]]}},"keywords":{}}],["quot;scripts&quot",{"_index":216,"title":{},"content":{"14":{"position":[[480,20]]}},"keywords":{}}],["quot;start&quot",{"_index":217,"title":{},"content":{"14":{"position":[[503,18]]}},"keywords":{}}],["quot;test&quot",{"_index":222,"title":{},"content":{"14":{"position":[[615,17]]}},"keywords":{}}],["quot;tom&quot",{"_index":331,"title":{},"content":{"29":{"position":[[119,16]]},"40":{"position":[[859,16]]}},"keywords":{}}],["quot;tony&quot",{"_index":546,"title":{},"content":{"40":{"position":[[876,17]]}},"keywords":{}}],["quot;xpoet&quot",{"_index":399,"title":{},"content":{"33":{"position":[[766,19],[904,18]]}},"keywords":{}}],["quot;zxc&quot",{"_index":1463,"title":{},"content":{"87":{"position":[[801,17],[1011,17],[1145,16]]}},"keywords":{}}],["r",{"_index":1567,"title":{},"content":{"96":{"position":[[500,1]]}},"keywords":{}}],["react",{"_index":40,"title":{},"content":{"1":{"position":[[82,5]]},"14":{"position":[[14,5],[74,5],[92,5]]}},"keywords":{}}],["readi",{"_index":136,"title":{},"content":{"8":{"position":[[315,5]]}},"keywords":{}}],["rear",{"_index":565,"title":{},"content":{"42":{"position":[[154,4],[170,4],[363,4]]},"43":{"position":[[80,4],[127,4]]}},"keywords":{}}],["rear+1",{"_index":599,"title":{},"content":{"43":{"position":[[366,8]]}},"keywords":{}}],["recommend",{"_index":99,"title":{},"content":{"6":{"position":[[65,11]]}},"keywords":{}}],["regular",{"_index":58,"title":{},"content":{"2":{"position":[[123,7]]}},"keywords":{}}],["relat",{"_index":102,"title":{},"content":{"6":{"position":[[101,7]]}},"keywords":{}}],["reload",{"_index":143,"title":{},"content":{"8":{"position":[[425,7]]}},"keywords":{}}],["rem",{"_index":151,"title":{"13":{"position":[[10,3]]},"14":{"position":[[12,3]]}},"content":{},"keywords":{}}],["rem.j",{"_index":175,"title":{},"content":{"13":{"position":[[255,6],[530,6]]},"14":{"position":[[739,6],[1014,6],[1123,6]]}},"keywords":{}}],["remov",{"_index":412,"title":{},"content":{"33":{"position":[[1091,8]]},"82":{"position":[[4728,6],[4904,6]]},"87":{"position":[[919,8]]},"123":{"position":[[5362,6],[8844,8]]},"125":{"position":[[8373,8]]}},"keywords":{}}],["remove(data",{"_index":2265,"title":{},"content":{"123":{"position":[[5274,12],[5304,12],[8867,12]]},"125":{"position":[[6914,12],[6951,12]]}},"keywords":{}}],["remove(key",{"_index":380,"title":{},"content":{"33":{"position":[[230,11],[256,11]]},"82":{"position":[[1880,11],[1905,11],[6417,11],[6442,11]]},"111":{"position":[[7820,11]]}},"keywords":{}}],["remove(valu",{"_index":1446,"title":{},"content":{"87":{"position":[[282,13],[311,13]]},"93":{"position":[[297,13],[326,13]]}},"keywords":{}}],["removeat",{"_index":2263,"title":{},"content":{"123":{"position":[[5159,8],[8246,10]]},"125":{"position":[[2581,10],[2608,10],[5875,10],[5902,10],[8171,10]]}},"keywords":{}}],["removeat(posit",{"_index":2253,"title":{},"content":{"123":{"position":[[4549,18],[4579,18],[8267,18]]},"125":{"position":[[2619,18],[5913,18]]}},"keywords":{}}],["remunit",{"_index":169,"title":{},"content":{"13":{"position":[[195,8]]},"14":{"position":[[388,8]]}},"keywords":{}}],["require('custom",{"_index":203,"title":{},"content":{"14":{"position":[[172,18]]}},"keywords":{}}],["require('postcss",{"_index":165,"title":{},"content":{"13":{"position":[[96,16]]},"14":{"position":[[347,16]]}},"keywords":{}}],["require('react",{"_index":205,"title":{},"content":{"14":{"position":[[219,14]]}},"keywords":{}}],["resiz",{"_index":1356,"title":{},"content":{"82":{"position":[[3002,6]]}},"keywords":{}}],["resize(newlimit",{"_index":1359,"title":{},"content":{"82":{"position":[[3058,16],[7036,16]]}},"keywords":{}}],["result",{"_index":486,"title":{},"content":{"39":{"position":[[426,6],[480,6],[521,7]]},"44":{"position":[[1365,6],[1419,6],[1500,7]]},"53":{"position":[[431,6],[485,6],[526,7]]},"113":{"position":[[227,6],[278,8],[294,7],[332,7],[368,7],[437,8],[485,8]]},"114":{"position":[[335,6],[385,8],[401,7],[438,7],[474,7],[519,8],[589,8]]},"115":{"position":[[294,6],[346,8],[362,7],[401,7],[437,7],[484,8],[533,8]]},"123":{"position":[[1773,6],[1837,6],[1912,7],[9103,6],[9177,6],[9262,7]]},"125":{"position":[[3626,6],[3719,7],[3844,6],[3908,6],[3984,7],[4106,6],[4170,6],[4246,7],[6808,6],[6901,7],[7196,6],[7270,6],[7356,7],[7455,6],[7529,6],[7615,7]]}},"keywords":{}}],["result.push(node.key",{"_index":2027,"title":{},"content":{"113":{"position":[[376,22]]},"114":{"position":[[528,22]]},"115":{"position":[[542,22]]}},"keywords":{}}],["return",{"_index":212,"title":{},"content":{"14":{"position":[[440,6]]},"33":{"position":[[112,6],[315,6],[413,6],[489,6],[549,6],[616,6]]},"39":{"position":[[169,6],[229,6],[287,6],[351,6],[514,6]]},"40":{"position":[[749,6]]},"44":{"position":[[1038,6],[1118,6],[1201,6],[1279,6],[1493,6]]},"53":{"position":[[164,6],[217,6],[294,6],[356,6],[519,6]]},"54":{"position":[[346,6]]},"81":{"position":[[297,6]]},"82":{"position":[[950,7],[1441,6],[1595,6],[1664,6],[1685,6],[2022,6],[2391,6],[2439,6],[2488,6],[3999,6],[4075,6],[4093,6],[4207,6],[4324,6],[4342,6],[4689,6],[5403,6],[5894,7],[6309,6],[6378,6],[6399,6],[6559,6],[6928,6],[6960,6],[6996,6]]},"87":{"position":[[123,6],[226,6],[265,6],[376,6],[504,6],[582,6]]},"89":{"position":[[304,6]]},"90":{"position":[[236,6]]},"91":{"position":[[232,6]]},"92":{"position":[[171,6],[189,6]]},"93":{"position":[[138,6],[241,6],[280,6],[391,6],[519,6],[597,6],[960,6],[1212,6],[1467,6],[1661,6],[1678,6]]},"111":{"position":[[2475,6],[2559,6],[2622,6],[2708,6],[2947,6],[3042,6],[3081,6],[3153,6],[3203,6],[3401,6],[3418,6],[4003,6],[7785,6],[8249,6],[10047,6]]},"113":{"position":[[287,6],[361,6]]},"114":{"position":[[394,6],[467,6]]},"115":{"position":[[355,6],[430,6]]},"123":{"position":[[1905,6],[2238,6],[2918,6],[3222,6],[3386,6],[3702,6],[3761,6],[4087,6],[4281,6],[4670,6],[5131,6],[5516,6],[5649,6],[6645,6],[7325,6],[7459,6],[7623,6],[7808,6],[7867,6],[8027,6],[8221,6],[8358,6],[8819,6],[8953,6],[9008,6],[9255,6]]},"125":{"position":[[1733,6],[2546,6],[2713,6],[3479,6],[3712,6],[3977,6],[4239,6],[4904,6],[5717,6],[5772,6],[5842,6],[6007,6],[6676,6],[6894,6],[6966,6],[7029,6],[7082,6],[7349,6],[7608,6]]}},"keywords":{}}],["rewir",{"_index":198,"title":{},"content":{"14":{"position":[[84,7],[102,6],[238,6],[538,7],[594,7],[649,7]]}},"keywords":{}}],["rewirepostcss",{"_index":204,"title":{},"content":{"14":{"position":[[203,13]]}},"keywords":{}}],["rewirepostcss(config",{"_index":208,"title":{},"content":{"14":{"position":[[303,21]]}},"keywords":{}}],["rhoncu",{"_index":27,"title":{},"content":{"0":{"position":[[233,7],[412,7],[591,7],[770,7],[949,7],[1128,7],[1307,7],[1486,7],[1665,7],[1844,7],[2023,7],[2202,7],[2381,7],[2560,7],[2739,7],[2918,7]]},"26":{"position":[[107,7]]}},"keywords":{}}],["right",{"_index":2008,"title":{},"content":{"111":{"position":[[7669,5],[9931,5]]}},"keywords":{}}],["root",{"_index":1797,"title":{},"content":{"111":{"position":[[1194,4],[2801,4],[2828,4],[5396,4],[5792,4],[8642,4],[9038,4]]}},"keywords":{}}],["root.key",{"_index":1837,"title":{},"content":{"111":{"position":[[2105,9]]}},"keywords":{}}],["root.left",{"_index":1839,"title":{},"content":{"111":{"position":[[2131,10],[2154,9]]}},"keywords":{}}],["root.right",{"_index":1842,"title":{},"content":{"111":{"position":[[2240,11],[2264,10]]}},"keywords":{}}],["rootfonts",{"_index":183,"title":{},"content":{"13":{"position":[[379,12],[445,12]]},"14":{"position":[[863,12],[929,12]]}},"keywords":{}}],["run",{"_index":109,"title":{},"content":{"7":{"position":[[134,3],[386,3]]},"8":{"position":[[0,3],[46,3],[225,3]]},"13":{"position":[[632,3]]}},"keywords":{}}],["scr/index.j",{"_index":187,"title":{},"content":{"13":{"position":[[505,12]]},"14":{"position":[[989,12]]}},"keywords":{}}],["script",{"_index":225,"title":{},"content":{"14":{"position":[[700,7]]}},"keywords":{}}],["search",{"_index":1738,"title":{},"content":{"111":{"position":[[17,6]]}},"keywords":{}}],["search(key",{"_index":1859,"title":{},"content":{"111":{"position":[[2882,11],[2933,11]]}},"keywords":{}}],["search2(key",{"_index":1868,"title":{},"content":{"111":{"position":[[3237,12]]}},"keywords":{}}],["searchnode(nod",{"_index":1863,"title":{},"content":{"111":{"position":[[2999,16]]}},"keywords":{}}],["serv",{"_index":134,"title":{},"content":{"8":{"position":[[275,6]]},"13":{"position":[[636,5]]}},"keywords":{}}],["server",{"_index":124,"title":{},"content":{"8":{"position":[[20,7],[307,7]]}},"keywords":{}}],["set",{"_index":397,"title":{},"content":{"33":{"position":[[731,5]]},"85":{"position":[[7,3],[30,3]]},"87":{"position":[[17,3],[629,3],[639,5]]},"89":{"position":[[70,6]]},"90":{"position":[[91,6]]},"91":{"position":[[79,6]]},"93":{"position":[[32,3],[729,5],[1069,5],[1316,5]]}},"keywords":{}}],["set(key",{"_index":377,"title":{},"content":{"33":{"position":[[156,8],[182,8]]}},"keywords":{}}],["set(key,valu",{"_index":353,"title":{},"content":{"32":{"position":[[0,14]]}},"keywords":{}}],["set.add('123",{"_index":1455,"title":{},"content":{"87":{"position":[[687,14]]}},"keywords":{}}],["set.add('abc",{"_index":1454,"title":{},"content":{"87":{"position":[[657,14],[672,14]]}},"keywords":{}}],["set.add('zxc",{"_index":1456,"title":{},"content":{"87":{"position":[[702,14]]}},"keywords":{}}],["set.clear",{"_index":1469,"title":{},"content":{"87":{"position":[[1176,11]]}},"keywords":{}}],["set.remove('abc",{"_index":1466,"title":{},"content":{"87":{"position":[[931,17]]}},"keywords":{}}],["simpli",{"_index":53,"title":{},"content":{"2":{"position":[[61,6]]}},"keywords":{}}],["sit",{"_index":17,"title":{},"content":{"0":{"position":[[144,3],[296,3],[323,3],[475,3],[502,3],[654,3],[681,3],[833,3],[860,3],[1012,3],[1039,3],[1191,3],[1218,3],[1370,3],[1397,3],[1549,3],[1576,3],[1728,3],[1755,3],[1907,3],[1934,3],[2086,3],[2113,3],[2265,3],[2292,3],[2444,3],[2471,3],[2623,3],[2650,3],[2802,3],[2829,3],[2981,3]]},"26":{"position":[[18,3],[170,3]]}},"keywords":{}}],["site",{"_index":88,"title":{"7":{"position":[[15,5]]},"8":{"position":[[11,5]]}},"content":{"5":{"position":[[30,5]]},"7":{"position":[[26,4]]},"8":{"position":[[167,5],[420,4]]}},"keywords":{}}],["size",{"_index":11,"title":{},"content":{"0":{"position":[[103,4]]},"33":{"position":[[588,6],[607,6],[1425,6]]},"39":{"position":[[324,6],[342,6],[1031,6]]},"44":{"position":[[1230,6],[1263,6],[1270,6],[2473,6]]},"53":{"position":[[331,6],[347,6],[811,6]]},"82":{"position":[[2479,6],[6987,6]]},"87":{"position":[[472,6],[495,6],[1032,6]]},"93":{"position":[[487,6],[510,6]]},"123":{"position":[[5624,6],[5640,6],[5677,4],[8984,6],[8999,6]]},"125":{"position":[[7058,6],[7073,6]]}},"keywords":{}}],["src/util",{"_index":173,"title":{},"content":{"13":{"position":[[238,10]]},"14":{"position":[[722,10]]}},"keywords":{}}],["stack",{"_index":825,"title":{},"content":{"54":{"position":[[75,5]]}},"keywords":{}}],["stack)是一种运算受限的线性表，只允许在有序的线性数据集合的一端（称为栈顶",{"_index":679,"title":{},"content":{"47":{"position":[[2,40]]}},"keywords":{}}],["stack.isempti",{"_index":837,"title":{},"content":{"54":{"position":[[294,18]]}},"keywords":{}}],["stack.pop",{"_index":838,"title":{},"content":{"54":{"position":[[331,12]]}},"keywords":{}}],["stack.push(1",{"_index":812,"title":{},"content":{"53":{"position":[[557,14]]}},"keywords":{}}],["stack.push(2",{"_index":813,"title":{},"content":{"53":{"position":[[572,14]]}},"keywords":{}}],["stack.push(3",{"_index":814,"title":{},"content":{"53":{"position":[[587,14]]}},"keywords":{}}],["stack.push(dec",{"_index":830,"title":{},"content":{"54":{"position":[[149,14]]}},"keywords":{}}],["stack1",{"_index":735,"title":{},"content":{"49":{"position":[[178,6],[229,6],[299,6]]}},"keywords":{}}],["stack2",{"_index":741,"title":{},"content":{"49":{"position":[[244,6],[283,6]]}},"keywords":{}}],["stack2)和就能实现这个功能。比如你按顺序查看了",{"_index":731,"title":{},"content":{"49":{"position":[[115,26]]}},"keywords":{}}],["stackoverflow",{"_index":1545,"title":{},"content":{"95":{"position":[[516,13]]}},"keywords":{}}],["start",{"_index":86,"title":{"5":{"position":[[8,8]]},"8":{"position":[[0,5]]}},"content":{"5":{"position":[[4,7]]},"8":{"position":[[50,5],[229,5]]},"14":{"position":[[1106,5]]}},"keywords":{}}],["start&quot",{"_index":219,"title":{},"content":{"14":{"position":[[546,12]]}},"keywords":{}}],["stepsiz",{"_index":1158,"title":{},"content":{"76":{"position":[[1342,8]]}},"keywords":{}}],["storag",{"_index":1256,"title":{},"content":{"82":{"position":[[350,7],[542,7],[1265,7],[1742,7],[3087,7],[5486,7],[7065,7]]}},"keywords":{}}],["storage。然后，创建一个新的容量更大的数组，让",{"_index":1346,"title":{},"content":{"82":{"position":[[2813,26]]}},"keywords":{}}],["string",{"_index":1231,"title":{},"content":{"81":{"position":[[213,7]]}},"keywords":{}}],["structure)是带有结构特性的数据元素的集合，它研究的是数据的逻辑结构和数据的物理结构以及它们之间的相互关系，并对这种结构定义相适应的运算，设计出相应的算法，并确保经过这些运算以后所得到的新结构仍保持原来的结构类型。简而言之，数据结构是相互之间存在一种或多种特定关系的数据元素的集合，即带“结构”的数据元素的集合。“结构”就是指数据元素之间存在的关系，分为逻辑结构和存储结构",{"_index":319,"title":{},"content":{"27":{"position":[[17,191]]}},"keywords":{}}],["subset",{"_index":1505,"title":{},"content":{"92":{"position":[[3,8]]},"93":{"position":[[1493,8]]}},"keywords":{}}],["subset(otherset",{"_index":1507,"title":{},"content":{"92":{"position":[[15,16]]},"93":{"position":[[1505,16]]}},"keywords":{}}],["successor",{"_index":1993,"title":{},"content":{"111":{"position":[[7090,9],[7193,10],[7248,10],[7287,10],[7436,9],[7585,10],[7596,9],[7678,10],[7792,10],[9352,9],[9455,10],[9510,10],[9549,10],[9698,9],[9847,10],[9858,9],[9940,10],[10054,10]]}},"keywords":{}}],["successor.left",{"_index":1997,"title":{},"content":{"111":{"position":[[7322,14],[9584,14]]}},"keywords":{}}],["successor.right",{"_index":2010,"title":{},"content":{"111":{"position":[[7733,16],[7750,15],[9995,16],[10012,15]]}},"keywords":{}}],["successorpar",{"_index":2003,"title":{},"content":{"111":{"position":[[7490,15],[7567,15],[9752,15],[9829,15]]}},"keywords":{}}],["successorparent.left",{"_index":2009,"title":{},"content":{"111":{"position":[[7710,20],[9972,20]]}},"keywords":{}}],["such",{"_index":37,"title":{},"content":{"1":{"position":[[49,4]]},"2":{"position":[[225,4]]}},"keywords":{}}],["summari",{"_index":3,"title":{},"content":{"0":{"position":[[12,7]]}},"keywords":{}}],["super",{"_index":630,"title":{},"content":{"44":{"position":[[327,8]]},"125":{"position":[[1191,8],[4354,8]]}},"keywords":{}}],["super(el",{"_index":2316,"title":{},"content":{"125":{"position":[[1077,15]]}},"keywords":{}}],["super.dequeu",{"_index":650,"title":{},"content":{"44":{"position":[[1045,16]]}},"keywords":{}}],["super.front",{"_index":652,"title":{},"content":{"44":{"position":[[1125,14]]}},"keywords":{}}],["super.getdata(posit",{"_index":2367,"title":{},"content":{"125":{"position":[[5779,24]]}},"keywords":{}}],["super.indexof(data",{"_index":2368,"title":{},"content":{"125":{"position":[[5849,20]]}},"keywords":{}}],["super.isempti",{"_index":653,"title":{},"content":{"44":{"position":[[1208,16]]},"125":{"position":[[7036,16]]}},"keywords":{}}],["super.remove(data",{"_index":2370,"title":{},"content":{"125":{"position":[[6973,19]]}},"keywords":{}}],["super.s",{"_index":654,"title":{},"content":{"44":{"position":[[1286,13]]},"125":{"position":[[7089,13]]}},"keywords":{}}],["support",{"_index":33,"title":{},"content":{"1":{"position":[[11,7]]},"2":{"position":[[360,8]]}},"keywords":{}}],["swift",{"_index":342,"title":{},"content":{"30":{"position":[[20,5]]}},"keywords":{}}],["t1，t2，…，tm，其中每个集合本身又是一棵树，称为原来树的子树（subtre",{"_index":1571,"title":{},"content":{"96":{"position":[[535,44]]}},"keywords":{}}],["tag",{"_index":74,"title":{},"content":{"2":{"position":[[369,4]]}},"keywords":{}}],["tail",{"_index":2289,"title":{},"content":{"125":{"position":[[260,4]]}},"keywords":{}}],["targetindex",{"_index":548,"title":{},"content":{"40":{"position":[[919,11]]},"125":{"position":[[2220,11],[2311,14],[3244,11],[3292,14],[5391,11],[5482,14],[6441,11],[6489,14]]}},"keywords":{}}],["temp",{"_index":1388,"title":{},"content":{"82":{"position":[[4227,4],[4287,5]]}},"keywords":{}}],["templat",{"_index":106,"title":{},"content":{"7":{"position":[[49,9],[71,8]]}},"keywords":{}}],["tempor",{"_index":28,"title":{},"content":{"0":{"position":[[247,6],[426,6],[605,6],[784,6],[963,6],[1142,6],[1321,6],[1500,6],[1679,6],[1858,6],[2037,6],[2216,6],[2395,6],[2574,6],[2753,6],[2932,6]]},"26":{"position":[[121,6]]}},"keywords":{}}],["termin",{"_index":118,"title":{},"content":{"7":{"position":[[257,9],[291,8]]},"8":{"position":[[201,8]]}},"keywords":{}}],["test&quot",{"_index":223,"title":{},"content":{"14":{"position":[[657,11]]}},"keywords":{}}],["this.count",{"_index":1243,"title":{},"content":{"82":{"position":[[140,10],[1078,13],[1129,11],[2209,10],[2282,10],[2446,10],[2495,11],[3164,10],[3482,11],[3724,10],[4806,11],[4982,10],[5168,10],[6023,13],[6074,11],[6746,10],[6819,10],[6967,10],[7003,11],[7142,10]]}},"keywords":{}}],["this.data",{"_index":1610,"title":{},"content":{"100":{"position":[[39,9],[146,9],[218,9]]},"123":{"position":[[928,9],[5900,9]]}},"keywords":{}}],["this.el",{"_index":623,"title":{},"content":{"44":{"position":[[193,12]]}},"keywords":{}}],["this.getsuccessor(currentnod",{"_index":1994,"title":{},"content":{"111":{"position":[[7102,31],[9364,31]]}},"keywords":{}}],["this.has(key",{"_index":384,"title":{},"content":{"33":{"position":[[298,16],[420,13]]}},"keywords":{}}],["this.has(valu",{"_index":1444,"title":{},"content":{"87":{"position":[[208,17],[357,18]]},"93":{"position":[[223,17],[372,18]]}},"keywords":{}}],["this.head",{"_index":2163,"title":{},"content":{"123":{"position":[[1115,9],[1187,10],[1758,10],[2400,10],[2431,9],[2526,10],[3281,10],[3621,10],[4149,10],[4723,10],[4776,9],[6110,9],[6182,10],[6807,10],[6838,9],[6933,10],[7518,10],[7727,10],[8089,10],[8411,10],[8464,9],[9088,10]]},"125":{"position":[[1373,10],[1396,9],[1857,10],[1880,9],[1946,9],[1994,10],[2031,9],[2255,10],[2760,10],[2852,9],[2912,9],[2968,9],[3829,10],[4559,10],[4582,9],[5028,10],[5051,9],[5117,9],[5165,10],[5202,9],[5426,10],[6054,10],[6142,9],[6202,9],[7181,10]]}},"keywords":{}}],["this.head.next",{"_index":2256,"title":{},"content":{"123":{"position":[[4788,15],[8476,15]]},"125":{"position":[[2924,15],[2980,14],[6214,15]]}},"keywords":{}}],["this.head.perv",{"_index":2334,"title":{},"content":{"125":{"position":[[2005,14],[5176,14]]}},"keywords":{}}],["this.head.prev",{"_index":2344,"title":{},"content":{"125":{"position":[[2940,14],[3035,14],[6230,14]]}},"keywords":{}}],["this.inordertraversalnode(node.left",{"_index":2045,"title":{},"content":{"114":{"position":[[482,36]]}},"keywords":{}}],["this.inordertraversalnode(node.right",{"_index":2046,"title":{},"content":{"114":{"position":[[551,37]]}},"keywords":{}}],["this.inordertraversalnode(this.root",{"_index":2043,"title":{},"content":{"114":{"position":[[348,36]]}},"keywords":{}}],["this.insert(posit",{"_index":2357,"title":{},"content":{"125":{"position":[[3683,21],[6865,21]]}},"keywords":{}}],["this.insertnode(root.left",{"_index":1840,"title":{},"content":{"111":{"position":[[2181,26]]}},"keywords":{}}],["this.insertnode(root.right",{"_index":1843,"title":{},"content":{"111":{"position":[[2292,27]]}},"keywords":{}}],["this.insertnode(this.root",{"_index":1816,"title":{},"content":{"111":{"position":[[1620,26]]}},"keywords":{}}],["this.isempti",{"_index":636,"title":{},"content":{"44":{"position":[[533,16]]}},"keywords":{}}],["this.item",{"_index":373,"title":{},"content":{"33":{"position":[[54,10],[678,10]]},"39":{"position":[[30,10],[466,11]]},"44":{"position":[[1405,11]]},"53":{"position":[[38,10],[471,11]]},"87":{"position":[[39,10],[451,10]]},"93":{"position":[[54,10],[466,10]]}},"keywords":{}}],["this.items.hasownproperty(key",{"_index":376,"title":{},"content":{"33":{"position":[[119,31]]}},"keywords":{}}],["this.items.hasownproperty(valu",{"_index":1442,"title":{},"content":{"87":{"position":[[130,32]]},"93":{"position":[[145,32]]}},"keywords":{}}],["this.items.length",{"_index":481,"title":{},"content":{"39":{"position":[[294,17],[358,18]]},"44":{"position":[[677,18]]},"53":{"position":[[301,17],[363,18]]}},"keywords":{}}],["this.items.pop",{"_index":806,"title":{},"content":{"53":{"position":[[171,17]]}},"keywords":{}}],["this.items.push(item",{"_index":472,"title":{},"content":{"39":{"position":[[95,22]]},"53":{"position":[[98,22]]}},"keywords":{}}],["this.items.push(queueel",{"_index":638,"title":{},"content":{"44":{"position":[[573,30],[929,30]]}},"keywords":{}}],["this.items.shift",{"_index":475,"title":{},"content":{"39":{"position":[[176,19]]}},"keywords":{}}],["this.items.splice(i",{"_index":645,"title":{},"content":{"44":{"position":[[811,20]]}},"keywords":{}}],["this.items[0",{"_index":478,"title":{},"content":{"39":{"position":[[236,14]]}},"keywords":{}}],["this.items[i].prior",{"_index":643,"title":{},"content":{"44":{"position":[[771,23]]}},"keywords":{}}],["this.items[key",{"_index":379,"title":{},"content":{"33":{"position":[[200,15],[336,16],[436,15]]}},"keywords":{}}],["this.items[this.items.length",{"_index":808,"title":{},"content":{"53":{"position":[[224,28]]}},"keywords":{}}],["this.items[valu",{"_index":1445,"title":{},"content":{"87":{"position":[[239,17],[396,17]]},"93":{"position":[[254,17],[411,17]]}},"keywords":{}}],["this.key",{"_index":1803,"title":{},"content":{"111":{"position":[[1288,8]]}},"keywords":{}}],["this.keys().length",{"_index":393,"title":{},"content":{"33":{"position":[[623,19]]}},"keywords":{}}],["this.left",{"_index":1804,"title":{},"content":{"111":{"position":[[1304,9]]}},"keywords":{}}],["this.leftchild",{"_index":1613,"title":{},"content":{"100":{"position":[[70,14],[163,14],[235,14]]}},"keywords":{}}],["this.length",{"_index":2159,"title":{},"content":{"123":{"position":[[1067,12],[1404,14],[2225,12],[2903,14],[3209,12],[4074,12],[4657,12],[5116,11],[5523,11],[5656,12],[6062,12],[6399,14],[6632,12],[7310,14],[7446,12],[8014,12],[8345,12],[8804,11],[8960,11],[9015,12]]},"125":{"position":[[1558,14],[1720,12],[2078,12],[2197,11],[2531,14],[2696,11],[2814,12],[3082,11],[3216,11],[3464,11],[4744,14],[4891,12],[5249,12],[5368,11],[5702,14],[5990,11],[6104,12],[6279,11],[6413,11],[6661,11]]}},"keywords":{}}],["this.limit",{"_index":1245,"title":{},"content":{"82":{"position":[[169,10],[596,12],[1143,10],[1518,12],[1945,12],[2252,11],[2295,10],[3180,10],[3496,10],[3694,11],[3737,10],[4820,10],[4952,11],[4995,10],[5197,10],[5540,12],[6088,10],[6232,12],[6482,12],[6789,11],[6832,10],[7158,10]]}},"keywords":{}}],["this.loadfactor",{"_index":1292,"title":{},"content":{"82":{"position":[[1159,16],[3512,16],[4836,16],[5250,15],[6104,16]]}},"keywords":{}}],["this.minloadfactor",{"_index":1325,"title":{},"content":{"82":{"position":[[2311,19],[3753,19],[5011,19],[5274,18],[6848,19]]}},"keywords":{}}],["this.node(data",{"_index":2157,"title":{},"content":{"123":{"position":[[1036,16],[2283,16],[6031,16],[6690,16]]}},"keywords":{}}],["this.postordertraversalnode(node.left",{"_index":2055,"title":{},"content":{"115":{"position":[[445,38]]}},"keywords":{}}],["this.postordertraversalnode(node.right",{"_index":2056,"title":{},"content":{"115":{"position":[[493,39]]}},"keywords":{}}],["this.postordertraversalnode(this.root",{"_index":2053,"title":{},"content":{"115":{"position":[[307,38]]}},"keywords":{}}],["this.preordertraversalnode(node.left",{"_index":2028,"title":{},"content":{"113":{"position":[[399,37]]}},"keywords":{}}],["this.preordertraversalnode(node.right",{"_index":2029,"title":{},"content":{"113":{"position":[[446,38]]}},"keywords":{}}],["this.preordertraversalnode(this.root",{"_index":2025,"title":{},"content":{"113":{"position":[[240,37]]}},"keywords":{}}],["this.prev",{"_index":2310,"title":{},"content":{"125":{"position":[[909,9],[1093,9]]}},"keywords":{}}],["this.prior",{"_index":625,"title":{},"content":{"44":{"position":[[217,13]]}},"keywords":{}}],["this.put(b[0",{"_index":1367,"title":{},"content":{"82":{"position":[[3326,14],[7304,14]]}},"keywords":{}}],["this.removeat(posit",{"_index":2354,"title":{},"content":{"125":{"position":[[3635,24],[6817,24]]}},"keywords":{}}],["this.removeat(this.indexof(data",{"_index":2267,"title":{},"content":{"123":{"position":[[5319,34],[8882,34]]}},"keywords":{}}],["this.resize(this.getprime(math.floor(this.limit",{"_index":1326,"title":{},"content":{"82":{"position":[[2333,47],[3775,47],[5033,47],[6870,47]]}},"keywords":{}}],["this.resize(this.getprime(this.limit",{"_index":1293,"title":{},"content":{"82":{"position":[[1178,36],[3531,36],[4855,36],[6123,36]]}},"keywords":{}}],["this.right",{"_index":1805,"title":{},"content":{"111":{"position":[[1322,10]]}},"keywords":{}}],["this.rights",{"_index":1615,"title":{},"content":{"100":{"position":[[107,17],[182,17],[257,17]]}},"keywords":{}}],["this.root",{"_index":1815,"title":{},"content":{"111":{"position":[[1567,10],[1590,9],[2462,12],[2499,10],[2609,12],[2646,10],[3263,10],[3606,10],[4430,10],[4443,9],[5510,10],[5523,9],[5906,10],[5919,9],[7168,10],[7181,9],[7852,10],[8375,10],[8388,9],[8756,10],[8769,9],[9152,10],[9165,9],[9430,10],[9443,9]]}},"keywords":{}}],["this.root），如节点",{"_index":1913,"title":{},"content":{"111":{"position":[[4664,14],[4988,14]]}},"keywords":{}}],["this.root，直接通过：this.root",{"_index":1897,"title":{},"content":{"111":{"position":[[4152,24]]}},"keywords":{}}],["this.searchnode(node.left",{"_index":1864,"title":{},"content":{"111":{"position":[[3088,26]]}},"keywords":{}}],["this.searchnode(node.right",{"_index":1865,"title":{},"content":{"111":{"position":[[3160,27]]}},"keywords":{}}],["this.searchnode(this.root",{"_index":1861,"title":{},"content":{"111":{"position":[[2954,26]]}},"keywords":{}}],["this.storag",{"_index":1241,"title":{},"content":{"82":{"position":[[107,12],[2840,12],[2902,12],[3119,13],[3145,12],[3238,12],[5135,12],[7097,13],[7123,12],[7216,12]]}},"keywords":{}}],["this.storage[index",{"_index":1270,"title":{},"content":{"82":{"position":[[649,20],[740,19],[1546,20],[1973,20],[5593,20],[5684,19],[6260,20],[6510,20]]}},"keywords":{}}],["this.tail",{"_index":2313,"title":{},"content":{"125":{"position":[[973,9],[1200,9],[1417,9],[1524,10],[1535,9],[1901,9],[2147,10],[2158,9],[2870,9],[3130,10],[3169,9],[4091,10],[4363,9],[4603,9],[4710,10],[4721,9],[5072,9],[5318,10],[5329,9],[6160,9],[6327,10],[6366,9],[7440,10]]}},"keywords":{}}],["this.tail.next",{"_index":2325,"title":{},"content":{"125":{"position":[[1483,14],[2106,14],[4669,14],[5277,14]]}},"keywords":{}}],["this.tail.prev",{"_index":2348,"title":{},"content":{"125":{"position":[[3181,15],[6378,15]]}},"keywords":{}}],["this.tail.prev.next",{"_index":2347,"title":{},"content":{"125":{"position":[[3141,19],[6338,19]]}},"keywords":{}}],["this.valu",{"_index":1480,"title":{},"content":{"89":{"position":[[139,14]]},"90":{"position":[[160,14]]},"91":{"position":[[157,14]]},"92":{"position":[[126,14]]},"93":{"position":[[797,14],[1137,14],[1393,14],[1616,14]]}},"keywords":{}}],["through",{"_index":135,"title":{},"content":{"8":{"position":[[285,7]]}},"keywords":{}}],["title:'xxxxxx",{"_index":844,"title":{"56":{"position":[[0,15]]}},"content":{},"keywords":{}}],["tl",{"_index":1645,"title":{},"content":{"103":{"position":[[38,2]]},"104":{"position":[[31,2]]}},"keywords":{}}],["top）进行加入数据（push）和删除数据（pop",{"_index":680,"title":{},"content":{"47":{"position":[[43,27]]}},"keywords":{}}],["tostr",{"_index":484,"title":{},"content":{"39":{"position":[[382,10],[409,10],[1082,10]]},"44":{"position":[[1305,10],[1337,10],[1348,10],[2532,10]]},"53":{"position":[[387,10],[414,10],[862,10]]},"123":{"position":[[679,8],[1727,10],[1928,8],[9033,10],[9057,10]]},"125":{"position":[[774,8]]}},"keywords":{}}],["tr",{"_index":1647,"title":{},"content":{"103":{"position":[[46,2]]},"104":{"position":[[45,2]]}},"keywords":{}}],["tree",{"_index":1548,"title":{},"content":{"95":{"position":[[568,4]]},"108":{"position":[[22,6]]}},"keywords":{}}],["treemap",{"_index":349,"title":{},"content":{"30":{"position":[[95,7]]}},"keywords":{}}],["tree）也成为满二叉树（ful",{"_index":1678,"title":{},"content":{"107":{"position":[[21,17]]}},"keywords":{}}],["tree）是每个节点最多只有两个分支（即不存在分支度大于",{"_index":1629,"title":{},"content":{"102":{"position":[[61,28]]}},"keywords":{}}],["tree），也称为二叉排序树和二叉查找树",{"_index":1739,"title":{},"content":{"111":{"position":[[24,21]]}},"keywords":{}}],["tree），在二叉树中，除了最下一层的叶子节点外，每层节点都有",{"_index":1679,"title":{},"content":{"107":{"position":[[46,31]]}},"keywords":{}}],["tri",{"_index":89,"title":{},"content":{"5":{"position":[[39,3]]}},"keywords":{}}],["true",{"_index":410,"title":{},"content":{"33":{"position":[[1025,4]]},"44":{"position":[[858,5]]},"82":{"position":[[4100,5],[4349,5]]},"87":{"position":[[272,4],[868,4]]},"92":{"position":[[103,4],[196,5]]},"93":{"position":[[287,4],[1593,4],[1685,4]]},"111":{"position":[[3210,5],[3408,5],[3658,5],[3836,5],[7904,5],[8082,5]]},"125":{"position":[[2553,5],[5724,5]]}},"keywords":{}}],["true），如节点",{"_index":1920,"title":{},"content":{"111":{"position":[[4767,9],[5092,9]]}},"keywords":{}}],["true，反之则返回",{"_index":357,"title":{},"content":{"32":{"position":[[87,10]]}},"keywords":{}}],["true，否则返回",{"_index":464,"title":{},"content":{"38":{"position":[[184,9]]},"52":{"position":[[113,9]]},"86":{"position":[[67,9]]},"87":{"position":[[94,9]]},"93":{"position":[[109,9]]},"111":{"position":[[2917,9]]}},"keywords":{}}],["true；如果不存在，则返回",{"_index":1786,"title":{},"content":{"111":{"position":[[938,14]]}},"keywords":{}}],["truncat",{"_index":7,"title":{},"content":{"0":{"position":[[60,8]]}},"keywords":{}}],["trun，如果哈希表长度大于",{"_index":1215,"title":{},"content":{"80":{"position":[[100,14]]}},"keywords":{}}],["trun，如果链表长度大于",{"_index":2135,"title":{},"content":{"123":{"position":[[564,13]]},"125":{"position":[[659,13]]}},"keywords":{}}],["tupl",{"_index":1275,"title":{},"content":{"82":{"position":[[844,5],[866,5],[965,5],[1621,5],[2131,5],[2398,6],[5788,5],[5810,5],[5909,5],[6335,5],[6668,5],[6935,6]]}},"keywords":{}}],["tuple[0",{"_index":1278,"title":{},"content":{"82":{"position":[[892,9],[1643,9],[2153,9],[5836,9],[6357,9],[6690,9]]}},"keywords":{}}],["tuple[1",{"_index":1281,"title":{},"content":{"82":{"position":[[932,8],[1671,9],[5876,8],[6385,9]]}},"keywords":{}}],["tuple，将其删除",{"_index":1319,"title":{},"content":{"82":{"position":[[2058,10],[6595,10]]}},"keywords":{}}],["tuple，格式为",{"_index":1289,"title":{},"content":{"82":{"position":[[1055,9],[6000,9]]}},"keywords":{}}],["tutori",{"_index":84,"title":{"4":{"position":[[0,8]]}},"content":{},"keywords":{}}],["type",{"_index":115,"title":{},"content":{"7":{"position":[[206,4]]}},"keywords":{}}],["ultrici",{"_index":25,"title":{},"content":{"0":{"position":[[216,10],[395,10],[574,10],[753,10],[932,10],[1111,10],[1290,10],[1469,10],[1648,10],[1827,10],[2006,10],[2185,10],[2364,10],[2543,10],[2722,10],[2901,10]]},"26":{"position":[[90,10]]}},"keywords":{}}],["undefin",{"_index":388,"title":{},"content":{"33":{"position":[[392,9],[454,10]]},"82":{"position":[[704,10],[1582,10],[2009,10],[5648,10],[6296,10],[6546,10]]}},"keywords":{}}],["union",{"_index":1473,"title":{},"content":{"89":{"position":[[3,7]]},"93":{"position":[[662,7]]}},"keywords":{}}],["union(otherset",{"_index":1475,"title":{},"content":{"89":{"position":[[20,15]]},"93":{"position":[[679,15]]}},"keywords":{}}],["unionset",{"_index":1477,"title":{},"content":{"89":{"position":[[55,8],[311,9]]},"93":{"position":[[714,8],[967,8]]}},"keywords":{}}],["unionset.add(valu",{"_index":1481,"title":{},"content":{"89":{"position":[[156,20],[264,20]]},"93":{"position":[[814,19],[921,19]]}},"keywords":{}}],["updat",{"_index":2245,"title":{},"content":{"123":{"position":[[4309,6],[7883,8]]},"125":{"position":[[3563,8],[6745,8],[8279,8]]}},"keywords":{}}],["update(posit",{"_index":2238,"title":{},"content":{"123":{"position":[[3928,16],[3967,16],[7907,16]]},"125":{"position":[[3524,16],[3572,16],[6706,16],[6754,16]]}},"keywords":{}}],["us",{"_index":5,"title":{},"content":{"0":{"position":[[46,3]]},"1":{"position":[[65,3]]},"2":{"position":[[445,3]]},"7":{"position":[[31,5]]}},"keywords":{}}],["utils/adapter.j",{"_index":191,"title":{},"content":{"13":{"position":[[586,20]]},"14":{"position":[[1070,20]]}},"keywords":{}}],["utils/rem.j",{"_index":190,"title":{},"content":{"13":{"position":[[557,16]]},"14":{"position":[[1041,16]]}},"keywords":{}}],["v",{"_index":862,"title":{},"content":{"59":{"position":[[429,1]]}},"keywords":{}}],["v1，v2…，vn",{"_index":888,"title":{},"content":{"60":{"position":[[420,9]]}},"keywords":{}}],["valu",{"_index":336,"title":{},"content":{"29":{"position":[[173,6],[204,5]]},"33":{"position":[[165,6],[191,6],[218,6],[532,5],[538,8],[1345,8]]},"80":{"position":[[9,6]]},"82":{"position":[[256,6],[488,6],[514,6],[882,6],[943,6],[1031,8],[1071,6],[1475,5],[5432,6],[5458,6],[5826,6],[5887,6],[5976,8],[6016,6],[6189,5]]},"87":{"position":[[81,5],[186,5],[259,5],[305,5],[435,5],[486,5],[547,8],[565,5],[571,8],[1080,8]]},"89":{"position":[[130,5],[234,5]]},"90":{"position":[[151,5]]},"91":{"position":[[148,5]]},"92":{"position":[[117,5]]},"93":{"position":[[96,5],[201,5],[274,5],[320,5],[450,5],[501,5],[562,8],[580,5],[586,8],[788,5],[891,5],[1128,5],[1384,5],[1607,5]]}},"keywords":{}}],["value。最后，遍历完",{"_index":1306,"title":{},"content":{"82":{"position":[[1402,12]]}},"keywords":{}}],["value，判断是否在",{"_index":1493,"title":{},"content":{"90":{"position":[[115,11]]},"91":{"position":[[103,11]]},"92":{"position":[[49,11]]},"93":{"position":[[1092,11],[1339,11],[1539,11]]}},"keywords":{}}],["value，如果没有，返回",{"_index":387,"title":{},"content":{"33":{"position":[[378,13]]}},"keywords":{}}],["value，添加到新集合（unionset）中",{"_index":1479,"title":{},"content":{"89":{"position":[[97,23],[201,23]]},"93":{"position":[[755,23],[858,23]]}},"keywords":{}}],["value，返回",{"_index":1448,"title":{},"content":{"87":{"position":[[339,8]]},"93":{"position":[[354,8]]}},"keywords":{}}],["var",{"_index":163,"title":{},"content":{"13":{"position":[[83,3]]}},"keywords":{}}],["veri",{"_index":4,"title":{},"content":{"0":{"position":[[25,4]]}},"keywords":{}}],["version",{"_index":95,"title":{},"content":{"6":{"position":[[8,7]]}},"keywords":{}}],["vertex",{"_index":863,"title":{},"content":{"59":{"position":[[431,8]]}},"keywords":{}}],["view",{"_index":13,"title":{},"content":{"0":{"position":[[120,5]]},"8":{"position":[[332,4]]}},"keywords":{}}],["vue",{"_index":154,"title":{},"content":{"13":{"position":[[7,3]]}},"keywords":{}}],["vue.config.j",{"_index":161,"title":{},"content":{"13":{"position":[[61,13]]}},"keywords":{}}],["vue和react脚手架配置代理",{"_index":148,"title":{"12":{"position":[[0,16]]}},"content":{},"keywords":{}}],["want",{"_index":77,"title":{},"content":{"2":{"position":[[400,4]]}},"keywords":{}}],["was。而在数组中一个下标值只能储存一个数据，所以该方式不合理",{"_index":1051,"title":{},"content":{"72":{"position":[[235,32]]}},"keywords":{}}],["websit",{"_index":114,"title":{},"content":{"7":{"position":[[181,7]]},"8":{"position":[[34,7],[255,7]]}},"keywords":{}}],["welcom",{"_index":51,"title":{"2":{"position":[[0,7]]}},"content":{},"keywords":{}}],["welcome.md2019",{"_index":68,"title":{},"content":{"2":{"position":[[245,14]]}},"keywords":{}}],["welcome/index.md",{"_index":69,"title":{},"content":{"2":{"position":[[266,16]]}},"keywords":{}}],["well",{"_index":75,"title":{},"content":{"2":{"position":[[377,5]]}},"keywords":{}}],["window",{"_index":1551,"title":{},"content":{"95":{"position":[[602,6]]},"102":{"position":[[280,8]]}},"keywords":{}}],["window.onres",{"_index":186,"title":{},"content":{"13":{"position":[[477,15]]},"14":{"position":[[961,15]]}},"keywords":{}}],["work",{"_index":128,"title":{},"content":{"8":{"position":[[101,7],[127,4]]}},"keywords":{}}],["x",{"_index":1139,"title":{},"content":{"76":{"position":[[862,1],[921,1]]}},"keywords":{}}],["yarn",{"_index":195,"title":{},"content":{"14":{"position":[[36,4],[1101,4]]}},"keywords":{}}],["you'll",{"_index":92,"title":{"6":{"position":[[5,6]]}},"content":{"8":{"position":[[173,6]]}},"keywords":{}}],["you'r",{"_index":127,"title":{},"content":{"8":{"position":[[94,6]]}},"keywords":{}}],["z",{"_index":1037,"title":{},"content":{"72":{"position":[[71,1]]}},"keywords":{}}],["zxc",{"_index":1462,"title":{},"content":{"87":{"position":[[796,4],[1006,4]]}},"keywords":{}}],["zxcvvv",{"_index":1066,"title":{},"content":{"72":{"position":[[513,6]]}},"keywords":{}}],["zz",{"_index":2380,"title":{},"content":{"125":{"position":[[8052,2]]}},"keywords":{}}],["一、vue",{"_index":149,"title":{"13":{"position":[[0,5]]}},"content":{},"keywords":{}}],["一个",{"_index":514,"title":{},"content":{"40":{"position":[[165,2]]},"54":{"position":[[57,2]]}},"keywords":{}}],["一个二叉树的第",{"_index":1654,"title":{},"content":{"105":{"position":[[0,7]]}},"keywords":{}}],["一个节点含有的子树的根节点称为该节点的子节点。上图中",{"_index":1531,"title":{},"content":{"95":{"position":[[274,27]]}},"keywords":{}}],["一个顶点的度是相邻顶点的数量比如",{"_index":881,"title":{},"content":{"60":{"position":[[344,16]]}},"keywords":{}}],["一定也是",{"_index":947,"title":{},"content":{"65":{"position":[[464,4]]}},"keywords":{}}],["一棵树中的任意两个结点有且仅有唯一的一条路径连通。一棵树如果有",{"_index":1515,"title":{},"content":{"95":{"position":[[11,31]]}},"keywords":{}}],["一棵树具有以下特点",{"_index":1514,"title":{},"content":{"95":{"position":[[0,10]]}},"keywords":{}}],["一直循环比较空出位置的左右子节点，并将较大者移至空位，直到堆的最底部",{"_index":281,"title":{},"content":{"21":{"position":[[433,34]]}},"keywords":{}}],["一种是自底向上的堆化，上述的插入元素所使用的就是自底向上的堆化，元素从最底部向上移动。另一种是自顶向下堆化，元素由最顶部向下移动。在讲解删除堆顶元素的方法时，我将阐述这两种操作的过程，大家可以体会一下二者的不同",{"_index":274,"title":{},"content":{"21":{"position":[[143,106]]}},"keywords":{}}],["一组顶点：通常用",{"_index":861,"title":{},"content":{"59":{"position":[[420,8]]}},"keywords":{}}],["一般情况下是申请一个更大的数组，比如",{"_index":2091,"title":{},"content":{"121":{"position":[[258,19]]}},"keywords":{}}],["三个属性",{"_index":1800,"title":{},"content":{"111":{"position":[[1243,5]]}},"keywords":{}}],["上一节点为",{"_index":2209,"title":{},"content":{"123":{"position":[[2589,5],[6996,5]]}},"keywords":{}}],["上图分别表示：空的二叉树、只有一个节点的二叉树、只有左子树",{"_index":1650,"title":{},"content":{"104":{"position":[[1,29]]}},"keywords":{}}],["上文所说的线性探测存在的问题",{"_index":1134,"title":{},"content":{"76":{"position":[[759,15]]}},"keywords":{}}],["上的这个问题：what",{"_index":1546,"title":{},"content":{"95":{"position":[[530,11]]}},"keywords":{}}],["上面的图就是一张无向图，因为所有的边都没有方向。比如",{"_index":897,"title":{},"content":{"60":{"position":[[546,26]]}},"keywords":{}}],["下一步与根节点",{"_index":1766,"title":{},"content":{"111":{"position":[[580,7]]}},"keywords":{}}],["下一步与父节点",{"_index":1771,"title":{},"content":{"111":{"position":[[628,7],[677,7]]}},"keywords":{}}],["下图就是一颗树，并且是一颗二叉树",{"_index":1521,"title":{},"content":{"95":{"position":[[113,17]]}},"keywords":{}}],["下图所展示的就是图这种数据结构，并且还是一张有向图",{"_index":856,"title":{},"content":{"59":{"position":[[269,26]]}},"keywords":{}}],["下面只讨论查找",{"_index":1989,"title":{},"content":{"111":{"position":[[7006,7]]}},"keywords":{}}],["下面是一个二叉搜索树",{"_index":1757,"title":{},"content":{"111":{"position":[[493,11]]}},"keywords":{}}],["不为空时",{"_index":2167,"title":{},"content":{"123":{"position":[[1220,5],[6215,5]]}},"keywords":{}}],["不同于数组，链表中的元素在内存中不必是连续的空间",{"_index":2095,"title":{},"content":{"121":{"position":[[357,25]]}},"keywords":{}}],["不同探测方式性能的比较",{"_index":1172,"title":{},"content":{"76":{"position":[[1689,12]]}},"keywords":{}}],["不存在则创建",{"_index":1272,"title":{},"content":{"82":{"position":[[733,6],[5677,6]]}},"keywords":{}}],["不存在，先创建",{"_index":1260,"title":{},"content":{"82":{"position":[[392,7]]}},"keywords":{}}],["不断地从栈中取出元素（0",{"_index":835,"title":{},"content":{"54":{"position":[[262,12]]}},"keywords":{}}],["不是",{"_index":525,"title":{},"content":{"40":{"position":[[350,2]]}},"keywords":{}}],["不是质数",{"_index":1379,"title":{},"content":{"82":{"position":[[3855,4]]}},"keywords":{}}],["不是质数，14",{"_index":1396,"title":{},"content":{"82":{"position":[[4458,7]]}},"keywords":{}}],["不是质数，15",{"_index":1397,"title":{},"content":{"82":{"position":[[4475,7]]}},"keywords":{}}],["不是质数，16",{"_index":1399,"title":{},"content":{"82":{"position":[[4492,7]]}},"keywords":{}}],["不相同时，则线性查找，从",{"_index":1113,"title":{},"content":{"76":{"position":[[298,12]]}},"keywords":{}}],["与根节点",{"_index":1763,"title":{},"content":{"111":{"position":[[549,4]]}},"keywords":{}}],["两种方案总结",{"_index":1068,"title":{},"content":{"72":{"position":[[539,7]]}},"keywords":{}}],["个一次多项式的值",{"_index":1188,"title":{},"content":{"78":{"position":[[101,9]]}},"keywords":{}}],["个人的信息，每一个工号对应一个员工的信息。若使用数组，增删数据时比较麻烦；使用链表，获取数据时比较麻烦。有没有一种数据结构，能把某一员工的姓名转换为它对应的工号，再根据工号查找该员工的完整信息呢？没错此时就可以使用哈希表的哈希函数来实现。案例二：存储联系人和对应的电话号码：当要查找张三（比如）的号码时，若使用数组：由于不知道存储张三数据对象的下标值，所以查找起来十分麻烦，使用链表时也同样麻烦。而使用哈希表就能通过哈希函数把张三这个名称转换为它对应的下标值，再通过下标值查找效率就非常高了",{"_index":1030,"title":{},"content":{"71":{"position":[[442,246]]}},"keywords":{}}],["个位置插入",{"_index":2330,"title":{},"content":{"125":{"position":[[1848,5],[5019,5]]}},"keywords":{}}],["个元素",{"_index":750,"title":{},"content":{"50":{"position":[[7,3]]}},"keywords":{}}],["个元素先删除后添加到队列末尾",{"_index":534,"title":{},"content":{"40":{"position":[[596,15]]}},"keywords":{}}],["个元素就排到了队列的最前面，可以直接使用",{"_index":536,"title":{},"content":{"40":{"position":[[626,20]]}},"keywords":{}}],["个元素时就停止数数",{"_index":523,"title":{},"content":{"40":{"position":[[307,9]]}},"keywords":{}}],["个子节点，这就构成了完美二叉树，换一种说法，一个二叉树，如果每一个层的结点数都达到最大值，则这个二叉树就是",{"_index":1680,"title":{},"content":{"107":{"position":[[80,53]]}},"keywords":{}}],["个层次；再通过抽象，舍弃数据元素的具体内容，就得到逻辑结构。类似地，通过分解将处理要求划分成各种功能，再通过抽象舍弃实现细节，就得到运算的定义。上述两个方面的结合可以将问题变换为数据结构。这是一个从具体（即具体问题）到抽象（即数据结构）的过程。然后，通过增加对实现细节的考虑进一步得到存储结构和实现运算，从而完成设计任务。这是一个从抽象（即数据结构）到具体（即具体实现）的过程",{"_index":323,"title":{},"content":{"27":{"position":[[339,189]]}},"keywords":{}}],["个引用，分别指向子节点",{"_index":1600,"title":{},"content":{"99":{"position":[[79,11],[106,11]]}},"keywords":{}}],["个数",{"_index":1451,"title":{},"content":{"87":{"position":[[492,2]]},"93":{"position":[[507,2]]}},"keywords":{}}],["个数据，在排序好的数组中查询数据",{"_index":1776,"title":{},"content":{"111":{"position":[[738,16]]}},"keywords":{}}],["个条件属于二叉树，树一不满足条件",{"_index":1753,"title":{},"content":{"111":{"position":[[371,16]]}},"keywords":{}}],["个结点，那么它一定恰好有",{"_index":1516,"title":{},"content":{"95":{"position":[[45,12]]}},"keywords":{}}],["个节点（关于节点的深度的定义国内争议比较多，我个人比较认可维基百科对节点深度的定义open",{"_index":1642,"title":{},"content":{"102":{"position":[[227,45]]}},"keywords":{}}],["个节点（满二叉树的情况），至少有",{"_index":1640,"title":{},"content":{"102":{"position":[[204,16]]}},"keywords":{}}],["个节点，深度为",{"_index":1636,"title":{},"content":{"102":{"position":[[174,7]]}},"keywords":{}}],["中。假如你又想回到页面",{"_index":742,"title":{},"content":{"49":{"position":[[251,11]]}},"keywords":{}}],["中。当你想回头看",{"_index":736,"title":{},"content":{"49":{"position":[[185,8]]}},"keywords":{}}],["中。示例图如下",{"_index":746,"title":{},"content":{"49":{"position":[[306,8]]}},"keywords":{}}],["中使用的就是链地址法",{"_index":1178,"title":{},"content":{"76":{"position":[[1956,11]]}},"keywords":{}}],["中包含存储的数据、左节点的引用和右节点的引用",{"_index":2071,"title":{},"content":{"118":{"position":[[36,23]]}},"keywords":{}}],["中对应的索引值",{"_index":1296,"title":{},"content":{"82":{"position":[[1273,7],[1750,7]]}},"keywords":{}}],["中序遍历",{"_index":2030,"title":{"114":{"position":[[0,5]]}},"content":{},"keywords":{}}],["中序遍历（左根右",{"_index":2040,"title":{},"content":{"114":{"position":[[294,8]]}},"keywords":{}}],["中每一个",{"_index":1303,"title":{},"content":{"82":{"position":[[1368,4],[2626,4]]}},"keywords":{}}],["中的",{"_index":343,"title":{},"content":{"30":{"position":[[26,2],[46,2],[82,2]]},"76":{"position":[[1945,2]]},"79":{"position":[[119,2]]},"85":{"position":[[4,2]]}},"keywords":{}}],["中的体现就是会抛出java.util.concurrent.rejectedexecutionexcept",{"_index":610,"title":{},"content":{"43":{"position":[[756,56]]}},"keywords":{}}],["中的启动命令",{"_index":215,"title":{},"content":{"14":{"position":[[473,6]]}},"keywords":{}}],["中的每一个",{"_index":1348,"title":{},"content":{"82":{"position":[[2873,5]]}},"keywords":{}}],["中的每一个数据取出来依次添加到",{"_index":1349,"title":{},"content":{"82":{"position":[[2886,15]]}},"keywords":{}}],["为src目录",{"_index":192,"title":{},"content":{"13":{"position":[[610,7]]}},"keywords":{}}],["为了把字符串转化为对应的下标值，需要有一套编码系统，为了方便理解我们创建这样一套编码系统：比如",{"_index":1033,"title":{},"content":{"72":{"position":[[0,47]]}},"keywords":{}}],["为了方便存储和索引，（二叉）堆可以用完全二叉树的形式进行存储。存储的方式如下图所示",{"_index":261,"title":{},"content":{"18":{"position":[[96,42]]}},"keywords":{}}],["为了能以较快的时间",{"_index":1719,"title":{},"content":{"109":{"position":[[388,9]]}},"keywords":{}}],["为了避免当只有一个元素的时候，队头和队尾重合使处理变得麻烦，所以引入两个指针，front",{"_index":573,"title":{},"content":{"42":{"position":[[272,44]]}},"keywords":{}}],["为什么没有停止条件的递归会造成",{"_index":721,"title":{},"content":{"48":{"position":[[188,15]]}},"keywords":{}}],["为什么需要扩容",{"_index":1330,"title":{},"content":{"82":{"position":[[2521,8]]}},"keywords":{}}],["为兄弟节点。叶子节点",{"_index":1536,"title":{},"content":{"95":{"position":[[380,10]]}},"keywords":{}}],["为叶子节点，总数为",{"_index":1668,"title":{},"content":{"105":{"position":[[198,9]]}},"keywords":{}}],["为啥说其较为复杂呢",{"_index":850,"title":{},"content":{"59":{"position":[[72,10]]}},"keywords":{}}],["为度为",{"_index":1670,"title":{},"content":{"105":{"position":[[218,3]]}},"keywords":{}}],["为根节点（current",{"_index":1912,"title":{},"content":{"111":{"position":[[4648,12],[4972,12]]}},"keywords":{}}],["为止",{"_index":1835,"title":{},"content":{"111":{"position":[[2030,3]]}},"keywords":{}}],["为止。这里可以使用递归实现，也可以采用循环来实现",{"_index":1858,"title":{},"content":{"111":{"position":[[2853,25]]}},"keywords":{}}],["为父节点",{"_index":1918,"title":{},"content":{"111":{"position":[[4734,4],[4831,4],[5059,4],[5157,4]]}},"keywords":{}}],["为递归函数，不断地调用自己（因为函数还没有执行完，不会把函数弹出栈），不停地把相同的函数",{"_index":723,"title":{},"content":{"48":{"position":[[215,44]]}},"keywords":{}}],["之前介绍树的时候说过，由于完全二叉树的优秀性质，利用数组存储二叉树即节省空间，又方便索引（若根结点的序号为1，那么对于树中任意节点i，其左子节点序号为",{"_index":258,"title":{},"content":{"18":{"position":[[0,75]]}},"keywords":{}}],["之后",{"_index":1624,"title":{},"content":{"101":{"position":[[32,3]]}},"keywords":{}}],["之间有变，那么说明这条边可以保证",{"_index":898,"title":{},"content":{"60":{"position":[[579,16]]}},"keywords":{}}],["之间遍历，不断地更新",{"_index":2210,"title":{},"content":{"123":{"position":[[2653,10],[7060,10]]}},"keywords":{}}],["乘法次数：n",{"_index":1194,"title":{},"content":{"78":{"position":[[149,6]]}},"keywords":{}}],["乘法次数：n(n+1)/2",{"_index":1190,"title":{},"content":{"78":{"position":[[117,13]]}},"keywords":{}}],["也就是",{"_index":945,"title":{},"content":{"65":{"position":[[426,3]]}},"keywords":{}}],["也就是说：哈希表最后还是基于数据来实现的，只不过哈希表能够通过哈希函数把字符串转化为对应的下标值，建立字符串和下标值的映射关系",{"_index":1031,"title":{},"content":{"71":{"position":[[689,64]]}},"keywords":{}}],["也被压入栈，函数",{"_index":712,"title":{},"content":{"48":{"position":[[76,8]]}},"keywords":{}}],["买票、结账、wc",{"_index":442,"title":{},"content":{"35":{"position":[[293,11]]}},"keywords":{}}],["买票、结账、wc)。排队中，有紧急情况（特殊情况）的人可优先处理",{"_index":616,"title":{},"content":{"44":{"position":[[27,34]]}},"keywords":{}}],["二、react",{"_index":194,"title":{"14":{"position":[[0,7]]}},"content":{},"keywords":{}}],["二叉搜索/排序/查找树",{"_index":1736,"title":{"111":{"position":[[0,12]]}},"content":{},"keywords":{}}],["二叉搜索树应用举例",{"_index":1756,"title":{},"content":{"111":{"position":[[482,10]]}},"keywords":{}}],["二叉搜索树是一棵二叉树，可以为空",{"_index":1740,"title":{},"content":{"111":{"position":[[46,17]]}},"keywords":{}}],["二叉搜索树有四个最基本的属性：指向节点的根（root），节点中的键（key）、左指针（right）、右指针（right",{"_index":1795,"title":{},"content":{"111":{"position":[[1117,61]]}},"keywords":{}}],["二叉搜索树的封装",{"_index":1794,"title":{},"content":{"111":{"position":[[1107,9]]}},"keywords":{}}],["二叉搜索树的常见操作",{"_index":1782,"title":{},"content":{"111":{"position":[[871,11]]}},"keywords":{}}],["二叉搜索树的缺陷：当插入的数据是有序的数据，就会造成二叉搜索树的深度过大。比如原二叉搜索树由",{"_index":1710,"title":{},"content":{"109":{"position":[[121,46]]}},"keywords":{}}],["二叉搜索树（bst，binari",{"_index":1737,"title":{},"content":{"111":{"position":[[0,16]]}},"keywords":{}}],["二叉树",{"_index":1626,"title":{"102":{"position":[[0,4]]}},"content":{"102":{"position":[[102,3],[151,3]]}},"keywords":{}}],["二叉树可以为空，也就是没有节点；若二叉树不为空，则它由根节点和称为其左子树",{"_index":1644,"title":{},"content":{"103":{"position":[[0,37]]}},"keywords":{}}],["二叉树最常见的存储方式为链表：每一个节点封装成一个",{"_index":2069,"title":{},"content":{"118":{"position":[[0,25]]}},"keywords":{}}],["二叉树的五种形态",{"_index":1649,"title":{"104":{"position":[[0,9]]}},"content":{},"keywords":{}}],["二叉树的分类",{"_index":1674,"title":{"106":{"position":[[0,7]]}},"content":{},"keywords":{}}],["二叉树的数据存储",{"_index":2059,"title":{"116":{"position":[[0,9]]}},"content":{},"keywords":{}}],["二叉树的特性",{"_index":1653,"title":{"105":{"position":[[0,7]]}},"content":{},"keywords":{}}],["二叉树的组成",{"_index":1643,"title":{"103":{"position":[[0,7]]}},"content":{},"keywords":{}}],["二叉树的遍历",{"_index":2013,"title":{"112":{"position":[[0,7]]}},"content":{},"keywords":{}}],["二叉树（binari",{"_index":1628,"title":{},"content":{"102":{"position":[[50,10]]}},"keywords":{}}],["二次探测",{"_index":1133,"title":{},"content":{"76":{"position":[[753,5]]}},"keywords":{}}],["二次探测和再哈希化的性能",{"_index":1174,"title":{},"content":{"76":{"position":[[1793,12]]}},"keywords":{}}],["二次探测和再哈希法性能相当，它们的性能比线性探测略好。由下图可知，随着装填因子的变大，平均探测长度呈指数形式增长，需要探测的次数也呈指数形式增长，性能不高",{"_index":1175,"title":{},"content":{"76":{"position":[[1806,78]]}},"keywords":{}}],["二次探测存在的问题",{"_index":1145,"title":{},"content":{"76":{"position":[[978,10]]}},"keywords":{}}],["二次探测是在线性探测的基础上进行了优化",{"_index":1136,"title":{},"content":{"76":{"position":[[812,20]]}},"keywords":{}}],["二次探测的步长是固定的：1，4，9，16",{"_index":1152,"title":{},"content":{"76":{"position":[[1109,20]]}},"keywords":{}}],["二次探测：对步长进行了优化，比如从下标值",{"_index":1142,"title":{},"content":{"76":{"position":[[900,20]]}},"keywords":{}}],["互为兄弟节点；路径和路径长度：路径指的是一个节点到另一节点的通道，路径所包含边的个数称为路径长度，比如",{"_index":1587,"title":{},"content":{"97":{"position":[[251,51]]}},"keywords":{}}],["交换节点信息",{"_index":2338,"title":{},"content":{"125":{"position":[[2408,6],[5579,6]]}},"keywords":{}}],["交集的实现",{"_index":1487,"title":{"90":{"position":[[0,6]]}},"content":{},"keywords":{}}],["什么情况下需要扩容",{"_index":1336,"title":{},"content":{"82":{"position":[[2676,10]]}},"keywords":{}}],["什么是哈夫曼树",{"_index":1731,"title":{},"content":{"110":{"position":[[0,8]]}},"keywords":{}}],["什么是哈希化",{"_index":1032,"title":{"72":{"position":[[0,7]]}},"content":{},"keywords":{}}],["什么是哈希表",{"_index":1009,"title":{"71":{"position":[[0,7]]}},"content":{},"keywords":{}}],["什么是图",{"_index":847,"title":{"59":{"position":[[0,5]]}},"content":{},"keywords":{}}],["什么是栈",{"_index":678,"title":{"47":{"position":[[0,5]]}},"content":{},"keywords":{}}],["什么是树",{"_index":1513,"title":{"95":{"position":[[0,5]]}},"content":{},"keywords":{}}],["什么是链表",{"_index":2072,"title":{"120":{"position":[[0,6]]}},"content":{},"keywords":{}}],["什么是队列",{"_index":422,"title":{"35":{"position":[[0,6]]}},"content":{},"keywords":{}}],["什么是集合",{"_index":325,"title":{"29":{"position":[[0,6]]},"84":{"position":[[0,6]]}},"content":{},"keywords":{}}],["从左往右，如果下一个数比根节点（父节点）大，则放在右边，小则放在左边",{"_index":2011,"title":{},"content":{"111":{"position":[[10076,34]]}},"keywords":{}}],["从当前集合中取出每一个",{"_index":1508,"title":{},"content":{"92":{"position":[[37,11]]},"93":{"position":[[1527,11]]}},"keywords":{}}],["从树中移除某个键",{"_index":1793,"title":{},"content":{"111":{"position":[[1097,9]]}},"keywords":{}}],["从链表中的删除指定位置的元素。remove(el",{"_index":2300,"title":{},"content":{"125":{"position":[[591,30]]}},"keywords":{}}],["从链表中移除一项。isempti",{"_index":2133,"title":{},"content":{"123":{"position":[[529,18]]}},"keywords":{}}],["从链表删除指定的元素。isempti",{"_index":2301,"title":{},"content":{"125":{"position":[[622,20]]}},"keywords":{}}],["从链表的特定位置移除一项。remove(el",{"_index":2132,"title":{},"content":{"123":{"position":[[500,28]]}},"keywords":{}}],["从集合移除一个值。has(valu",{"_index":1430,"title":{},"content":{"86":{"position":[[36,19]]}},"keywords":{}}],["代替",{"_index":231,"title":{},"content":{"14":{"position":[[1161,2]]}},"keywords":{}}],["代码实现",{"_index":366,"title":{"33":{"position":[[0,5]]},"39":{"position":[[0,5]]},"53":{"position":[[0,5]]}},"content":{"44":{"position":[[119,5]]},"111":{"position":[[1494,4],[2057,4]]},"113":{"position":[[176,5]]},"114":{"position":[[285,5]]},"115":{"position":[[242,5]]}},"keywords":{}}],["以a为顶点，步数为1可访问的顶点为b、h、e，选择b",{"_index":991,"title":{},"content":{"69":{"position":[[325,26]]}},"keywords":{}}],["以a为顶点，步数为1可访问的顶点为e，选择",{"_index":997,"title":{},"content":{"69":{"position":[[581,22]]}},"keywords":{}}],["以b为顶点，步数为1可访问的顶点为c、d，选择c",{"_index":992,"title":{},"content":{"69":{"position":[[356,24]]}},"keywords":{}}],["以c为顶点，步数为1可访问的顶点为b（已遍历）、h，选择h",{"_index":995,"title":{},"content":{"69":{"position":[[493,29]]}},"keywords":{}}],["以c为顶点，步数为1可访问的顶点为d、h，选择d",{"_index":993,"title":{},"content":{"69":{"position":[[387,24]]}},"keywords":{}}],["以d为顶点，步数为1可访问的顶点为b、c",{"_index":985,"title":{},"content":{"69":{"position":[[207,20]]}},"keywords":{}}],["以d为顶点，步数为1可访问的顶点为b（已遍历）、c（已遍历），返回上一个遍历访问的节点c（c存在步数为1且没被遍历访问过的结点",{"_index":994,"title":{},"content":{"69":{"position":[[420,64]]}},"keywords":{}}],["以e为顶点，步数为1可访问的顶点为f、g，选择f",{"_index":998,"title":{},"content":{"69":{"position":[[616,24]]}},"keywords":{}}],["以f为顶点，步数为1可访问的顶点为g，选择g",{"_index":999,"title":{},"content":{"69":{"position":[[655,22]]}},"keywords":{}}],["以h为顶点，步数为1可访问的顶点为a、f、g",{"_index":981,"title":{},"content":{"69":{"position":[[108,22]]}},"keywords":{}}],["以h为顶点，步数为1可访问的顶点为c、a",{"_index":974,"title":{},"content":{"69":{"position":[[11,20]]}},"keywords":{}}],["以h为顶点，步数为1可访问的顶点为c（已遍历）、a（已遍历），返回到节点a",{"_index":996,"title":{},"content":{"69":{"position":[[533,37]]}},"keywords":{}}],["以下为儿子",{"_index":1620,"title":{},"content":{"101":{"position":[[0,5]]}},"keywords":{}}],["以遍历根（父）节点的顺序来区分三种遍历方式。比如：先序遍历先遍历根节点、中序遍历第二遍历根节点、后续遍历最后遍历根节点",{"_index":2058,"title":{},"content":{"115":{"position":[[572,60]]}},"keywords":{}}],["优先排队的人，优先处理",{"_index":615,"title":{},"content":{"44":{"position":[[14,12]]}},"keywords":{}}],["优先级队列主要考虑的问题",{"_index":617,"title":{},"content":{"44":{"position":[[62,13]]}},"keywords":{}}],["优先队列",{"_index":613,"title":{"44":{"position":[[0,5]]}},"content":{},"keywords":{}}],["优先队列内部的元素类",{"_index":619,"title":{},"content":{"44":{"position":[[128,10]]}},"keywords":{}}],["优先队列类（继承",{"_index":626,"title":{},"content":{"44":{"position":[[250,8]]}},"keywords":{}}],["优点：可以通过下标值访问，效率高；缺点：查找数据时需要先对数据进行排序，生成有序数组，才能提高查找效率；并且在插入和删除元素时，需要大量的位移操作",{"_index":1554,"title":{},"content":{"96":{"position":[[4,74]]}},"keywords":{}}],["优点：哈希表的插入/查询/删除效率都非常高；缺点：空间利用率不高，底层使用的数组中很多单元没有被利用；并且哈希表中的元素是无序的，不能按照固定顺序遍历哈希表中的元素；而且不能快速找出哈希表中最大值或最小值这些特殊值",{"_index":1557,"title":{},"content":{"96":{"position":[[170,108]]}},"keywords":{}}],["优点：数据的插入和删除操作效率都很高；缺点：查找效率低，需要从头开始依次查找，直到找到目标数据为止；当需要在链表中间位置插入或删除数据时，插入或删除的效率都不高",{"_index":1556,"title":{},"content":{"96":{"position":[[83,81]]}},"keywords":{}}],["优点：树结构综合了上述三种结构的优点，同时也弥补了它们存在的缺点（虽然效率不一定都比它们高），比如树结构中数据都是有序的，查找效率高；空间利用率高；并且可以快速获取最大值和最小值等",{"_index":1559,"title":{},"content":{"96":{"position":[[284,91]]}},"keywords":{}}],["优秀的哈希函数",{"_index":1157,"title":{},"content":{"76":{"position":[[1333,8]]}},"keywords":{}}],["但是这种方式会存在这样的问题：很多的单词按照该方式转化为数字后都是",{"_index":1049,"title":{},"content":{"72":{"position":[[195,33]]}},"keywords":{}}],["但是，图形结构的元素之间的关系是任意的",{"_index":853,"title":{},"content":{"59":{"position":[[170,20]]}},"keywords":{}}],["位置+1",{"_index":1101,"title":{},"content":{"76":{"position":[[157,4]]}},"keywords":{}}],["位置中间插入",{"_index":2336,"title":{},"content":{"125":{"position":[[2209,6],[5380,6]]}},"keywords":{}}],["位置开始一个一个位置地查找数据",{"_index":1115,"title":{},"content":{"76":{"position":[[319,15]]}},"keywords":{}}],["位置插入元素",{"_index":2356,"title":{},"content":{"125":{"position":[[3676,6],[6858,6]]}},"keywords":{}}],["位置的节点",{"_index":2353,"title":{},"content":{"125":{"position":[[3614,5],[6796,5]]}},"keywords":{}}],["何为图呢",{"_index":854,"title":{},"content":{"59":{"position":[[191,5]]}},"keywords":{}}],["作为",{"_index":1047,"title":{},"content":{"72":{"position":[[173,2]]}},"keywords":{}}],["作为数组的下标值（哈希化）。并且，数组每一个下标值对应的位置存储的不再是一个数字了，而是存储由经过取余操作后得到相同余数的数字组成的数组或链表",{"_index":1085,"title":{},"content":{"75":{"position":[[38,72]]}},"keywords":{}}],["使之成为新的栈顶元素；从一个栈删除元素又称作",{"_index":693,"title":{},"content":{"47":{"position":[[289,23]]}},"keywords":{}}],["使其相邻的元素成为新的栈顶元素",{"_index":697,"title":{},"content":{"47":{"position":[[332,17]]}},"keywords":{}}],["使用数组",{"_index":2061,"title":{"117":{"position":[[0,5]]}},"content":{},"keywords":{}}],["使用数组存储时，取数据的时候也十分方便：左子节点的序号等于父节点序号",{"_index":2064,"title":{},"content":{"117":{"position":[[67,34]]}},"keywords":{}}],["使用无界队列",{"_index":608,"title":{},"content":{"43":{"position":[[690,6]]}},"keywords":{}}],["使用链表",{"_index":2068,"title":{"118":{"position":[[0,5]]}},"content":{},"keywords":{}}],["使用链表结构可以克服数组需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间,实现灵活的内存动态管理。但链表不会节省空间，相比于数组会占用更多的空间，因为链表中每个节点存放的还有指向其他节点的指针。除此之外，链表不具有数组随机读取的优点",{"_index":2078,"title":{},"content":{"120":{"position":[[176,124]]}},"keywords":{}}],["使用队列实现小游戏：击鼓传花",{"_index":506,"title":{},"content":{"40":{"position":[[0,15]]}},"keywords":{}}],["例如",{"_index":1042,"title":{},"content":{"72":{"position":[[130,2]]},"111":{"position":[[10131,3]]}},"keywords":{}}],["依次类推。现在需要一种方法：产生一种依赖关键字(数据)的探测序列，而不是每个关键字探测步长都一样。这样，不同的关键字即使映射到相同的数组下标，也可以使用不同的探测序列。再哈希法的做法为：把关键字用另一个哈希函数，再做一次哈希化，用这次哈希化的结果作为该关键字的步长",{"_index":1153,"title":{},"content":{"76":{"position":[[1130,133]]}},"keywords":{}}],["保存",{"_index":1877,"title":{},"content":{"111":{"position":[[3539,2]]}},"keywords":{}}],["信息",{"_index":49,"title":{},"content":{"1":{"position":[[215,2]]}},"keywords":{}}],["修改ce，此操作只会影响蓝色和紫色的关键路径，红色不受影响（此时路径权值和最大的仍是红色，即红色为关键路径，也就是最短工期），所以不会达到效果",{"_index":1004,"title":{},"content":{"69":{"position":[[894,71]]}},"keywords":{}}],["修改de，此操作只会影响蓝色和紫色的关键路径，红色不受影响，所以不会达到效果",{"_index":1005,"title":{},"content":{"69":{"position":[[970,38]]}},"keywords":{}}],["修改fd，此操作只会三条关键路径都会受到影响，会达到效果",{"_index":1006,"title":{},"content":{"69":{"position":[[1013,28]]}},"keywords":{}}],["修改fh，此操作只会影响红色和紫色的关键路径，蓝色不受影响，所以不会达到效果",{"_index":1007,"title":{},"content":{"69":{"position":[[1046,38]]}},"keywords":{}}],["修改完",{"_index":1282,"title":{},"content":{"82":{"position":[[961,3],[5905,3]]}},"keywords":{}}],["修改指定位置上的元素。removeat(posit",{"_index":2299,"title":{},"content":{"125":{"position":[[561,29]]}},"keywords":{}}],["修改指定位置的节点",{"_index":2351,"title":{},"content":{"125":{"position":[[3547,9],[6729,9]]}},"keywords":{}}],["修改指定位置节点的",{"_index":2239,"title":{},"content":{"123":{"position":[[3951,9],[7892,9]]}},"keywords":{}}],["修改某个位置的元素。removeat(posit",{"_index":2131,"title":{},"content":{"123":{"position":[[471,28]]}},"keywords":{}}],["修改添加元素的",{"_index":1409,"title":{},"content":{"82":{"position":[[4707,7]]}},"keywords":{}}],["倍扩容后长度为",{"_index":1394,"title":{},"content":{"82":{"position":[[4444,7]]}},"keywords":{}}],["倍扩容或压缩之后，通过循环调用",{"_index":1391,"title":{},"content":{"82":{"position":[[4385,15]]}},"keywords":{}}],["倍，然后将原数组中的元素复制过去",{"_index":2092,"title":{},"content":{"121":{"position":[[280,17]]}},"keywords":{}}],["值与之比较，若",{"_index":1855,"title":{},"content":{"111":{"position":[[2779,7]]}},"keywords":{}}],["值得注意的是：无向图的邻接矩阵是一个对称矩阵，因为在无向图中，顶点i和顶点j有关系，则顶点j和顶点i必有关系",{"_index":926,"title":{},"content":{"64":{"position":[[143,55]]}},"keywords":{}}],["值越小，优先级越大",{"_index":641,"title":{},"content":{"44":{"position":[[730,9]]}},"keywords":{}}],["值，存在返回",{"_index":1441,"title":{},"content":{"87":{"position":[[87,6]]},"93":{"position":[[102,6]]}},"keywords":{}}],["假如链表中有n个元素",{"_index":2080,"title":{},"content":{"120":{"position":[[314,11]]}},"keywords":{}}],["假溢出",{"_index":568,"title":{},"content":{"42":{"position":[[217,5]]},"43":{"position":[[14,3]]}},"keywords":{}}],["假设下图是一个顺序队列，我们将前两个元素",{"_index":561,"title":{},"content":{"42":{"position":[[92,20]]}},"keywords":{}}],["假设堆栈中有n个元素",{"_index":700,"title":{},"content":{"47":{"position":[[378,11]]}},"keywords":{}}],["假设队列中有n个元素",{"_index":444,"title":{},"content":{"35":{"position":[[327,11]]}},"keywords":{}}],["储存数据、prev",{"_index":2291,"title":{},"content":{"125":{"position":[[293,9]]}},"keywords":{}}],["儿子",{"_index":1606,"title":{"100":{"position":[[0,2]]},"101":{"position":[[0,2]]}},"content":{},"keywords":{}}],["兄弟表示法",{"_index":1607,"title":{"100":{"position":[[3,6]]}},"content":{},"keywords":{}}],["兄弟表示法旋转",{"_index":1619,"title":{"101":{"position":[[3,8]]}},"content":{},"keywords":{}}],["兄弟表示法组成的树结构",{"_index":1621,"title":{},"content":{"101":{"position":[[6,12]]}},"keywords":{}}],["先创建单向链表类",{"_index":2143,"title":{},"content":{"123":{"position":[[720,8]]}},"keywords":{}}],["先回答第一个问题，我们需要执行自顶向下（沉底）堆化，这个堆化一开始要将末尾元素移动至堆顶，这个时候末尾的位置就空出来了，由于堆中元素已经减小，这个位置不会再被使用，所以我们可以将取出的元素放在末尾",{"_index":306,"title":{},"content":{"25":{"position":[[125,99]]}},"keywords":{}}],["先将元素放至数组末尾，再自底向上堆化，将末尾元素上浮删除堆顶元素",{"_index":287,"title":{},"content":{"22":{"position":[[5,33]]}},"keywords":{}}],["先序遍历",{"_index":2017,"title":{"113":{"position":[[0,5]]}},"content":{},"keywords":{}}],["先序遍历的过程为",{"_index":2018,"title":{},"content":{"113":{"position":[[0,9]]}},"keywords":{}}],["先序遍历（根左右",{"_index":2022,"title":{},"content":{"113":{"position":[[185,8]]}},"keywords":{}}],["先序遍历；中序遍历；后序遍历",{"_index":2015,"title":{},"content":{"112":{"position":[[71,15]]}},"keywords":{}}],["先输出根结点，再遍历左子树，最后遍历右子树，遍历左子树和右子树的时候，同样遵循先序遍历的规则",{"_index":2019,"title":{},"content":{"113":{"position":[[10,47]]}},"keywords":{}}],["先进先出",{"_index":424,"title":{},"content":{"35":{"position":[[23,5]]}},"keywords":{}}],["先递归中序遍历左子树，再输出根结点的值，再递归中序遍历右子树",{"_index":2034,"title":{},"content":{"114":{"position":[[67,31]]}},"keywords":{}}],["入口文件中直接引入执行",{"_index":188,"title":{},"content":{"13":{"position":[[518,11]]},"14":{"position":[[1002,11],[1214,11]]}},"keywords":{}}],["入度",{"_index":906,"title":{},"content":{"60":{"position":[[708,2]]}},"keywords":{}}],["入队",{"_index":436,"title":{},"content":{"35":{"position":[[169,3]]},"44":{"position":[[1564,2]]}},"keywords":{}}],["入队，将元素加入到队列中",{"_index":471,"title":{},"content":{"39":{"position":[[66,12]]}},"keywords":{}}],["入队，将元素按优先级加入到队列中",{"_index":631,"title":{},"content":{"44":{"position":[[368,16]]}},"keywords":{}}],["关于树的深度和高度的定义可以看",{"_index":1544,"title":{},"content":{"95":{"position":[[500,15]]}},"keywords":{}}],["关键路径：从起始顶点（入度为0，仅一个），到结束顶点（出度为0，仅一个）组成的所有路径中权值和最大的路径即为关键路径，关键路径可能不止一条",{"_index":1001,"title":{},"content":{"69":{"position":[[756,69]]}},"keywords":{}}],["其他方法的实现",{"_index":2364,"title":{},"content":{"125":{"position":[[4257,8]]}},"keywords":{}}],["其实是一种特殊的单链表，和单链表不同的是循环链表的尾结点不是指向",{"_index":2277,"title":{},"content":{"124":{"position":[[5,32]]}},"keywords":{}}],["其实：如果是排序好的数组，可以通过二分查找：第一次找",{"_index":1778,"title":{},"content":{"111":{"position":[[770,26]]}},"keywords":{}}],["具体过程如下图",{"_index":295,"title":{},"content":{"24":{"position":[[141,8]]}},"keywords":{}}],["具体过程如下图所示",{"_index":960,"title":{},"content":{"67":{"position":[[159,11]]},"68":{"position":[[203,11],[258,11]]}},"keywords":{}}],["具有相同父节点的节点互称为兄弟节点。上图中",{"_index":1533,"title":{},"content":{"95":{"position":[[327,22]]}},"keywords":{}}],["内存空间不必是连续的，可以充分利用计算机的内存，实现灵活的内存动态管理",{"_index":2098,"title":{},"content":{"121":{"position":[[435,36]]}},"keywords":{}}],["内容如下",{"_index":201,"title":{},"content":{"14":{"position":[[145,5]]}},"keywords":{}}],["内核进程队列（按优先级排队）现实生活中的派对，播放器上的播放列表;消息队列等等",{"_index":612,"title":{},"content":{"43":{"position":[[822,45]]}},"keywords":{}}],["内部类（链表里的节点",{"_index":2150,"title":{},"content":{"123":{"position":[[857,10],[5829,10]]}},"keywords":{}}],["再哈希法",{"_index":1150,"title":{},"content":{"76":{"position":[[1074,5]]}},"keywords":{}}],["几乎每一种编程语言都有默认实现数组结构，提供了一个便利的",{"_index":2087,"title":{},"content":{"121":{"position":[[154,28]]}},"keywords":{}}],["几乎每种编程语言中，都有集合结构。集合比较常见的实现方式是哈希表，这里使用",{"_index":1417,"title":{},"content":{"84":{"position":[[0,37]]}},"keywords":{}}],["出度",{"_index":904,"title":{},"content":{"60":{"position":[[684,2]]}},"keywords":{}}],["出栈。符合入栈顺序",{"_index":788,"title":{},"content":{"50":{"position":[[417,10]]}},"keywords":{}}],["出栈或退栈",{"_index":694,"title":{},"content":{"47":{"position":[[313,5]]}},"keywords":{}}],["出栈操作，从栈中取出元素，并返回取出的那个元素",{"_index":805,"title":{},"content":{"53":{"position":[[132,23]]}},"keywords":{}}],["出栈而不是",{"_index":781,"title":{},"content":{"50":{"position":[[361,5]]}},"keywords":{}}],["出栈（整体入栈顺序符合",{"_index":768,"title":{},"content":{"50":{"position":[[245,11]]}},"keywords":{}}],["出栈（整体的入栈顺序符合",{"_index":776,"title":{},"content":{"50":{"position":[[310,12]]}},"keywords":{}}],["出栈，1",{"_index":785,"title":{},"content":{"50":{"position":[[400,4]]}},"keywords":{}}],["出栈，2",{"_index":767,"title":{},"content":{"50":{"position":[[240,4]]}},"keywords":{}}],["出栈，21",{"_index":765,"title":{},"content":{"50":{"position":[[229,5]]}},"keywords":{}}],["出栈，3",{"_index":773,"title":{},"content":{"50":{"position":[[284,4],[390,4]]}},"keywords":{}}],["出栈，4",{"_index":762,"title":{},"content":{"50":{"position":[[210,4],[346,4],[395,4]]}},"keywords":{}}],["出栈，5",{"_index":772,"title":{},"content":{"50":{"position":[[279,4]]}},"keywords":{}}],["出栈，6",{"_index":787,"title":{},"content":{"50":{"position":[[412,4]]}},"keywords":{}}],["出栈，之后应该",{"_index":780,"title":{},"content":{"50":{"position":[[351,7]]}},"keywords":{}}],["出队",{"_index":669,"title":{},"content":{"44":{"position":[[2119,2]]}},"keywords":{}}],["出队，从队列中删除前端元素，返回删除的元素",{"_index":648,"title":{},"content":{"44":{"position":[[979,21]]}},"keywords":{}}],["出队，从队列中删除队头元素，返回删除的那个元素",{"_index":474,"title":{},"content":{"39":{"position":[[133,23]]}},"keywords":{}}],["出队，只允许在表的",{"_index":433,"title":{},"content":{"35":{"position":[[140,9]]}},"keywords":{}}],["出队，并入队两个元素",{"_index":563,"title":{},"content":{"42":{"position":[[117,10]]}},"keywords":{}}],["函数",{"_index":718,"title":{},"content":{"48":{"position":[[136,3]]}},"keywords":{}}],["函数中调用",{"_index":704,"title":{},"content":{"48":{"position":[[24,5]]}},"keywords":{}}],["函数调用栈：a(b(c(d",{"_index":703,"title":{},"content":{"48":{"position":[[0,19]]}},"keywords":{}}],["分析：传入一组数据集合和设定的数字",{"_index":507,"title":{},"content":{"40":{"position":[[16,17]]}},"keywords":{}}],["则向左查找，若",{"_index":1856,"title":{},"content":{"111":{"position":[[2806,7]]}},"keywords":{}}],["则它就是",{"_index":1683,"title":{},"content":{"107":{"position":[[173,5]]}},"keywords":{}}],["则返回",{"_index":1216,"title":{},"content":{"80":{"position":[[117,3]]},"123":{"position":[[580,3]]},"125":{"position":[[675,3]]}},"keywords":{}}],["创建单向链表类",{"_index":2142,"title":{},"content":{"123":{"position":[[711,8]]}},"keywords":{}}],["创建双向链表类",{"_index":2306,"title":{},"content":{"125":{"position":[[869,8]]}},"keywords":{}}],["创建哈希表类",{"_index":1236,"title":{},"content":{"82":{"position":[[0,7]]}},"keywords":{}}],["创建节点对象。然后判断根节点是否存在，不存在时通过：this.root",{"_index":1808,"title":{},"content":{"111":{"position":[[1378,35]]}},"keywords":{}}],["初始",{"_index":2147,"title":{},"content":{"123":{"position":[[810,2],[5782,2]]}},"keywords":{}}],["初始化一些变量",{"_index":2206,"title":{},"content":{"123":{"position":[[2500,7],[6907,7]]}},"keywords":{}}],["初始化脚手架",{"_index":153,"title":{},"content":{"13":{"position":[[0,6]]},"14":{"position":[[0,6]]}},"keywords":{}}],["初始链表长度为",{"_index":2146,"title":{},"content":{"123":{"position":[[785,7],[5757,7]]}},"keywords":{}}],["删除",{"_index":1014,"title":{},"content":{"71":{"position":[[89,2]]},"125":{"position":[[3209,2],[6406,2]]}},"keywords":{}}],["删除哈希表中特定位置的元素。isempti",{"_index":1213,"title":{},"content":{"80":{"position":[[59,23]]}},"keywords":{}}],["删除堆顶元素",{"_index":271,"title":{"21":{"position":[[0,7]]}},"content":{},"keywords":{}}],["删除堆顶元素。操作过程需要着重掌握和理解",{"_index":265,"title":{},"content":{"19":{"position":[[22,21]]}},"keywords":{}}],["删除堆顶元素后需要执行自顶向下（沉底）堆化还是自底向上（上浮）堆化？取出的堆顶元素存在哪，新建一个数组存",{"_index":305,"title":{},"content":{"25":{"position":[[71,53]]}},"keywords":{}}],["删除堆顶元素后，为了保持堆的性质，需要对堆的结构进行调整，我们将这个过程称之为&quot;堆化&quot;，堆化的方法分为两种",{"_index":273,"title":{},"content":{"21":{"position":[[78,64]]}},"keywords":{}}],["删除堆顶元素，将末尾元素放至堆顶，再自顶向下堆化，将堆顶元素下沉。也可以自底向上堆化，只是会产生“气泡”，浪费存储空间。最好采用自顶向下堆化的方式",{"_index":288,"title":{},"content":{"22":{"position":[[39,75]]}},"keywords":{}}],["删除对应位置的数组项",{"_index":1322,"title":{},"content":{"82":{"position":[[2198,10],[6735,10]]}},"keywords":{}}],["删除指定",{"_index":1315,"title":{},"content":{"82":{"position":[[1892,4],[6429,4]]},"123":{"position":[[5287,4],[8853,4]]},"125":{"position":[[6927,4]]}},"keywords":{}}],["删除指定位置的节点",{"_index":2254,"title":{},"content":{"123":{"position":[[4568,10],[8257,9]]},"125":{"position":[[2592,9],[5886,9]]}},"keywords":{}}],["删除操作和上述两种情况类似，但需要注意的是，删除一个数据项时，不能将该位置下标的内容设置为",{"_index":1119,"title":{},"content":{"76":{"position":[[401,45]]}},"keywords":{}}],["删除最后一个节点的情况",{"_index":2346,"title":{},"content":{"125":{"position":[[3104,11],[6301,11]]}},"keywords":{}}],["删除的是只有一个子节点的节点",{"_index":1908,"title":{},"content":{"111":{"position":[[4570,15]]}},"keywords":{}}],["删除的是叶子节点",{"_index":1893,"title":{},"content":{"111":{"position":[[4085,9]]}},"keywords":{}}],["删除的是叶子节点分两种情况",{"_index":1894,"title":{},"content":{"111":{"position":[[4095,14]]}},"keywords":{}}],["删除的是叶子节点；删除的是只有一个子节点的节点；删除的是有两个子节点的节点",{"_index":1892,"title":{},"content":{"111":{"position":[[4046,38]]}},"keywords":{}}],["删除的是有两个子节点的节点",{"_index":1945,"title":{},"content":{"111":{"position":[[6063,14]]}},"keywords":{}}],["删除第一个节点的情况",{"_index":2341,"title":{},"content":{"125":{"position":[[2796,10],[6090,10]]}},"keywords":{}}],["删除节点",{"_index":1947,"title":{},"content":{"111":{"position":[[6109,4],[6239,4],[6369,4],[7815,4]]}},"keywords":{}}],["删除集合中指定的",{"_index":1447,"title":{},"content":{"87":{"position":[[296,8]]},"93":{"position":[[311,8]]}},"keywords":{}}],["判断哈希表是否要扩容，若装填因子",{"_index":1290,"title":{},"content":{"82":{"position":[[1095,16],[3448,16],[4772,16],[6040,16]]}},"keywords":{}}],["判断字典中是否存在某个",{"_index":375,"title":{},"content":{"33":{"position":[[85,11]]}},"keywords":{}}],["判断寻找到的后续节点是否直接就是要删除节点的",{"_index":2007,"title":{},"content":{"111":{"position":[[7646,22],[9908,22]]}},"keywords":{}}],["判断得到的容量是否为质数，不是则+1，直到是为止。比如原长度：7，2",{"_index":1393,"title":{},"content":{"82":{"position":[[4409,34]]}},"keywords":{}}],["判断栈是否为空",{"_index":809,"title":{},"content":{"53":{"position":[[274,7]]}},"keywords":{}}],["判断链表是否为空",{"_index":2269,"title":{},"content":{"123":{"position":[[5494,9],[8932,8]]},"125":{"position":[[7008,8]]}},"keywords":{}}],["判断队列是否为空",{"_index":635,"title":{},"content":{"44":{"position":[[521,8]]}},"keywords":{}}],["判断集合中是否存在",{"_index":1440,"title":{},"content":{"87":{"position":[[71,9]]},"93":{"position":[[86,9]]}},"keywords":{}}],["利用栈结构的特点封装实现十进制转换为二进制的方法",{"_index":822,"title":{},"content":{"54":{"position":[[0,25]]}},"keywords":{}}],["利用队列结构的特点实现击鼓传花游戏求解方法的封装",{"_index":511,"title":{},"content":{"40":{"position":[[93,24]]}},"keywords":{}}],["前端（front）进行删除操作被称之为",{"_index":432,"title":{},"content":{"35":{"position":[[120,19]]}},"keywords":{}}],["前面我们在哈希表中使用的是长度为",{"_index":1331,"title":{},"content":{"82":{"position":[[2530,16]]}},"keywords":{}}],["前面的",{"_index":533,"title":{},"content":{"40":{"position":[[581,3]]}},"keywords":{}}],["前驱&amp;后继",{"_index":1973,"title":{},"content":{"111":{"position":[[6726,10]]}},"keywords":{}}],["包含两个指针，一个",{"_index":2280,"title":{},"content":{"125":{"position":[[5,9]]}},"keywords":{}}],["单向链表",{"_index":2109,"title":{"123":{"position":[[0,5]]}},"content":{"128":{"position":[[0,4]]}},"keywords":{}}],["单向链表只有一个方向，结点只有一个后继指针",{"_index":2111,"title":{},"content":{"123":{"position":[[4,21]]}},"keywords":{}}],["单向链表和双向链表的对比",{"_index":2395,"title":{"128":{"position":[[0,13]]}},"content":{},"keywords":{}}],["单向链表的封装",{"_index":2141,"title":{},"content":{"123":{"position":[[702,8]]}},"keywords":{}}],["单向链表的常用方法",{"_index":2124,"title":{},"content":{"123":{"position":[[294,10]]}},"keywords":{}}],["单向链表类似于火车，有一个火车头，火车头会连接一个节点，节点上有乘客，并且这个节点会连接下一个节点，以此类推",{"_index":2116,"title":{},"content":{"123":{"position":[[141,55]]}},"keywords":{}}],["单词的下标值储存在数组中",{"_index":1048,"title":{},"content":{"72":{"position":[[181,13]]}},"keywords":{}}],["单链表",{"_index":2110,"title":{},"content":{"123":{"position":[[0,3]]}},"keywords":{}}],["单链表双向链表循环链表双向循环链表",{"_index":2108,"title":{},"content":{"122":{"position":[[8,17]]}},"keywords":{}}],["单队列",{"_index":555,"title":{"42":{"position":[[0,4]]}},"content":{},"keywords":{}}],["单队列就是常见的队列",{"_index":556,"title":{},"content":{"42":{"position":[[0,11]]}},"keywords":{}}],["危险",{"_index":50,"title":{},"content":{"1":{"position":[[218,2]]}},"keywords":{}}],["即可",{"_index":1309,"title":{},"content":{"82":{"position":[[1453,3]]}},"keywords":{}}],["即将数据化为二进制进行与运算，而不是取余运算。这样计算机直接运算二进制数据，效率更高。但是",{"_index":1205,"title":{},"content":{"79":{"position":[[189,45]]}},"keywords":{}}],["压入栈，最后造成栈溢出（queue",{"_index":724,"title":{},"content":{"48":{"position":[[262,17]]}},"keywords":{}}],["压入栈，随后",{"_index":710,"title":{},"content":{"48":{"position":[[61,6]]}},"keywords":{}}],["压栈操作，往栈里面添加元素",{"_index":804,"title":{},"content":{"53":{"position":[[71,13]]}},"keywords":{}}],["原来的第一个节点，即",{"_index":2203,"title":{},"content":{"123":{"position":[[2369,10],[6776,10]]}},"keywords":{}}],["双向循环链表",{"_index":2390,"title":{"126":{"position":[[0,7]]}},"content":{"126":{"position":[[0,6]]}},"keywords":{}}],["双向链表",{"_index":2279,"title":{"125":{"position":[[0,5]]}},"content":{"125":{"position":[[0,4]]},"128":{"position":[[130,4]]}},"keywords":{}}],["双向链表不仅有",{"_index":2287,"title":{},"content":{"125":{"position":[[233,7]]}},"keywords":{}}],["双向链表常见的操作",{"_index":2295,"title":{},"content":{"125":{"position":[[376,10]]}},"keywords":{}}],["双向链表的其他方法通过继承单向链表来实现",{"_index":2365,"title":{},"content":{"125":{"position":[[4266,21]]}},"keywords":{}}],["双向链表的封装",{"_index":2305,"title":{},"content":{"125":{"position":[[860,8]]}},"keywords":{}}],["双向链表的结构",{"_index":2286,"title":{},"content":{"125":{"position":[[223,8]]}},"keywords":{}}],["双向链表的节点类（继承单向链表的节点类",{"_index":2315,"title":{},"content":{"125":{"position":[[1001,20]]}},"keywords":{}}],["双向链表类继承单向链表类",{"_index":2317,"title":{},"content":{"125":{"position":[[1118,12]]}},"keywords":{}}],["取余）之后得到的下标值",{"_index":1097,"title":{},"content":{"76":{"position":[[106,11]]}},"keywords":{}}],["取余，并返回",{"_index":1234,"title":{},"content":{"81":{"position":[[290,6]]}},"keywords":{}}],["取出",{"_index":335,"title":{},"content":{"29":{"position":[[170,2]]}},"keywords":{}}],["取出对应的",{"_index":1269,"title":{},"content":{"82":{"position":[[623,5],[5567,5]]}},"keywords":{}}],["取出第一个元素并堆化",{"_index":309,"title":{},"content":{"25":{"position":[[310,11]]}},"keywords":{}}],["取出第三个元素并堆化",{"_index":311,"title":{},"content":{"25":{"position":[[336,11]]}},"keywords":{}}],["取出第二个元素并堆化",{"_index":310,"title":{},"content":{"25":{"position":[[323,11]]}},"keywords":{}}],["取出第五个元素并堆化",{"_index":313,"title":{},"content":{"25":{"position":[[362,11]]}},"keywords":{}}],["取出第六个元素并堆化",{"_index":314,"title":{},"content":{"25":{"position":[[375,11]]}},"keywords":{}}],["取出第四个元素并堆化",{"_index":312,"title":{},"content":{"25":{"position":[[349,11]]}},"keywords":{}}],["变换之前",{"_index":1189,"title":{},"content":{"78":{"position":[[111,5]]}},"keywords":{}}],["变换之后",{"_index":1193,"title":{},"content":{"78":{"position":[[143,5]]}},"keywords":{}}],["只允许在表的",{"_index":431,"title":{},"content":{"35":{"position":[[112,7]]}},"keywords":{}}],["只存在&lt;右节点&gt;的情况",{"_index":1943,"title":{},"content":{"111":{"position":[[5746,17],[8992,17]]}},"keywords":{}}],["只存在&lt;左节点&gt;的情况",{"_index":1937,"title":{},"content":{"111":{"position":[[5350,17],[8596,17]]}},"keywords":{}}],["只存在右节点",{"_index":1941,"title":{},"content":{"111":{"position":[[5718,6],[8964,6]]}},"keywords":{}}],["只存在左节点",{"_index":1935,"title":{},"content":{"111":{"position":[[5322,6],[8568,6]]}},"keywords":{}}],["只缺失右侧若干叶子节点（注意：此处的右侧非根节点的右侧，而是当前连续的左右的右",{"_index":1692,"title":{},"content":{"108":{"position":[[82,42]]}},"keywords":{}}],["只能从头遍历到尾或者从尾遍历到头（一般从头到尾）。链表相连的过程是单向的，实现原理是上一个节点中有指向下一个节点的引用。单向链表有一个比较明显的缺点：可以轻松到达下一个节点，但回到前一个节点很难，在实际开发中",{"_index":2396,"title":{},"content":{"128":{"position":[[5,105]]}},"keywords":{}}],["只需要",{"_index":938,"title":{},"content":{"65":{"position":[[334,3]]}},"keywords":{}}],["只需要知道目标位置元素的上一个元素即可。但是，在查找一个节点或者访问特定位置的节点的时候复杂度为",{"_index":2077,"title":{},"content":{"120":{"position":[[119,49]]}},"keywords":{}}],["可以使用",{"_index":228,"title":{},"content":{"14":{"position":[[1143,4]]}},"keywords":{}}],["可以是一棵空树如果不是空树，它的左右两个子树的高度差的绝对值不超过",{"_index":1705,"title":{},"content":{"109":{"position":[[24,33]]}},"keywords":{}}],["可以看到随着装填因子的增加，平均探测长度呈线性增长，较为平缓。在开发中使用链地址法较多，比如",{"_index":1177,"title":{},"content":{"76":{"position":[[1893,46]]}},"keywords":{}}],["可以看到，随着装填因子的增大，平均探测长度呈指数形式增长，性能较差。实际情况中，最好的装填因子取决于存储效率和速度之间的平衡，随着装填因子变小，存储效率下降，而速度上升",{"_index":1173,"title":{},"content":{"76":{"position":[[1707,85]]}},"keywords":{}}],["可以设置一个标志变量",{"_index":590,"title":{},"content":{"43":{"position":[[200,10]]}},"keywords":{}}],["可以重复",{"_index":339,"title":{},"content":{"29":{"position":[[210,5]]}},"keywords":{}}],["右子树中比",{"_index":1970,"title":{},"content":{"111":{"position":[[6684,5]]}},"keywords":{}}],["右子树中的最小值",{"_index":1972,"title":{},"content":{"111":{"position":[[6716,9]]}},"keywords":{}}],["右子树（所有值大于根节点）：每个左子节点必须小于其父节点且大于整个树的根节点，右子节点必须大于其父节点",{"_index":1751,"title":{},"content":{"111":{"position":[[302,51]]}},"keywords":{}}],["叶子节点不为根节点",{"_index":1899,"title":{},"content":{"111":{"position":[[4191,9]]}},"keywords":{}}],["叶子节点也是根节点",{"_index":1895,"title":{},"content":{"111":{"position":[[4110,9]]}},"keywords":{}}],["叶子节点从左向右是连续存在",{"_index":1691,"title":{},"content":{"108":{"position":[[68,13]]}},"keywords":{}}],["同样是",{"_index":1775,"title":{},"content":{"111":{"position":[[731,3]]}},"keywords":{}}],["后原二叉树仍为二叉搜索树的前提下，也有两种方式",{"_index":1958,"title":{},"content":{"111":{"position":[[6256,24]]}},"keywords":{}}],["后原二叉树仍为二叉搜索树的前提下，有两种方式",{"_index":1949,"title":{},"content":{"111":{"position":[[6126,23]]}},"keywords":{}}],["后原树二叉树仍为二叉搜索树的前提下，同样有两种方式",{"_index":1960,"title":{},"content":{"111":{"position":[[6388,26]]}},"keywords":{}}],["后序遍历",{"_index":2047,"title":{"115":{"position":[[0,5]]}},"content":{},"keywords":{}}],["后序遍历（左右根",{"_index":2050,"title":{},"content":{"115":{"position":[[251,8]]}},"keywords":{}}],["后端插入前端删除元素",{"_index":448,"title":{},"content":{"35":{"position":[[366,10]]}},"keywords":{}}],["后端（rear）进行插入操作",{"_index":434,"title":{},"content":{"35":{"position":[[150,14]]}},"keywords":{}}],["后继的情况，查找前驱的原理相同，这里暂不讨论",{"_index":1990,"title":{},"content":{"111":{"position":[[7022,23]]}},"keywords":{}}],["后进先出",{"_index":688,"title":{},"content":{"47":{"position":[[151,4]]}},"keywords":{}}],["后进先出（lifo",{"_index":683,"title":{},"content":{"47":{"position":[[89,10]]},"49":{"position":[[30,10]]}},"keywords":{}}],["后，不再符合该情况，也就不再调用",{"_index":1828,"title":{},"content":{"111":{"position":[[1842,16]]}},"keywords":{}}],["后，仍然没有找到对应的",{"_index":1307,"title":{},"content":{"82":{"position":[[1422,11]]}},"keywords":{}}],["向右查找，与向左查找类似",{"_index":1830,"title":{},"content":{"111":{"position":[[1907,13]]}},"keywords":{}}],["向后移动",{"_index":586,"title":{},"content":{"43":{"position":[[132,5]]}},"keywords":{}}],["向字典中添加新元素。remove(key",{"_index":354,"title":{},"content":{"32":{"position":[[15,21]]}},"keywords":{}}],["向左查找",{"_index":1821,"title":{},"content":{"111":{"position":[[1753,5]]}},"keywords":{}}],["向树中插入一个新的键。search(key",{"_index":1784,"title":{},"content":{"111":{"position":[[895,22]]}},"keywords":{}}],["向链表尾部添加一个新的项。insert(posit",{"_index":2126,"title":{},"content":{"123":{"position":[[321,29]]}},"keywords":{}}],["向链表尾部追加一个新元素。insert(posit",{"_index":2296,"title":{},"content":{"125":{"position":[[403,29]]}},"keywords":{}}],["向链表的指定位置插入一个新元素。getelement(posit",{"_index":2297,"title":{},"content":{"125":{"position":[[442,36]]}},"keywords":{}}],["向链表的特定位置插入一个新的项。get(posit",{"_index":2127,"title":{},"content":{"123":{"position":[[360,29]]}},"keywords":{}}],["向队列尾部添加一个（或多个）新的项。dequeu",{"_index":457,"title":{},"content":{"38":{"position":[[17,27]]}},"keywords":{}}],["向集合添加一个新的项。remove(valu",{"_index":1429,"title":{},"content":{"86":{"position":[[11,24]]}},"keywords":{}}],["否则往右查找",{"_index":1887,"title":{},"content":{"111":{"position":[[3886,6],[8132,6]]}},"keywords":{}}],["和右子树",{"_index":1646,"title":{},"content":{"103":{"position":[[41,4]]}},"keywords":{}}],["和广度优先搜索类似，深度优先搜索的具体实现用到了另一种线性数据结构——栈",{"_index":971,"title":{},"content":{"68":{"position":[[166,36],[221,36]]}},"keywords":{}}],["和第一个哈希函数不同，不然哈希化后的结果仍是原来位置；不能输出为",{"_index":1155,"title":{},"content":{"76":{"position":[[1280,32]]}},"keywords":{}}],["哈夫曼树",{"_index":1730,"title":{"110":{"position":[[0,5]]}},"content":{},"keywords":{}}],["哈夫曼树的构造",{"_index":1733,"title":{},"content":{"110":{"position":[[19,8]]}},"keywords":{}}],["哈夫曼编码",{"_index":1734,"title":{},"content":{"110":{"position":[[30,6]]}},"keywords":{}}],["哈夫曼编码，每种字符用一串二进制表示，出现频率越高表示位数越少",{"_index":1735,"title":{},"content":{"110":{"position":[[37,31]]}},"keywords":{}}],["哈希函数",{"_index":1075,"title":{"77":{"position":[[0,5]]}},"content":{"73":{"position":[[30,4]]}},"keywords":{}}],["哈希函数的实现",{"_index":1219,"title":{"81":{"position":[[0,8]]}},"content":{},"keywords":{}}],["哈希化",{"_index":1073,"title":{},"content":{"73":{"position":[[0,3]]}},"keywords":{}}],["哈希化的效率",{"_index":1163,"title":{},"content":{"76":{"position":[[1451,6]]}},"keywords":{}}],["哈希表",{"_index":1008,"title":{"70":{"position":[[0,3]]}},"content":{"73":{"position":[[84,3]]},"96":{"position":[[165,4]]}},"keywords":{}}],["哈希表中执行插入和搜索操作效率是非常高的",{"_index":1164,"title":{},"content":{"76":{"position":[[1458,21]]}},"keywords":{}}],["哈希表中数据",{"_index":1352,"title":{},"content":{"82":{"position":[[2946,6]]}},"keywords":{}}],["哈希表中的数据是没有顺序的，所以不能以一种固定的方式（比如从小到大",{"_index":1020,"title":{},"content":{"71":{"position":[[212,33]]}},"keywords":{}}],["哈希表可以提供非常快速的",{"_index":1012,"title":{},"content":{"71":{"position":[[73,12]]}},"keywords":{}}],["哈希表同样存在不足之处",{"_index":1019,"title":{},"content":{"71":{"position":[[199,12]]}},"keywords":{}}],["哈希表存储数据的变量",{"_index":1242,"title":{},"content":{"82":{"position":[[129,10],[5157,10]]}},"keywords":{}}],["哈希表完整实现",{"_index":1413,"title":{},"content":{"82":{"position":[[5092,8]]}},"keywords":{}}],["哈希表并不好理解，不像数组、链表和树等可通过图形的形式表示其结构和原理。哈希表的结构就是数组，但它神奇之处在于对下标值的一种变换，这种变换我们可以称之为哈希函数，通过哈希函数可以获取",{"_index":1025,"title":{},"content":{"71":{"position":[[311,91]]}},"keywords":{}}],["哈希表是一种非常重要的数据结构，几乎所有的编程语言都直接或者间接应用这种数据结构",{"_index":1010,"title":{},"content":{"71":{"position":[[0,41]]}},"keywords":{}}],["哈希表是什么",{"_index":1024,"title":{},"content":{"71":{"position":[[303,7]]}},"keywords":{}}],["哈希表的优势在于它的速度，所以哈希函数不能采用消耗性能较高的复杂算法。提高速度的一个方法是在哈希函数中尽量减少乘法和除法",{"_index":1179,"title":{},"content":{"77":{"position":[[0,61]]}},"keywords":{}}],["哈希表的实现",{"_index":1235,"title":{"82":{"position":[[0,7]]}},"content":{},"keywords":{}}],["哈希表的常用方法",{"_index":1209,"title":{"80":{"position":[[0,9]]}},"content":{},"keywords":{}}],["哈希表的常见概念",{"_index":1072,"title":{"73":{"position":[[0,9]]}},"content":{},"keywords":{}}],["哈希表的扩容与压缩",{"_index":1329,"title":{},"content":{"82":{"position":[[2510,10]]}},"keywords":{}}],["哈希表的插入和修改操作是同一个函数：因为，当使用者传入一个",{"_index":1248,"title":{},"content":{"82":{"position":[[220,29]]}},"keywords":{}}],["哈希表通常是基于数组实现的，但是相对于数组，它存在更多优势",{"_index":1011,"title":{},"content":{"71":{"position":[[42,30]]}},"keywords":{}}],["哈希表长度（初始设为质数",{"_index":1246,"title":{},"content":{"82":{"position":[[188,12],[5216,12]]}},"keywords":{}}],["哈希表长度，即",{"_index":1353,"title":{},"content":{"82":{"position":[[2955,7]]}},"keywords":{}}],["哈希表长度；开放地址法的装填因子最大为",{"_index":1169,"title":{},"content":{"76":{"position":[[1615,19]]}},"keywords":{}}],["响应式判断设备大小，设置不同的根字体大小)，内容如下",{"_index":177,"title":{},"content":{"13":{"position":[[275,27]]},"14":{"position":[[759,27]]}},"keywords":{}}],["因而按照",{"_index":682,"title":{},"content":{"47":{"position":[[84,4]]}},"keywords":{}}],["图",{"_index":846,"title":{"58":{"position":[[0,1]]}},"content":{},"keywords":{}}],["图在我们日常生活中的例子很多！比如我们在社交软件上好友关系就可以用图来表示",{"_index":857,"title":{},"content":{"59":{"position":[[297,38]]}},"keywords":{}}],["图是一种与树有些相似的数据结构",{"_index":858,"title":{},"content":{"59":{"position":[[336,16]]}},"keywords":{}}],["图是一种较为复杂的非线性结构",{"_index":849,"title":{},"content":{"59":{"position":[[56,15]]}},"keywords":{}}],["图的存储方式",{"_index":920,"title":{"63":{"position":[[0,7]]}},"content":{},"keywords":{}}],["图的常用术语",{"_index":869,"title":{"60":{"position":[[0,7]]}},"content":{},"keywords":{}}],["图的遍历",{"_index":952,"title":{"66":{"position":[[0,5]]}},"content":{},"keywords":{}}],["图解队列",{"_index":449,"title":{},"content":{"35":{"position":[[378,5]]}},"keywords":{}}],["图通常有什么特点呢",{"_index":860,"title":{},"content":{"59":{"position":[[409,10]]}},"keywords":{}}],["在上图中，由于",{"_index":1695,"title":{},"content":{"108":{"position":[[243,7]]}},"keywords":{}}],["在二叉搜索树中查找最值非常简单，最小值在二叉搜索树的最左边，最大值在二叉搜索树的最右边。只需要一直向左/右查找就能得到最值，如下图所示",{"_index":1846,"title":{},"content":{"111":{"position":[[2361,68]]}},"keywords":{}}],["在二叉搜索树中，这两个特殊的节点有特殊的名字",{"_index":1974,"title":{},"content":{"111":{"position":[[6737,23]]}},"keywords":{}}],["在二维数组中，0",{"_index":934,"title":{},"content":{"65":{"position":[[271,8]]}},"keywords":{}}],["在保证删除节点",{"_index":1948,"title":{},"content":{"111":{"position":[[6116,7],[6246,7],[6377,7]]}},"keywords":{}}],["在堆这个公司中，会出现老大离职的现象，老大离职之后，他的位置就空出来了",{"_index":276,"title":{},"content":{"21":{"position":[[258,35]]}},"keywords":{}}],["在字典中删除指定的",{"_index":381,"title":{},"content":{"33":{"position":[[242,9]]}},"keywords":{}}],["在字典中添加键值对",{"_index":378,"title":{},"content":{"33":{"position":[[172,9]]}},"keywords":{}}],["在实际中，经过哈希函数哈希化过后得到的下标值可能有重复，这种情况称为冲突，冲突是不可避免的，我们只能解决冲突",{"_index":1079,"title":{},"content":{"74":{"position":[[0,55]]}},"keywords":{}}],["在开放地址法中寻找空白单元格的最好的解决方式为再哈希化",{"_index":1151,"title":{},"content":{"76":{"position":[[1080,28]]}},"keywords":{}}],["在当前节点和当前节点的上一节点之间插入新节点，即它们的改变指向",{"_index":2212,"title":{},"content":{"123":{"position":[[2802,31],[7209,31]]}},"keywords":{}}],["在指定位置（position）插入节点",{"_index":2189,"title":{},"content":{"123":{"position":[[2021,19],[6428,19]]}},"keywords":{}}],["在指定的位置插入元素",{"_index":644,"title":{},"content":{"44":{"position":[[800,10]]}},"keywords":{}}],["在数组开头或中间位置插入数据的成本很高，需要进行大量元素的位移",{"_index":2093,"title":{},"content":{"121":{"position":[[298,32]]}},"keywords":{}}],["在无向图中，我们只关心关系的有无，所以当顶点i和顶点j有关系时，a[i][j]=1，当顶点i和顶点j没有关系时，a[i][j]=0。如下图所示",{"_index":925,"title":{},"content":{"64":{"position":[[69,72]]}},"keywords":{}}],["在无向图中，邻接表元素个数等于边的条数的两倍，如左图所示的无向图中，边的条数为7，邻接表存储的元素个数为14。在有向图中，邻接表元素个数等于边的条数，如右图所示的有向图中，边的条数为8，邻接表存储的元素个数为8。图片解析",{"_index":933,"title":{},"content":{"65":{"position":[[160,110]]}},"keywords":{}}],["在最后一个位置插入",{"_index":2335,"title":{},"content":{"125":{"position":[[2096,9],[5267,9]]}},"keywords":{}}],["在树中查找一个键，如果节点存在，则返回",{"_index":1785,"title":{},"content":{"111":{"position":[[918,19]]}},"keywords":{}}],["在根目录下创建",{"_index":199,"title":{},"content":{"14":{"position":[[117,7]]}},"keywords":{}}],["在第",{"_index":2329,"title":{},"content":{"125":{"position":[[1843,2],[5014,2]]}},"keywords":{}}],["在计算机程序设计中，图也是一种非常常见的数据结构，图论其实是一个非常大的话题，在数学上起源于哥尼斯堡七桥问题",{"_index":848,"title":{},"content":{"59":{"position":[[0,55]]}},"keywords":{}}],["在设计哈希表时，我们已经有办法处理映射到相同下标值的情况：链地址法或者开放地址法。但是，为了提供效率，最好的情况还是让数据在哈希表中均匀分布。因此，我们需要在使用常量的地方，尽量使用质数。比如：哈希表的长度、n",{"_index":1200,"title":{},"content":{"79":{"position":[[0,105]]}},"keywords":{}}],["在进入正题之前，再重申一遍，堆是一个公平的公司，有能力的人自然会走到与他能力所匹配的位置",{"_index":266,"title":{},"content":{"19":{"position":[[44,44]]}},"keywords":{}}],["在进行较大数据的与运算时会出现问题，所以我们使用",{"_index":1207,"title":{},"content":{"79":{"position":[[246,24]]}},"keywords":{}}],["地址冲突及其解决方法",{"_index":1078,"title":{"74":{"position":[[0,11]]}},"content":{},"keywords":{}}],["均匀分布",{"_index":1199,"title":{"79":{"position":[[0,5]]}},"content":{},"keywords":{}}],["堆",{"_index":236,"title":{"15":{"position":[[0,1]]}},"content":{},"keywords":{}}],["堆中的每一个节点的值都大于等于子树中所有节点的值最小堆",{"_index":254,"title":{},"content":{"17":{"position":[[34,28]]}},"keywords":{}}],["堆中的每一个节点的值都小于等于子树中所有节点的值",{"_index":255,"title":{},"content":{"17":{"position":[[63,25]]}},"keywords":{}}],["堆分为",{"_index":251,"title":{},"content":{"17":{"position":[[0,3]]}},"keywords":{}}],["堆排序",{"_index":289,"title":{"23":{"position":[[0,4]]}},"content":{},"keywords":{}}],["堆排序完成",{"_index":315,"title":{},"content":{"25":{"position":[[388,6]]}},"keywords":{}}],["堆排序的过程分为两步",{"_index":290,"title":{},"content":{"23":{"position":[[0,11]]}},"keywords":{}}],["堆的分类",{"_index":250,"title":{"17":{"position":[[0,5]]}},"content":{},"keywords":{}}],["堆的初始化时间复杂度为",{"_index":248,"title":{},"content":{"16":{"position":[[239,11]]}},"keywords":{}}],["堆的存储",{"_index":257,"title":{"18":{"position":[[0,5]]}},"content":{},"keywords":{}}],["堆的操作",{"_index":262,"title":{"19":{"position":[[0,5]]}},"content":{},"keywords":{}}],["堆的操作总结",{"_index":286,"title":{"22":{"position":[[0,7]]}},"content":{},"keywords":{}}],["堆的更新操作主要包括两种",{"_index":263,"title":{},"content":{"19":{"position":[[0,12]]}},"keywords":{}}],["堆的用途",{"_index":237,"title":{"16":{"position":[[0,5]]}},"content":{},"keywords":{}}],["处理",{"_index":453,"title":{},"content":{"36":{"position":[[69,3]]}},"keywords":{}}],["外，其他各层的节点数都达到了最大值",{"_index":1689,"title":{},"content":{"108":{"position":[[40,18]]}},"keywords":{}}],["多条关键路径需要修改可以使得每条关键路径都会受到影响的才有效",{"_index":1002,"title":{},"content":{"69":{"position":[[828,30]]}},"keywords":{}}],["大一点点的节点，即",{"_index":1971,"title":{},"content":{"111":{"position":[[6698,9]]}},"keywords":{}}],["大一点点的节点，称为",{"_index":1979,"title":{},"content":{"111":{"position":[[6828,10]]}},"keywords":{}}],["大家可以想象成一巴掌把树压扁，父结点被拍到了左子节点和右子节点的中间，如下图所示",{"_index":2039,"title":{},"content":{"114":{"position":[[242,41]]}},"keywords":{}}],["大家可以数一数邻接表中所存储的元素的个数以及图中边的条数，你会发现",{"_index":932,"title":{},"content":{"65":{"position":[[125,34]]}},"keywords":{}}],["大话数据结构",{"_index":578,"title":{},"content":{"42":{"position":[[395,8]]}},"keywords":{}}],["如上图所示，二叉树的节点遍历顺序为：a",{"_index":2021,"title":{},"content":{"113":{"position":[[90,19]]}},"keywords":{}}],["如上图所示，树二和树三符合",{"_index":1752,"title":{},"content":{"111":{"position":[[355,13]]}},"keywords":{}}],["如上图所示，通过上面这张图说明一下树中的常用概念",{"_index":1522,"title":{},"content":{"95":{"position":[[132,25]]}},"keywords":{}}],["如下图所示",{"_index":698,"title":{},"content":{"47":{"position":[[350,6]]}},"keywords":{}}],["如下图所示，图1是最大堆，图2是最小堆",{"_index":256,"title":{},"content":{"17":{"position":[[89,19]]}},"keywords":{}}],["如下图所示，我们将每一个数字都对",{"_index":1082,"title":{},"content":{"75":{"position":[[0,16]]}},"keywords":{}}],["如何进行扩容",{"_index":1341,"title":{},"content":{"82":{"position":[[2724,7]]}},"keywords":{}}],["如图，树结构的组成方式类似于链表，都是由一个个节点连接构成。不过，根据每个父节点子节点数量的不同，每一个父节点需要的引用数量也不同。比如节点",{"_index":1598,"title":{},"content":{"99":{"position":[[1,70]]}},"keywords":{}}],["如果",{"_index":1279,"title":{},"content":{"82":{"position":[[916,2],[5860,2]]}},"keywords":{}}],["如果不为空，则满足以下性质",{"_index":1741,"title":{},"content":{"111":{"position":[[64,16]]}},"keywords":{}}],["如果为空，不用判断优先级，直接添加",{"_index":637,"title":{},"content":{"44":{"position":[[555,17]]}},"keywords":{}}],["如果之前的数据是连续插入的，那么新插入的一个数据可能需要探测很长的距离",{"_index":1135,"title":{},"content":{"76":{"position":[[775,36]]}},"keywords":{}}],["如果你已经足够了解堆化的过程，那么建堆的过程掌握起来就比较容易了。建堆的过程就是一个对所有非叶节点的自顶向下堆化过程",{"_index":293,"title":{},"content":{"24":{"position":[[0,59]]}},"keywords":{}}],["如果使用大",{"_index":1195,"title":{},"content":{"78":{"position":[[168,5]]}},"keywords":{}}],["如果值在集合中，返回",{"_index":1431,"title":{},"content":{"86":{"position":[[56,10]]}},"keywords":{}}],["如果哈希表中不包含任何元素，返回",{"_index":1214,"title":{},"content":{"80":{"position":[[83,16]]}},"keywords":{}}],["如果是一个无向图，邻接矩阵展示出来的二维数组，其实是一个对称图",{"_index":944,"title":{},"content":{"65":{"position":[[393,32]]}},"keywords":{}}],["如果某个键值存在于这个字典中，则返回",{"_index":356,"title":{},"content":{"32":{"position":[[68,18]]}},"keywords":{}}],["如果栈里没有任何元素就返回",{"_index":799,"title":{},"content":{"52":{"position":[[99,13]]}},"keywords":{}}],["如果树中的每一个节点最多只能由两个子节点，这样的树就称为二叉树(最多两个子节点、左孩子和右孩子",{"_index":1627,"title":{},"content":{"102":{"position":[[0,49]]}},"keywords":{}}],["如果没有发生冲突，那么效率就会更高；如果发生冲突，存取时间就依赖后来的探测长度；平均探测长度以及平均存取时间，取决于填装因子，随着填装因子变大，探测长度会越来越长",{"_index":1165,"title":{},"content":{"76":{"position":[[1480,82]]}},"keywords":{}}],["如果第i个顶点和第j个顶点之间有关系，且关系权值为n，则",{"_index":923,"title":{},"content":{"64":{"position":[[28,28]]}},"keywords":{}}],["如果遍历完所有元素，优先级都大于新插入的元素，就将新插入的元素插入到最后",{"_index":647,"title":{},"content":{"44":{"position":[[878,36]]}},"keywords":{}}],["如果链表中不包含任何元素，返回",{"_index":2134,"title":{},"content":{"123":{"position":[[548,15]]},"125":{"position":[[643,15]]}},"keywords":{}}],["如果队列中不包含任何元素，返回",{"_index":463,"title":{},"content":{"38":{"position":[[168,15]]}},"keywords":{}}],["如果集合不存在该",{"_index":382,"title":{},"content":{"33":{"position":[[273,8]]},"87":{"position":[[330,8]]},"93":{"position":[[345,8]]}},"keywords":{}}],["如果需要支持随机访问的话，链表没办法做到。如果需要存储的数据元素的个数不确定，并且需要经常添加和删除数据的话，使用链表比较合适。如果需要存储的数据元素的个数确定，并且不需要经常添加和删除数据的话，使用数组比较合适",{"_index":2394,"title":{},"content":{"127":{"position":[[0,107]]}},"keywords":{}}],["子集",{"_index":1506,"title":{},"content":{"92":{"position":[[12,2]]},"93":{"position":[[1502,2]]}},"keywords":{}}],["子集的实现",{"_index":1504,"title":{"92":{"position":[[0,6]]}},"content":{},"keywords":{}}],["字典和映射的关系",{"_index":340,"title":{"30":{"position":[[0,9]]}},"content":{},"keywords":{}}],["字典存储的是键值对，主要特点是一一对应。比如保存一个人的信息",{"_index":326,"title":{},"content":{"29":{"position":[[0,30]]}},"keywords":{}}],["字典的封装",{"_index":351,"title":{"31":{"position":[[0,6]]}},"content":{},"keywords":{}}],["字典的常见方法",{"_index":352,"title":{"32":{"position":[[0,8]]}},"content":{},"keywords":{}}],["字典结构的封装",{"_index":367,"title":{},"content":{"33":{"position":[[3,7]]}},"keywords":{}}],["字典（map",{"_index":324,"title":{"28":{"position":[[0,7]]}},"content":{},"keywords":{}}],["存储元组",{"_index":1288,"title":{},"content":{"82":{"position":[[1050,4],[5995,4]]}},"keywords":{}}],["存储多个元素，另外一个选择就是使用链表",{"_index":2094,"title":{},"content":{"121":{"position":[[336,20]]}},"keywords":{}}],["存储多个元素，数组（或列表）可能是最常用的数据结构",{"_index":2086,"title":{},"content":{"121":{"position":[[127,26]]}},"keywords":{}}],["存储数据",{"_index":1609,"title":{},"content":{"100":{"position":[[32,6]]}},"keywords":{}}],["存在右子节点时（current.left",{"_index":1928,"title":{},"content":{"111":{"position":[[4929,20]]}},"keywords":{}}],["存在左子节点时（current.right",{"_index":1910,"title":{},"content":{"111":{"position":[[4603,21]]}},"keywords":{}}],["它是",{"_index":691,"title":{},"content":{"47":{"position":[[271,3]]}},"keywords":{}}],["它是把",{"_index":695,"title":{},"content":{"47":{"position":[[319,4]]}},"keywords":{}}],["安装依赖",{"_index":156,"title":{},"content":{"13":{"position":[[25,4]]},"14":{"position":[[31,4]]}},"keywords":{}}],["完全二叉树",{"_index":1685,"title":{"108":{"position":[[0,6]]}},"content":{},"keywords":{}}],["完全二叉树有一个很好的性质：父结点和子节点的序号有着对应关系",{"_index":1697,"title":{},"content":{"108":{"position":[[273,31]]}},"keywords":{}}],["完全二叉树（complet",{"_index":1686,"title":{},"content":{"108":{"position":[[0,14]]}},"keywords":{}}],["完全二叉树：按从上到下，从左到右的方式存储数据",{"_index":2062,"title":{},"content":{"117":{"position":[[0,24]]}},"keywords":{}}],["完整实现",{"_index":1511,"title":{"93":{"position":[[0,5]]}},"content":{"111":{"position":[[7806,5]]},"123":{"position":[[5729,5]]},"125":{"position":[[4288,5]]}},"keywords":{}}],["完美二叉树是特殊的完全二叉树",{"_index":1694,"title":{},"content":{"108":{"position":[[226,15]]}},"keywords":{}}],["完美二叉树（perfect",{"_index":1676,"title":{},"content":{"107":{"position":[[0,13]]}},"keywords":{}}],["定义一个变量记录是否成功添加了新元素",{"_index":639,"title":{},"content":{"44":{"position":[[616,18]]}},"keywords":{}}],["定义变量，保存要找到的后续",{"_index":2000,"title":{},"content":{"111":{"position":[[7418,13],[9680,13]]}},"keywords":{}}],["实现append()方法",{"_index":2152,"title":{},"content":{"123":{"position":[[954,13]]},"125":{"position":[[1223,13]]}},"keywords":{}}],["实现backwardstring()方法",{"_index":2361,"title":{},"content":{"125":{"position":[[3995,21]]}},"keywords":{}}],["实现forwardtostring()方法",{"_index":2358,"title":{},"content":{"125":{"position":[[3730,22]]}},"keywords":{}}],["实现get()方法",{"_index":1294,"title":{},"content":{"82":{"position":[[1227,10]]}},"keywords":{}}],["实现getdata()方法",{"_index":2219,"title":{},"content":{"123":{"position":[[3093,14]]}},"keywords":{}}],["实现indexof()方法",{"_index":2230,"title":{},"content":{"123":{"position":[[3528,14]]}},"keywords":{}}],["实现insert()方法",{"_index":1806,"title":{},"content":{"111":{"position":[[1346,13]]},"123":{"position":[[1995,13]]},"125":{"position":[[1576,13]]}},"keywords":{}}],["实现insertnode()方法",{"_index":1817,"title":{},"content":{"111":{"position":[[1662,17]]}},"keywords":{}}],["实现isempty()方法",{"_index":1327,"title":{},"content":{"82":{"position":[[2412,14]]},"123":{"position":[[5469,14]]}},"keywords":{}}],["实现min()和max()方法",{"_index":1844,"title":{},"content":{"111":{"position":[[2334,16]]}},"keywords":{}}],["实现put()方法",{"_index":1247,"title":{},"content":{"82":{"position":[[209,10]]}},"keywords":{}}],["实现remove()方法",{"_index":1312,"title":{},"content":{"82":{"position":[[1701,13]]},"123":{"position":[[5260,13]]}},"keywords":{}}],["实现removeat()方法",{"_index":2252,"title":{},"content":{"123":{"position":[[4533,15]]},"125":{"position":[[2562,15]]}},"keywords":{}}],["实现resize()方法",{"_index":1351,"title":{},"content":{"82":{"position":[[2925,13]]}},"keywords":{}}],["实现size()方法",{"_index":1328,"title":{},"content":{"82":{"position":[[2467,11]]},"123":{"position":[[5612,11]]}},"keywords":{}}],["实现tostring()方法",{"_index":2181,"title":{},"content":{"123":{"position":[[1711,15]]}},"keywords":{}}],["实现update()方法",{"_index":2237,"title":{},"content":{"123":{"position":[[3914,13]]},"125":{"position":[[3507,13]]}},"keywords":{}}],["实现删除数据",{"_index":1869,"title":{},"content":{"111":{"position":[[3435,7]]}},"keywords":{}}],["实现哈希化时采用取余运算",{"_index":1208,"title":{},"content":{"79":{"position":[[282,13]]}},"keywords":{}}],["实现思路",{"_index":1252,"title":{},"content":{"82":{"position":[[312,5],[1238,5],[1715,5],[2777,5],[4377,5]]},"111":{"position":[[1360,5],[1680,4],[3443,5]]}},"keywords":{}}],["实现思路：与先序遍历原理相同，只不过是遍历的顺序不一样了",{"_index":2031,"title":{},"content":{"114":{"position":[[0,29]]},"115":{"position":[[0,29]]}},"keywords":{}}],["实现扩容或压缩后的哈希表容量为质数",{"_index":1390,"title":{},"content":{"82":{"position":[[4358,18]]}},"keywords":{}}],["实现查找特定值",{"_index":1853,"title":{},"content":{"111":{"position":[[2728,8]]}},"keywords":{}}],["实现浏览器的回退和前进功能",{"_index":729,"title":{},"content":{"49":{"position":[[81,13]]}},"keywords":{}}],["实际上，在数学的概念上，树是图的一种。我们知道树可以用来模拟很多现实的数据结构，比如：家谱/公司组织架构等等",{"_index":859,"title":{},"content":{"59":{"position":[[353,55]]}},"keywords":{}}],["实际应用（击鼓传花",{"_index":505,"title":{"40":{"position":[[0,11]]}},"content":{},"keywords":{}}],["实际应用（十进制转二进制",{"_index":821,"title":{"54":{"position":[[0,14]]}},"content":{},"keywords":{}}],["对交通流量建模",{"_index":916,"title":{},"content":{"62":{"position":[[0,7]]}},"keywords":{}}],["对哈希表进行扩容操作",{"_index":1218,"title":{},"content":{"80":{"position":[[161,11]]}},"keywords":{}}],["对应的",{"_index":1334,"title":{},"content":{"82":{"position":[[2637,3]]}},"keywords":{}}],["对应这个人，直接从队列中删除",{"_index":530,"title":{},"content":{"40":{"position":[[519,14]]}},"keywords":{}}],["对最终数据插入的数组进行整个结构的封装，得到的就是哈希表",{"_index":1077,"title":{},"content":{"73":{"position":[[88,29]]}},"keywords":{}}],["对象",{"_index":515,"title":{},"content":{"40":{"position":[[174,2]]},"44":{"position":[[457,2]]}},"keywords":{}}],["对象默认的",{"_index":2139,"title":{},"content":{"123":{"position":[[673,5]]},"125":{"position":[[768,5]]}},"keywords":{}}],["对飞机航线建模",{"_index":918,"title":{},"content":{"62":{"position":[[86,7]]}},"keywords":{}}],["封装的哈希表的数据结构模型",{"_index":1237,"title":{},"content":{"82":{"position":[[8,13]]}},"keywords":{}}],["封装集合",{"_index":1437,"title":{"87":{"position":[[0,5]]}},"content":{},"keywords":{}}],["将其顺时针旋转",{"_index":1622,"title":{},"content":{"101":{"position":[[20,7]]}},"keywords":{}}],["将初始的无序数组抽象为一棵树，图中的节点个数为6，所以4,5,6节点为叶节点，1,2,3节点为非叶节点，所以要对1",{"_index":296,"title":{},"content":{"24":{"position":[[150,57]]}},"keywords":{}}],["将大数字转化成数组范围内下标的过程，称之为哈希化",{"_index":1074,"title":{},"content":{"73":{"position":[[4,25]]}},"keywords":{}}],["将字典所包含的所有数值以数组形式返回",{"_index":365,"title":{},"content":{"32":{"position":[[224,19]]}},"keywords":{}}],["将字典所包含的所有键名以数组形式返回。valu",{"_index":364,"title":{},"content":{"32":{"position":[[196,27]]}},"keywords":{}}],["将栈结构的内容以字符串的形式返回",{"_index":801,"title":{},"content":{"52":{"position":[[178,17]]}},"keywords":{}}],["将这个字典中的所有元素全部删除。size",{"_index":360,"title":{},"content":{"32":{"position":[[136,22]]}},"keywords":{}}],["将队列中元素以字符串形式返回",{"_index":655,"title":{},"content":{"44":{"position":[[1316,14]]}},"keywords":{}}],["将队列中的元素以字符串形式返回",{"_index":485,"title":{},"content":{"39":{"position":[[393,15]]}},"keywords":{}}],["将队列中的内容，转成字符串形式",{"_index":468,"title":{},"content":{"38":{"position":[[247,16]]}},"keywords":{}}],["小一点点的节点，即",{"_index":1968,"title":{},"content":{"111":{"position":[[6649,9]]}},"keywords":{}}],["小一点点的节点，称为",{"_index":1975,"title":{},"content":{"111":{"position":[[6771,10]]}},"keywords":{}}],["小于，往左查找",{"_index":1885,"title":{},"content":{"111":{"position":[[3782,7],[8028,7]]}},"keywords":{}}],["就会变成深度过大的搜索二叉树，会严重影响二叉搜索树的性能",{"_index":1713,"title":{},"content":{"109":{"position":[[207,29]]}},"keywords":{}}],["就向右查找，直到找到或查找到",{"_index":1857,"title":{},"content":{"111":{"position":[[2833,14]]}},"keywords":{}}],["就指向这个空闲位置，如下图所示，那么现在判断队列是否为满的条件就是",{"_index":598,"title":{},"content":{"43":{"position":[[331,34]]}},"keywords":{}}],["就是",{"_index":1584,"title":{},"content":{"97":{"position":[[190,2]]}},"keywords":{}}],["就是一个边。注意：这里的边不要叫做路径，路径有其他的概念，后面会区分",{"_index":874,"title":{},"content":{"60":{"position":[[244,35]]}},"keywords":{}}],["就是一个集合类，这里我们重新封装一个",{"_index":1425,"title":{},"content":{"85":{"position":[[11,18]]}},"keywords":{}}],["就是一条路径。简单路径",{"_index":892,"title":{},"content":{"60":{"position":[[453,12]]}},"keywords":{}}],["就是先递归后序遍历左子树，再递归后序遍历右子树，最后输出根结点的值",{"_index":2049,"title":{},"content":{"115":{"position":[[63,35]]}},"keywords":{}}],["就是节点",{"_index":1977,"title":{},"content":{"111":{"position":[[6807,4],[6864,4]]}},"keywords":{}}],["就知道要继续查找",{"_index":1124,"title":{},"content":{"76":{"position":[[537,9]]}},"keywords":{}}],["层的最大节点数为（第i层最多有多少个节点）：2^(i",{"_index":1655,"title":{},"content":{"105":{"position":[[10,26]]}},"keywords":{}}],["层至多拥有",{"_index":1634,"title":{},"content":{"102":{"position":[[160,5]]}},"keywords":{}}],["层，其他任一节点的层数是其父节点的层数加",{"_index":1591,"title":{},"content":{"97":{"position":[[342,20]]}},"keywords":{}}],["属性外，还应定义一个节点内部类，里面包含每个节点中的",{"_index":1798,"title":{},"content":{"111":{"position":[[1199,26]]}},"keywords":{}}],["属性指向链表的第一个节点",{"_index":2119,"title":{},"content":{"123":{"position":[[218,13]]}},"keywords":{}}],["属性类似。key",{"_index":363,"title":{},"content":{"32":{"position":[[184,11]]}},"keywords":{}}],["属性类似。tostr",{"_index":467,"title":{},"content":{"38":{"position":[[231,15]]},"52":{"position":[[162,15]]},"123":{"position":[[621,15]]},"125":{"position":[[716,15]]}},"keywords":{}}],["属性类似。valu",{"_index":1435,"title":{},"content":{"86":{"position":[[133,13]]}},"keywords":{}}],["属性，该属性指向末尾的节点",{"_index":2314,"title":{},"content":{"125":{"position":[[983,14]]}},"keywords":{}}],["属性，该属性用于指向上一个节点。doublylinkedlist",{"_index":2311,"title":{},"content":{"125":{"position":[[919,32]]}},"keywords":{}}],["左子树中比",{"_index":1967,"title":{},"content":{"111":{"position":[[6635,5]]}},"keywords":{}}],["左子树中的最大值；current",{"_index":1969,"title":{},"content":{"111":{"position":[[6667,16]]}},"keywords":{}}],["左子树（所有值小于根节点）：每个左子节点必须小于其父节点，右子节点必须大于其父节点且小于整个树的根节点",{"_index":1750,"title":{},"content":{"111":{"position":[[250,51]]}},"keywords":{}}],["巧妙之处",{"_index":2324,"title":{},"content":{"125":{"position":[[1478,4],[4664,4]]}},"keywords":{}}],["巧妙之处，让上一节点的",{"_index":2259,"title":{},"content":{"123":{"position":[[5017,11],[8705,11]]}},"keywords":{}}],["巧妙之处：相处腾出",{"_index":2331,"title":{},"content":{"125":{"position":[[1936,9],[5107,9]]}},"keywords":{}}],["差集",{"_index":1499,"title":{},"content":{"91":{"position":[[16,2]]},"93":{"position":[[1253,2]]}},"keywords":{}}],["差集的实现",{"_index":1497,"title":{"91":{"position":[[0,6]]}},"content":{},"keywords":{}}],["已经有重复判断",{"_index":1486,"title":{},"content":{"89":{"position":[[294,7]]},"93":{"position":[[950,7]]}},"keywords":{}}],["带权图",{"_index":913,"title":{},"content":{"61":{"position":[[79,3]]}},"keywords":{}}],["带权图表示边有一定的权重这里的权重可以是任意你希望表示的数据：比如距离或者花费的时间或者票价。我们来看一张有向和带权的图",{"_index":914,"title":{},"content":{"61":{"position":[[83,60]]}},"keywords":{}}],["带权路径长度",{"_index":1732,"title":{},"content":{"110":{"position":[[10,7]]}},"keywords":{}}],["常见应用场景",{"_index":601,"title":{},"content":{"43":{"position":[[397,6]]}},"keywords":{}}],["常见的二叉树存储方式为数组和链表",{"_index":2060,"title":{},"content":{"116":{"position":[[0,17]]}},"keywords":{}}],["常见的平衡树",{"_index":1723,"title":{},"content":{"109":{"position":[[502,6]]}},"keywords":{}}],["常见的情况是",{"_index":1337,"title":{},"content":{"82":{"position":[[2687,6]]}},"keywords":{}}],["常见链表分类",{"_index":2107,"title":{},"content":{"122":{"position":[[0,7]]}},"keywords":{}}],["平衡二叉树",{"_index":1703,"title":{"109":{"position":[[0,6]]}},"content":{"109":{"position":[[0,5]]}},"keywords":{}}],["平衡二叉树的常用实现方法有",{"_index":1707,"title":{},"content":{"109":{"position":[[79,13]]}},"keywords":{}}],["并且",{"_index":592,"title":{},"content":{"43":{"position":[[230,2],[262,2]]}},"keywords":{}}],["并且，最后一层的",{"_index":1690,"title":{},"content":{"108":{"position":[[59,8]]}},"keywords":{}}],["并集的实现",{"_index":1472,"title":{"89":{"position":[[0,6]]}},"content":{},"keywords":{}}],["并集：对于给定的两个集合，返回一个包含两个集合中所有元素的新集合。交集：对于给定的两个集合，返回一个包含两个集合中共有元素的新集合。差集：对于给定的两个集合，返回一个包含所有存在于第一个集合且不存在于第二个集合的元素的新集合。子集：验证一个给定集合是否是另一个集合的子集",{"_index":1471,"title":{},"content":{"88":{"position":[[0,136]]}},"keywords":{}}],["广度优先",{"_index":973,"title":{},"content":{"69":{"position":[[6,4],[103,4],[202,4]]}},"keywords":{}}],["广度优先搜索就像水面上的波纹一样一层一层向外扩展，如下图所示",{"_index":958,"title":{},"content":{"67":{"position":[[93,31]]}},"keywords":{}}],["广度优先搜索的具体实现方式用到了之前所学过的线性数据结构——队列",{"_index":959,"title":{},"content":{"67":{"position":[[126,32]]}},"keywords":{}}],["广度优先遍历（bf",{"_index":953,"title":{"67":{"position":[[0,12]]}},"content":{},"keywords":{}}],["度",{"_index":880,"title":{},"content":{"60":{"position":[[342,1]]}},"keywords":{}}],["建堆",{"_index":292,"title":{"24":{"position":[[0,3]]}},"content":{},"keywords":{}}],["开始向后一个一个来查找合适的位置来放置",{"_index":1102,"title":{},"content":{"76":{"position":[[162,19]]}},"keywords":{}}],["开始探测：x+1^2^、x+2^2^、x+3^3",{"_index":1143,"title":{},"content":{"76":{"position":[[923,25]]}},"keywords":{}}],["开始，那么线性探测就是按照下标值：x+1、x+2、x+3",{"_index":1140,"title":{},"content":{"76":{"position":[[864,28]]}},"keywords":{}}],["开放地址法",{"_index":1088,"title":{"76":{"position":[[0,6]]}},"content":{},"keywords":{}}],["开放地址法的主要工作方式是，哈希化之后，寻找空白的单元格来放置冲突的数据项",{"_index":1089,"title":{},"content":{"76":{"position":[[0,38]]}},"keywords":{}}],["异常。linux",{"_index":611,"title":{},"content":{"43":{"position":[[813,8]]}},"keywords":{}}],["弹出，然后压入",{"_index":740,"title":{},"content":{"49":{"position":[[236,7]]}},"keywords":{}}],["弹出，然后压入到",{"_index":745,"title":{},"content":{"49":{"position":[[290,8]]}},"keywords":{}}],["当不确定循环次数时，使用",{"_index":826,"title":{},"content":{"54":{"position":[[97,12]]}},"keywords":{}}],["当删除",{"_index":1118,"title":{},"content":{"76":{"position":[[391,3]]}},"keywords":{}}],["当前存放的元素个数",{"_index":1244,"title":{},"content":{"82":{"position":[[159,9],[5187,9]]}},"keywords":{}}],["当前栈的顺序为：a",{"_index":714,"title":{},"content":{"48":{"position":[[104,9]]}},"keywords":{}}],["当前节点初始化为",{"_index":2207,"title":{},"content":{"123":{"position":[[2540,8],[6947,8]]}},"keywords":{}}],["当我们只关心所有数据中的最大值或者最小值，存在多次获取最大值或者最小值，多次插入或删除数据时，就可以使用堆",{"_index":238,"title":{},"content":{"16":{"position":[[0,54]]}},"keywords":{}}],["当我们我们要处理的数据只涉及在一端插入和删除数据，并且满足",{"_index":727,"title":{},"content":{"49":{"position":[[0,29]]}},"keywords":{}}],["当我们需要按照一定顺序来处理数据的时候可以考虑使用队列这个数据结构",{"_index":602,"title":{},"content":{"43":{"position":[[404,34]]}},"keywords":{}}],["当插入",{"_index":1093,"title":{},"content":{"76":{"position":[[85,3]]}},"keywords":{}}],["当插入一组有序数据：6",{"_index":1712,"title":{},"content":{"109":{"position":[[187,11]]}},"keywords":{}}],["当插入数据分布性较大的一组数据时，比如：13",{"_index":1146,"title":{},"content":{"76":{"position":[[989,22]]}},"keywords":{}}],["当查询",{"_index":1106,"title":{},"content":{"76":{"position":[[225,3]]}},"keywords":{}}],["当装填因子",{"_index":1373,"title":{},"content":{"82":{"position":[[3578,5]]}},"keywords":{}}],["当该叶子节点不为根节点时也有两种情况，如下图所示",{"_index":1900,"title":{},"content":{"111":{"position":[[4201,24]]}},"keywords":{}}],["当该叶子节点为根节点时，如下图所示，此时",{"_index":1896,"title":{},"content":{"111":{"position":[[4120,20]]}},"keywords":{}}],["当链表中一个节点也没有的时候，head",{"_index":2121,"title":{},"content":{"123":{"position":[[251,19]]}},"keywords":{}}],["往双向链表尾部追加一个新的元素",{"_index":2319,"title":{},"content":{"125":{"position":[[1256,15],[4442,15]]}},"keywords":{}}],["往右边查找插入",{"_index":1841,"title":{},"content":{"111":{"position":[[2229,7]]}},"keywords":{}}],["往哈希表里添加数据",{"_index":1262,"title":{},"content":{"82":{"position":[[495,9],[5439,9]]}},"keywords":{}}],["往左边查找插入",{"_index":1838,"title":{},"content":{"111":{"position":[[2120,7]]}},"keywords":{}}],["往链表尾部追加数据",{"_index":2154,"title":{},"content":{"123":{"position":[[980,9],[5975,9]]}},"keywords":{}}],["往集合中添加",{"_index":1443,"title":{},"content":{"87":{"position":[[179,6]]},"93":{"position":[[194,6]]}},"keywords":{}}],["循序依次找最后一个节点，即节点的",{"_index":2168,"title":{},"content":{"123":{"position":[[1229,16],[6224,16]]}},"keywords":{}}],["循环",{"_index":827,"title":{},"content":{"54":{"position":[[116,2]]}},"keywords":{}}],["循环使",{"_index":2178,"title":{},"content":{"123":{"position":[[1631,3]]}},"keywords":{}}],["循环实现",{"_index":1867,"title":{},"content":{"111":{"position":[[3232,4]]}},"keywords":{}}],["循环查找",{"_index":2004,"title":{},"content":{"111":{"position":[[7520,4],[9782,4]]}},"keywords":{}}],["循环查找到要删除的节点",{"_index":1881,"title":{},"content":{"111":{"position":[[3667,11],[7913,11]]}},"keywords":{}}],["循环链表",{"_index":2276,"title":{"124":{"position":[[0,5]]}},"content":{"124":{"position":[[0,4]]}},"keywords":{}}],["循环队列",{"_index":579,"title":{"43":{"position":[[0,5]]}},"content":{},"keywords":{}}],["循环队列可以解决顺序队列的",{"_index":580,"title":{},"content":{"43":{"position":[[0,13]]}},"keywords":{}}],["必须要要知道插入元素的位置",{"_index":2082,"title":{},"content":{"120":{"position":[[358,13]]}},"keywords":{}}],["快速的计算；均匀的分布",{"_index":1181,"title":{},"content":{"77":{"position":[[81,12]]}},"keywords":{}}],["快速计算",{"_index":1182,"title":{"78":{"position":[[0,5]]}},"content":{},"keywords":{}}],["性能高的哈希函数应具备以下两个优点",{"_index":1180,"title":{},"content":{"77":{"position":[[62,18]]}},"keywords":{}}],["总数据项",{"_index":1168,"title":{},"content":{"76":{"position":[[1608,4]]}},"keywords":{}}],["总的来说：每种数据结构都有自己特定的应用场景",{"_index":1560,"title":{},"content":{"96":{"position":[[376,23]]}},"keywords":{}}],["总结",{"_index":2057,"title":{},"content":{"115":{"position":[[568,3]]}},"keywords":{}}],["总结：二叉搜索树的特点主要是较小的值总是保存在左节点上，相对较大的值总是保存在右节点上。这种特点使得二叉搜索树的查询效率非常高，这也就是二叉搜索树中“搜索”的来源",{"_index":1755,"title":{},"content":{"111":{"position":[[399,82]]}},"keywords":{}}],["总结：链地址法解决冲突的办法是每个数组单元中存储的不再是单个数据，而是一条链条，这条链条常使用的数据结构为数组或链表，两种数据结构查找的效率相当（因为链条的元素一般不会太多",{"_index":1087,"title":{},"content":{"75":{"position":[[168,88]]}},"keywords":{}}],["情况",{"_index":1822,"title":{},"content":{"111":{"position":[[1759,2],[1921,2],[4635,2],[4959,2]]}},"keywords":{}}],["我们上面的图就是一张无权图（边没有携带权重）我们上面的图中的边是没有任何意义的，不能收",{"_index":910,"title":{},"content":{"61":{"position":[[4,43]]}},"keywords":{}}],["我们只需要使用两个栈(stack1",{"_index":730,"title":{},"content":{"49":{"position":[[95,17]]}},"keywords":{}}],["我们在学习树的时候，树有很多的其他术语，了解这些术语有助于我们更深层次的理解图。但是图的术语其实非常多，如果你找一本专门讲图的各个方面的书籍，会发现只是术语就可以占据一个章节。这里，这里介绍几个比较常见的术语，某些术语后面用到的时候，再了解，没有用到的，不做赘述。下面这是个抽象出来的图顶点",{"_index":870,"title":{},"content":{"60":{"position":[[0,145]]}},"keywords":{}}],["我们平时使用的大于",{"_index":1053,"title":{},"content":{"72":{"position":[[278,9]]}},"keywords":{}}],["我们通常会将单词转化成大数字，把大数字进行哈希化的代码实现放在一个函数中，该函数就称为哈希函数",{"_index":1076,"title":{},"content":{"73":{"position":[[35,48]]}},"keywords":{}}],["或大于链表长度",{"_index":2197,"title":{},"content":{"123":{"position":[[2180,7],[6587,7]]}},"keywords":{}}],["或者是",{"_index":2033,"title":{},"content":{"114":{"position":[[63,3]]}},"keywords":{}}],["所以不是二叉树",{"_index":1754,"title":{},"content":{"111":{"position":[[390,8]]}},"keywords":{}}],["所以采用，把",{"_index":532,"title":{},"content":{"40":{"position":[[567,6]]}},"keywords":{}}],["所以，二叉搜索树中除了定义",{"_index":1796,"title":{},"content":{"111":{"position":[[1180,13]]}},"keywords":{}}],["所在的节点",{"_index":2266,"title":{},"content":{"123":{"position":[[5297,6]]}},"keywords":{}}],["所在的节点（继承单向链表",{"_index":2369,"title":{},"content":{"125":{"position":[[6937,13]]}},"keywords":{}}],["打印队列：计算机打印多个文件的时候，需要排队打印。线程队列：当开启多线程时，当新开启的线程所需的资源不足时就先放入线程队列，等待",{"_index":451,"title":{},"content":{"36":{"position":[[0,64]]}},"keywords":{}}],["执行完之后，会弹出栈被释放，弹出栈的顺序为",{"_index":719,"title":{},"content":{"48":{"position":[[142,21]]}},"keywords":{}}],["执行时",{"_index":711,"title":{},"content":{"48":{"position":[[70,3]]}},"keywords":{}}],["执行时也会被压入栈。所以",{"_index":713,"title":{},"content":{"48":{"position":[[91,12]]}},"keywords":{}}],["执行的过程中会将",{"_index":709,"title":{},"content":{"48":{"position":[[50,8]]}},"keywords":{}}],["找出关键路径，关键路径的权值和即为施工的最短时间，修改则可以延长或缩短工期（注意找路径的时候每个顶点只能使用一次",{"_index":1000,"title":{},"content":{"69":{"position":[[698,57]]}},"keywords":{}}],["找到最后都没找到相等的节点，返回",{"_index":1889,"title":{},"content":{"111":{"position":[[3952,16],[8198,16]]}},"keywords":{}}],["找到要插入位置的节点",{"_index":2337,"title":{},"content":{"125":{"position":[[2294,10],[5465,10]]}},"keywords":{}}],["把新元素放到栈顶元素的上面",{"_index":692,"title":{},"content":{"47":{"position":[[275,13]]}},"keywords":{}}],["指向",{"_index":2202,"title":{},"content":{"123":{"position":[[2366,2],[6773,2]]},"125":{"position":[[341,2],[367,2]]},"126":{"position":[[20,2]]}},"keywords":{}}],["指向别人的数量（从该顶点出去的边的条数",{"_index":905,"title":{},"content":{"60":{"position":[[687,20]]}},"keywords":{}}],["指向到当前的节点的",{"_index":2260,"title":{},"content":{"123":{"position":[[5034,9],[8722,9]]}},"keywords":{}}],["指向前一个节点、next",{"_index":2292,"title":{},"content":{"125":{"position":[[303,12]]}},"keywords":{}}],["指向前一个节点，一个",{"_index":2282,"title":{},"content":{"125":{"position":[[20,10]]}},"keywords":{}}],["指向原来的",{"_index":1345,"title":{},"content":{"82":{"position":[[2807,5]]}},"keywords":{}}],["指向后一个节点",{"_index":2283,"title":{},"content":{"125":{"position":[[36,8]]}},"keywords":{}}],["指向后一个节点。双向链表的第一个节点的",{"_index":2293,"title":{},"content":{"125":{"position":[[316,19]]}},"keywords":{}}],["指向后面的节点。因此，链表这种数据结构通常在物理内存上是不连续的。我们习惯性地把第一个结点叫作头结点，链表通常有一个不保存任何值的",{"_index":2113,"title":{},"content":{"123":{"position":[[31,65]]}},"keywords":{}}],["指向它。最后，将",{"_index":1347,"title":{},"content":{"82":{"position":[[2853,8]]}},"keywords":{}}],["指向新节点",{"_index":2170,"title":{},"content":{"123":{"position":[[1346,5],[6341,5]]}},"keywords":{}}],["指向最后一个节点，最后通过",{"_index":2179,"title":{},"content":{"123":{"position":[[1647,13]]}},"keywords":{}}],["指向最后一个节点，构成一个环",{"_index":2392,"title":{},"content":{"126":{"position":[[42,15]]}},"keywords":{}}],["指向的新数组中",{"_index":1350,"title":{},"content":{"82":{"position":[[2915,8]]}},"keywords":{}}],["指向第一个节点",{"_index":2177,"title":{},"content":{"123":{"position":[[1613,8]]}},"keywords":{}}],["指向自己的数量（表示进入该顶点的边的条数",{"_index":907,"title":{},"content":{"60":{"position":[[711,21]]}},"keywords":{}}],["指向链表的第一个节点",{"_index":2149,"title":{},"content":{"123":{"position":[[830,10],[5802,10]]}},"keywords":{}}],["指针指向对头元素，rear",{"_index":574,"title":{},"content":{"42":{"position":[[317,13]]}},"keywords":{}}],["指针指向数组下标为",{"_index":584,"title":{},"content":{"43":{"position":[[85,9]]}},"keywords":{}}],["指针指向最后一个节点。每一个节点由三部分组成：item",{"_index":2290,"title":{},"content":{"125":{"position":[[265,27]]}},"keywords":{}}],["指针指向第一个节点，而且有",{"_index":2288,"title":{},"content":{"125":{"position":[[246,13]]}},"keywords":{}}],["指针指向队列最后一个元素的下一个位置，这样当",{"_index":575,"title":{},"content":{"42":{"position":[[331,22]]}},"keywords":{}}],["指针移动到数组之外（越界",{"_index":572,"title":{},"content":{"42":{"position":[[257,14]]}},"keywords":{}}],["按顺序进栈，问下列哪一个不是合法的出栈顺序",{"_index":752,"title":{},"content":{"50":{"position":[[23,22]]}},"keywords":{}}],["排序",{"_index":302,"title":{"25":{"position":[[0,3]]}},"content":{},"keywords":{}}],["排队，比如在电影院，商场，甚至是厕所排队。优先排队的人，优先处理",{"_index":441,"title":{},"content":{"35":{"position":[[259,33]]}},"keywords":{}}],["提示",{"_index":38,"title":{},"content":{"1":{"position":[[62,2]]}},"keywords":{}}],["插入",{"_index":1013,"title":{},"content":{"71":{"position":[[86,2]]}},"keywords":{}}],["插入元素",{"_index":264,"title":{"20":{"position":[[0,5]]}},"content":{"19":{"position":[[15,4]]},"22":{"position":[[0,4]]},"125":{"position":[[1616,4],[4787,4]]}},"keywords":{}}],["插入元素，作为一个新入职的员工，初来乍到，这个员工需要从基层做起",{"_index":267,"title":{},"content":{"20":{"position":[[0,32]]}},"keywords":{}}],["插入删除：o（1",{"_index":447,"title":{},"content":{"35":{"position":[[354,11]]},"47":{"position":[[405,11]]},"120":{"position":[[346,11]]}},"keywords":{}}],["插入或修改操作。get(key",{"_index":1211,"title":{},"content":{"80":{"position":[[16,16]]}},"keywords":{}}],["插入数据",{"_index":1812,"title":{},"content":{"111":{"position":[[1514,4]]}},"keywords":{}}],["操作。无论多少数据，插入和删除值都只需接近常量的时间，即",{"_index":1016,"title":{},"content":{"71":{"position":[[95,28]]}},"keywords":{}}],["数中有一个称为根（root）的特殊节点，用",{"_index":1566,"title":{},"content":{"96":{"position":[[478,21]]}},"keywords":{}}],["数字之前的人重新放入到队尾（即把队头删除的元素，重新加入到队列中",{"_index":528,"title":{},"content":{"40":{"position":[[441,33]]}},"keywords":{}}],["数据的逻辑结构和物理结构是数据结构的两个密切相关的方面，同一逻辑结构可以对应不同的存储结构。算法的设计取决于数据的逻辑结构，而算法的实现依赖于指定的存储结构",{"_index":320,"title":{},"content":{"27":{"position":[[209,79]]}},"keywords":{}}],["数据结构(data",{"_index":318,"title":{},"content":{"27":{"position":[[7,9]]}},"keywords":{}}],["数据结构的研究内容是构造复杂软件系统的基础，它的核心技术是分解与抽象。通过分解可以划分出数据的",{"_index":321,"title":{},"content":{"27":{"position":[[289,47]]}},"keywords":{}}],["数组",{"_index":1553,"title":{},"content":{"96":{"position":[[0,3]]},"121":{"position":[[124,2]]}},"keywords":{}}],["数组、栈、和队列的比较图解",{"_index":676,"title":{"45":{"position":[[0,14]]}},"content":{},"keywords":{}}],["数组、链表、哈希表和树的对比",{"_index":1552,"title":{"96":{"position":[[0,15]]}},"content":{},"keywords":{}}],["数组内容",{"_index":1361,"title":{},"content":{"82":{"position":[[3095,4],[7073,4]]}},"keywords":{}}],["数组形式：[19，&quot;tom&quot",{"_index":327,"title":{},"content":{"29":{"position":[[31,25]]}},"keywords":{}}],["数组支持随机访问，而链表不支持。数组使用的是连续内存空间对",{"_index":2084,"title":{},"content":{"121":{"position":[[0,29]]}},"keywords":{}}],["数组的创建需要申请一段连续的内存空间(一整块内存)，并且大小是固定的，当前数组不能满足容量需求时，需要扩容",{"_index":2090,"title":{},"content":{"121":{"position":[[203,54]]}},"keywords":{}}],["数组缺点",{"_index":2089,"title":{},"content":{"121":{"position":[[197,5]]}},"keywords":{}}],["数组（链表）就会越来越长，这就会造成哈希表效率的降低",{"_index":1335,"title":{},"content":{"82":{"position":[[2648,27]]}},"keywords":{}}],["整除，不能被",{"_index":1381,"title":{},"content":{"82":{"position":[[3887,6]]}},"keywords":{}}],["文件，内容如下",{"_index":162,"title":{},"content":{"13":{"position":[[75,7]]}},"keywords":{}}],["新增数据",{"_index":1286,"title":{},"content":{"82":{"position":[[1008,4],[5953,4]]}},"keywords":{}}],["新插入节点的位置",{"_index":2192,"title":{},"content":{"123":{"position":[[2078,8],[6485,8]]}},"keywords":{}}],["方式",{"_index":1950,"title":{},"content":{"111":{"position":[[6150,2],[6281,2],[6415,2]]}},"keywords":{}}],["方案一：数字相加",{"_index":1041,"title":{},"content":{"72":{"position":[[120,9]]}},"keywords":{}}],["方案二：幂的连乘",{"_index":1052,"title":{},"content":{"72":{"position":[[268,9]]}},"keywords":{}}],["方法",{"_index":1405,"title":{},"content":{"82":{"position":[[4584,3]]},"111":{"position":[[2002,2]]},"123":{"position":[[1937,2],[2949,2],[3427,2],[3788,2],[4316,2],[5168,2],[5369,2],[5558,2],[5682,2]]}},"keywords":{}}],["方法一：针对质数的特点：只能被",{"_index":1380,"title":{},"content":{"82":{"position":[[3860,15]]}},"keywords":{}}],["方法中关于数组扩容的相关操作",{"_index":1411,"title":{},"content":{"82":{"position":[[4735,15]]}},"keywords":{}}],["方法中添加如下代码",{"_index":1412,"title":{},"content":{"82":{"position":[[4757,10],[4911,10]]}},"keywords":{}}],["方法二：只需要遍历",{"_index":1386,"title":{},"content":{"82":{"position":[[4109,9]]}},"keywords":{}}],["方法和删除元素的",{"_index":1410,"title":{},"content":{"82":{"position":[[4719,8]]}},"keywords":{}}],["方法和获取质数的",{"_index":1403,"title":{},"content":{"82":{"position":[[4566,8]]}},"keywords":{}}],["方法进行删除",{"_index":537,"title":{},"content":{"40":{"position":[[655,6]]}},"keywords":{}}],["方法非常类似）。isempti",{"_index":462,"title":{},"content":{"38":{"position":[[150,17]]}},"keywords":{}}],["方法）中添加如下代码，判断是否需要调用扩容函数进行压缩",{"_index":1376,"title":{},"content":{"82":{"position":[[3636,28]]}},"keywords":{}}],["方法）中添加如下代码，判断是否需要调用扩容函数进行扩容",{"_index":1372,"title":{},"content":{"82":{"position":[[3416,28]]}},"keywords":{}}],["方法，既可以实现哈希表的扩容，也可以实现哈希表容量的压缩",{"_index":1357,"title":{},"content":{"82":{"position":[[3009,29]]}},"keywords":{}}],["方法，让其只输出元素的值",{"_index":2140,"title":{},"content":{"123":{"position":[[688,13]]}},"keywords":{}}],["方法，让其只输出元素的值。forwardstr",{"_index":2302,"title":{},"content":{"125":{"position":[[783,28]]}},"keywords":{}}],["无右子节点成功插入",{"_index":1834,"title":{},"content":{"111":{"position":[[2012,9]]}},"keywords":{}}],["无右子节点时，直接插入：情况",{"_index":1831,"title":{},"content":{"111":{"position":[[1933,14]]}},"keywords":{}}],["无向图",{"_index":896,"title":{},"content":{"60":{"position":[[542,3]]}},"keywords":{}}],["无左子节点时，直接插入：情况",{"_index":1824,"title":{},"content":{"111":{"position":[[1771,14]]}},"keywords":{}}],["无权图",{"_index":909,"title":{},"content":{"61":{"position":[[0,3]]}},"keywords":{}}],["无权图和带权图",{"_index":908,"title":{"61":{"position":[[0,8]]}},"content":{},"keywords":{}}],["无法通过下标值直接访问元素，需要从头开始一个个访问，直到找到对应的元素",{"_index":2104,"title":{},"content":{"121":{"position":[[586,36]]}},"keywords":{}}],["既可以从头遍历到尾，也可以从尾遍历到头。链表相连的过程是双向的。实现原理是一个节点既有向前连接的引用，也有一个向后连接的引用。双向链表可以有效的解决单向链表存在的问题。双向链表缺点",{"_index":2284,"title":{},"content":{"125":{"position":[[45,91]]},"128":{"position":[[135,91]]}},"keywords":{}}],["时",{"_index":1095,"title":{},"content":{"76":{"position":[[92,2],[232,2],[398,2]]},"123":{"position":[[1258,1],[6253,1]]}},"keywords":{}}],["时不会跳过空位置去插入其他位置",{"_index":1117,"title":{},"content":{"76":{"position":[[374,16]]}},"keywords":{}}],["时将该元素删除，直至数组剩下一个元素",{"_index":510,"title":{},"content":{"40":{"position":[[70,19]]}},"keywords":{}}],["时就会发现，连续的单元",{"_index":1130,"title":{},"content":{"76":{"position":[[693,11]]}},"keywords":{}}],["时，即只有",{"_index":2161,"title":{},"content":{"123":{"position":[[1100,5],[6095,5]]}},"keywords":{}}],["时，在最后面添加新节点",{"_index":2165,"title":{},"content":{"123":{"position":[[1157,11],[6152,11]]}},"keywords":{}}],["时，如果原来不存在该",{"_index":1249,"title":{},"content":{"82":{"position":[[263,10]]}},"keywords":{}}],["时，对哈希表容量进行压缩。在哈希表中的删除方法（remov",{"_index":1375,"title":{},"content":{"82":{"position":[[3605,30]]}},"keywords":{}}],["时，对哈希表进行扩容。在哈希表中的添加方法（push",{"_index":1371,"title":{},"content":{"82":{"position":[[3389,26]]}},"keywords":{}}],["时，将其删除",{"_index":527,"title":{},"content":{"40":{"position":[[382,6]]}},"keywords":{}}],["时，此队列不是还剩一个元素，而是空队列。——from",{"_index":577,"title":{},"content":{"42":{"position":[[368,26]]}},"keywords":{}}],["时，称为空树。对于任意一棵非空树（n",{"_index":1564,"title":{},"content":{"96":{"position":[[442,18]]}},"keywords":{}}],["时，重新加入到队尾",{"_index":526,"title":{},"content":{"40":{"position":[[360,9]]}},"keywords":{}}],["是一条简单路径。回路：第一个顶点和最后一个顶点相同的路径称为回路。比如",{"_index":895,"title":{},"content":{"60":{"position":[[493,35]]}},"keywords":{}}],["是一棵二叉排序树，且具有以下性质",{"_index":1704,"title":{},"content":{"109":{"position":[[6,17]]}},"keywords":{}}],["是不允许重复的，不能放置相同的",{"_index":1022,"title":{},"content":{"71":{"position":[[272,15]]}},"keywords":{}}],["是不相邻的",{"_index":879,"title":{},"content":{"60":{"position":[[335,6]]}},"keywords":{}}],["是不能重复且无序的，而",{"_index":338,"title":{},"content":{"29":{"position":[[192,11]]}},"keywords":{}}],["是否为",{"_index":1299,"title":{},"content":{"82":{"position":[[1325,3],[1802,3]]},"111":{"position":[[3550,3]]}},"keywords":{}}],["是否等于传入的",{"_index":1304,"title":{},"content":{"82":{"position":[[1377,7]]}},"keywords":{}}],["是栈的一个重要的特点，表示就是后进入的元素，第一个弹出栈空间。类似于弹夹，后装入的子弹往往是最先被使用的。仅允许在表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作",{"_index":689,"title":{},"content":{"47":{"position":[[156,105]]}},"keywords":{}}],["是相邻的。0",{"_index":878,"title":{},"content":{"60":{"position":[[324,6]]}},"keywords":{}}],["是相邻的，0",{"_index":877,"title":{},"content":{"60":{"position":[[313,6]]}},"keywords":{}}],["是节点",{"_index":1581,"title":{},"content":{"97":{"position":[[146,3]]}},"keywords":{}}],["是质数，且小于数组的容量；例如：stepsiz",{"_index":1161,"title":{},"content":{"76":{"position":[[1393,24]]}},"keywords":{}}],["是质数，停止循环，由此得到质数",{"_index":1400,"title":{},"content":{"82":{"position":[[4509,15]]}},"keywords":{}}],["显示生活中的图",{"_index":915,"title":{"62":{"position":[[0,8]]}},"content":{},"keywords":{}}],["更改",{"_index":213,"title":{},"content":{"14":{"position":[[457,2]]}},"keywords":{}}],["更新链表长度",{"_index":2214,"title":{},"content":{"123":{"position":[[2896,6],[7303,6]]}},"keywords":{}}],["最后一个节点的",{"_index":2169,"title":{},"content":{"123":{"position":[[1333,7],[6328,7]]},"126":{"position":[[7,7]]}},"keywords":{}}],["最后一层",{"_index":1688,"title":{},"content":{"108":{"position":[[35,4]]}},"keywords":{}}],["最后，重新启动项目",{"_index":193,"title":{},"content":{"13":{"position":[[618,9]]},"14":{"position":[[1091,9]]}},"keywords":{}}],["最坏情况",{"_index":446,"title":{},"content":{"35":{"position":[[349,4]]},"47":{"position":[[400,4]]}},"keywords":{}}],["最大堆",{"_index":252,"title":{},"content":{"17":{"position":[[4,3],[30,3]]}},"keywords":{}}],["最小堆。二者的区别在于节点的排序方式",{"_index":253,"title":{},"content":{"17":{"position":[[10,19]]}},"keywords":{}}],["最普通的表示方法",{"_index":1597,"title":{"99":{"position":[[0,9]]}},"content":{},"keywords":{}}],["有了编码系统后，将字母转化为数字也有很多种方案",{"_index":1040,"title":{},"content":{"72":{"position":[[95,24]]}},"keywords":{}}],["有些编程语言中称这种映射关系为字典，如",{"_index":341,"title":{},"content":{"30":{"position":[[0,19]]}},"keywords":{}}],["有六种情况",{"_index":1909,"title":{},"content":{"111":{"position":[[4586,6]]}},"keywords":{}}],["有右子节点时，依然递归调用",{"_index":1832,"title":{},"content":{"111":{"position":[[1957,13]]}},"keywords":{}}],["有向图",{"_index":900,"title":{},"content":{"60":{"position":[[623,3]]}},"keywords":{}}],["有向图表示的图中的边是有方向的。比如",{"_index":901,"title":{},"content":{"60":{"position":[[627,18]]}},"keywords":{}}],["有小伙伴可能会想到用有序数组，初始化一个有序数组时间复杂度是",{"_index":239,"title":{},"content":{"16":{"position":[[55,30]]}},"keywords":{}}],["有左子节点时，递归调用",{"_index":1826,"title":{},"content":{"111":{"position":[[1795,11]]}},"keywords":{}}],["有能力的人会逐渐升职加薪，是金子总会发光的",{"_index":269,"title":{},"content":{"20":{"position":[[48,24]]}},"keywords":{}}],["机智的小伙伴已经发现了，这其实是做了一次交换操作，将堆顶和末尾元素调换位置，从而将取出堆顶元素和堆化的第一步(将末尾元素放至根结点位置)进行合并",{"_index":307,"title":{},"content":{"25":{"position":[[225,73]]}},"keywords":{}}],["条件",{"_index":1742,"title":{},"content":{"111":{"position":[[81,2],[133,2],[185,2]]}},"keywords":{}}],["条边。一棵树不包含回路",{"_index":1517,"title":{},"content":{"95":{"position":[[62,12]]}},"keywords":{}}],["来赋值",{"_index":2333,"title":{},"content":{"125":{"position":[[1970,3],[5141,3]]}},"keywords":{}}],["来遍历其中的元素。通常情况下，哈希表中的",{"_index":1021,"title":{},"content":{"71":{"position":[[246,21]]}},"keywords":{}}],["查找",{"_index":1015,"title":{},"content":{"71":{"position":[[92,2]]}},"keywords":{}}],["查找二叉搜索树中是否有相同的key，存在返回",{"_index":1860,"title":{},"content":{"111":{"position":[[2894,22]]}},"keywords":{}}],["查找二叉搜索树当中的特定值效率也非常高。只需要从根节点开始将需要查找节点的",{"_index":1854,"title":{},"content":{"111":{"position":[[2737,37]]}},"keywords":{}}],["查找前驱时，则需要在",{"_index":1986,"title":{},"content":{"111":{"position":[[6950,10]]}},"keywords":{}}],["查找最大值和最小值",{"_index":1845,"title":{},"content":{"111":{"position":[[2351,9]]}},"keywords":{}}],["查找需要被删除的节点",{"_index":1982,"title":{},"content":{"111":{"position":[[6877,10]]}},"keywords":{}}],["查看栈顶元素",{"_index":807,"title":{},"content":{"53":{"position":[[201,6]]}},"keywords":{}}],["查看队列中元素的个数",{"_index":483,"title":{},"content":{"39":{"position":[[331,10]]},"44":{"position":[[1237,10]]}},"keywords":{}}],["查看队列是否为空",{"_index":480,"title":{},"content":{"39":{"position":[[266,8]]},"44":{"position":[[1155,8]]}},"keywords":{}}],["查看队列的前端元素",{"_index":651,"title":{},"content":{"44":{"position":[[1075,9]]}},"keywords":{}}],["查看队列的队头元素",{"_index":477,"title":{},"content":{"39":{"position":[[209,9]]}},"keywords":{}}],["栈",{"_index":677,"title":{"46":{"position":[[0,1]]}},"content":{"47":{"position":[[0,1]]}},"keywords":{}}],["栈常用一维数组或链表来实现，用数组实现的栈叫作",{"_index":790,"title":{},"content":{"51":{"position":[[0,23]]}},"keywords":{}}],["栈溢出？比如函数",{"_index":722,"title":{},"content":{"48":{"position":[[204,8]]}},"keywords":{}}],["栈的实现",{"_index":789,"title":{"51":{"position":[[0,5]]}},"content":{},"keywords":{}}],["栈的常用方法",{"_index":794,"title":{"52":{"position":[[0,7]]}},"content":{},"keywords":{}}],["栈的常见应用场景",{"_index":726,"title":{"49":{"position":[[0,9]]}},"content":{},"keywords":{}}],["栈的访问、插入和删除的时间复杂度分析",{"_index":699,"title":{},"content":{"47":{"position":[[359,18]]}},"keywords":{}}],["栈结构的封装",{"_index":802,"title":{},"content":{"53":{"position":[[3,6]]}},"keywords":{}}],["栈顶元素删除掉",{"_index":696,"title":{},"content":{"47":{"position":[[324,7]]}},"keywords":{}}],["树",{"_index":1512,"title":{"94":{"position":[[0,1]]}},"content":{},"keywords":{}}],["树、替罪羊树、加权平衡树、伸展树",{"_index":1709,"title":{},"content":{"109":{"position":[[101,16]]}},"keywords":{}}],["树中的每个元素都可以统称为节点。根节点",{"_index":1524,"title":{},"content":{"95":{"position":[[161,20]]}},"keywords":{}}],["树是平衡树，所以它的时间复杂度也是",{"_index":1726,"title":{},"content":{"109":{"position":[[558,17]]}},"keywords":{}}],["树的常用术语",{"_index":1572,"title":{"97":{"position":[[0,7]]}},"content":{},"keywords":{}}],["树的平衡性",{"_index":1718,"title":{},"content":{"109":{"position":[[382,5]]}},"keywords":{}}],["树结构",{"_index":1558,"title":{},"content":{"96":{"position":[[279,4],[400,4]]}},"keywords":{}}],["树结构的表示方法",{"_index":1596,"title":{"98":{"position":[[0,9]]}},"content":{},"keywords":{}}],["树（tree）：由",{"_index":1561,"title":{},"content":{"96":{"position":[[405,9]]}},"keywords":{}}],["树，所以平衡树的应用基本都是红黑树",{"_index":1729,"title":{},"content":{"109":{"position":[[665,18]]}},"keywords":{}}],["树：是最早的一种平衡树，它通过在每个节点多存储一个额外的数据来保持树的平衡。由于",{"_index":1725,"title":{},"content":{"109":{"position":[[513,40]]}},"keywords":{}}],["根据",{"_index":1310,"title":{},"content":{"82":{"position":[[1460,2],[6174,2]]}},"keywords":{}}],["根据传入的",{"_index":1407,"title":{},"content":{"82":{"position":[[4609,5],[5323,5]]}},"keywords":{}}],["根据传入的元素，创建",{"_index":633,"title":{},"content":{"44":{"position":[[433,10]]}},"keywords":{}}],["根据前面的内容，我们知道",{"_index":851,"title":{},"content":{"59":{"position":[[83,13]]}},"keywords":{}}],["根据堆的性质可知，最大堆的堆顶元素为所有元素中最大的，最小堆的堆顶元素是所有元素中最小的。当我们需要多次查找最大元素或者最小元素的时候，可以利用堆来实现",{"_index":272,"title":{},"content":{"21":{"position":[[0,77]]}},"keywords":{}}],["根据探测空白单元格位置方式的不同，可分为三种方法",{"_index":1090,"title":{},"content":{"76":{"position":[[40,25]]}},"keywords":{}}],["根据比较传入的两个节点，一直查找新节点适合插入的位置，直到成功插入新节点为止",{"_index":1818,"title":{},"content":{"111":{"position":[[1685,39]]}},"keywords":{}}],["根据装填因子的大小，判断是否要进行哈希表压缩",{"_index":1323,"title":{},"content":{"82":{"position":[[2226,22],[3668,22],[4926,22],[6763,22]]}},"keywords":{}}],["根目录下建立",{"_index":160,"title":{},"content":{"13":{"position":[[54,6]]}},"keywords":{}}],["根节点到该节点的路径所包含的边数节点的层数",{"_index":1541,"title":{},"content":{"95":{"position":[[454,22]]}},"keywords":{}}],["根节点的高度",{"_index":1543,"title":{},"content":{"95":{"position":[[491,8]]}},"keywords":{}}],["案例一：公司想要存储",{"_index":1028,"title":{},"content":{"71":{"position":[[426,10]]}},"keywords":{}}],["次",{"_index":1192,"title":{},"content":{"78":{"position":[[140,2],[165,2]]},"111":{"position":[[766,2]]}},"keywords":{}}],["次多项式",{"_index":1186,"title":{},"content":{"78":{"position":[[82,4]]}},"keywords":{}}],["次幂的底数等",{"_index":1201,"title":{},"content":{"79":{"position":[[106,7]]}},"keywords":{}}],["次，查找效率非常高",{"_index":1760,"title":{},"content":{"111":{"position":[[527,10]]}},"keywords":{}}],["次：将",{"_index":1762,"title":{},"content":{"111":{"position":[[542,3]]}},"keywords":{}}],["次：由于",{"_index":1769,"title":{},"content":{"111":{"position":[[606,4],[655,4],[704,4]]}},"keywords":{}}],["次；加法次数：n",{"_index":1191,"title":{},"content":{"78":{"position":[[131,8],[156,8]]}},"keywords":{}}],["此外，在字典中",{"_index":337,"title":{},"content":{"29":{"position":[[180,7]]}},"keywords":{}}],["步数为2可访问的顶点为a、h",{"_index":986,"title":{},"content":{"69":{"position":[[234,14]]}},"keywords":{}}],["步数为2可访问的顶点为b、d、e",{"_index":976,"title":{},"content":{"69":{"position":[[38,16]]}},"keywords":{}}],["步数为2可访问的顶点为b、h",{"_index":982,"title":{},"content":{"69":{"position":[[139,14]]}},"keywords":{}}],["步数为3可访问的顶点为c、d",{"_index":983,"title":{},"content":{"69":{"position":[[166,14]]}},"keywords":{}}],["步数为3可访问的顶点为e",{"_index":987,"title":{},"content":{"69":{"position":[[259,12]]}},"keywords":{}}],["步数为3可访问的顶点为f、g",{"_index":988,"title":{},"content":{"69":{"position":[[284,14]]}},"keywords":{}}],["步数为3可访问的顶点为g、f",{"_index":977,"title":{},"content":{"69":{"position":[[67,14]]}},"keywords":{}}],["每个元素不再只是一个数据，还包含优先级。在添加元素过程中，根据优先级放入到正确位置",{"_index":618,"title":{},"content":{"44":{"position":[[76,42]]}},"keywords":{}}],["每个节点都遵循上述规则，也就是说，我们可以递归实现先序遍历",{"_index":2020,"title":{},"content":{"113":{"position":[[58,30]]}},"keywords":{}}],["每次在插入或删除某个节点时，都需要处理四个引用，而不是两个，实现起来会困难些。相对于单向链表，所占内存空间更大一些。但是，相对于双向链表的便利性而言，这些缺点微不足道",{"_index":2285,"title":{},"content":{"125":{"position":[[137,84]]},"128":{"position":[[227,84]]}},"keywords":{}}],["每次添加元素时，都是添加到队尾。单队列又分为",{"_index":557,"title":{},"content":{"42":{"position":[[12,22]]}},"keywords":{}}],["比如",{"_index":894,"title":{},"content":{"60":{"position":[[482,2]]}},"keywords":{}}],["比如上图中",{"_index":890,"title":{},"content":{"60":{"position":[[439,5]]}},"keywords":{}}],["比较好的二叉搜索树，它的数据应该是左右均匀分布的。但是插入连续数据后，二叉搜索树中的数据分布就变得不均匀了，我们称这种树为非平衡树。对于一棵平衡二叉树来说，插入/查找等操作的效率是",{"_index":1715,"title":{},"content":{"109":{"position":[[243,90]]}},"keywords":{}}],["比较根结点的左子节点和右子节点，也就是下标为2,3的数组元素，将较大的元素填充到根结点(下标为1)的位置",{"_index":279,"title":{},"content":{"21":{"position":[[354,53]]}},"keywords":{}}],["比较；第",{"_index":1768,"title":{},"content":{"111":{"position":[[599,4],[648,4],[697,4]]}},"keywords":{}}],["求两个集合的交集",{"_index":1489,"title":{},"content":{"90":{"position":[[18,8]]},"93":{"position":[[996,8]]}},"keywords":{}}],["求两个集合的并集",{"_index":1474,"title":{},"content":{"89":{"position":[[11,8]]},"93":{"position":[[670,8]]}},"keywords":{}}],["求多项式的值时，首先计算最内层括号内一次多项式的值，然后由内向外逐层计算一次多项式的值。这种算法把求",{"_index":1184,"title":{},"content":{"78":{"position":[[29,50]]}},"keywords":{}}],["没有子节点的节点。上图中的",{"_index":1537,"title":{},"content":{"95":{"position":[[391,14]]}},"keywords":{}}],["注意：上述方法中的",{"_index":227,"title":{},"content":{"14":{"position":[[1113,9]]}},"keywords":{}}],["注意：左边的值不能比根节点（父节点）大",{"_index":2012,"title":{},"content":{"111":{"position":[[10111,19]]}},"keywords":{}}],["注意：当修改之后，原来的关键路径可能会变成非关键路径",{"_index":1003,"title":{},"content":{"69":{"position":[[861,26]]}},"keywords":{}}],["测试",{"_index":396,"title":{},"content":{"33":{"position":[[702,2],[737,2],[973,2],[1100,2],[1204,2],[1268,2],[1354,2],[1432,2]]},"39":{"position":[[536,2],[579,2],[811,2],[925,2],[980,2],[1038,2],[1093,2]]},"40":{"position":[[788,2],[805,2]]},"44":{"position":[[1515,2],[1577,2],[2132,2],[2414,2],[2480,2],[2543,2]]},"53":{"position":[[541,2],[554,2],[656,2],[706,2],[760,2],[818,2],[873,2]]},"54":{"position":[[382,2]]},"87":{"position":[[620,2],[654,2],[828,2],[928,2],[1039,2],[1089,2],[1173,2]]},"123":{"position":[[1424,2],[1925,2],[2939,2],[3416,2],[3777,2],[4306,2],[5156,2],[5359,2],[5547,2],[5674,2]]},"125":{"position":[[7630,2],[7694,2],[7863,2],[7998,2],[8068,2],[8182,2],[8288,2],[8382,2],[8552,2],[8624,2]]}},"keywords":{}}],["消费者“模型。线程池中的请求/任务队列",{"_index":605,"title":{},"content":{"43":{"position":[[522,20]]}},"keywords":{}}],["涉及到",{"_index":2240,"title":{},"content":{"123":{"position":[[3995,3],[7935,3]]}},"keywords":{}}],["深度优先",{"_index":990,"title":{},"content":{"69":{"position":[[320,4]]}},"keywords":{}}],["深度优先搜索就是“一条路走到黑”，从源顶点开始，一直走到没有后继节点，才回溯到上一顶点，然后继续“一条路走到黑”，如下图所示",{"_index":970,"title":{},"content":{"68":{"position":[[102,63]]}},"keywords":{}}],["深度优先遍历（df",{"_index":967,"title":{"68":{"position":[[0,12]]}},"content":{},"keywords":{}}],["添加一个新元素到栈顶位置。pop",{"_index":796,"title":{},"content":{"52":{"position":[[7,18]]}},"keywords":{}}],["清空字典中所有的键值对",{"_index":395,"title":{},"content":{"33":{"position":[[656,11]]}},"keywords":{}}],["清空集合中所有",{"_index":1449,"title":{},"content":{"87":{"position":[[427,7]]},"93":{"position":[[442,7]]}},"keywords":{}}],["满二叉树。也就是说，如果一个二叉树的层数为",{"_index":1681,"title":{},"content":{"107":{"position":[[134,21]]}},"keywords":{}}],["满二叉树。如下图所示",{"_index":1684,"title":{},"content":{"107":{"position":[[179,11]]}},"keywords":{}}],["满二叉树（完美二叉树",{"_index":1675,"title":{"107":{"position":[[0,12]]}},"content":{},"keywords":{}}],["然后开始将这个石头沉入海底，不停与左右子节点的值进行比较，和较大的子节点交换位置，直到无法交换位置",{"_index":285,"title":{},"content":{"21":{"position":[[631,50]]}},"keywords":{}}],["特殊之处在于里面的元素没有顺序，也不能重复。没有顺序意味着不能通过下标值进行访问，不能重复意味着相同的对象在集合中只会存在一份",{"_index":1422,"title":{},"content":{"84":{"position":[[134,64]]}},"keywords":{}}],["特点",{"_index":1420,"title":{},"content":{"84":{"position":[[64,2]]}},"keywords":{}}],["特点：先进先出",{"_index":438,"title":{},"content":{"35":{"position":[[210,7]]}},"keywords":{}}],["特点：先进后出，后进先出",{"_index":681,"title":{},"content":{"47":{"position":[[71,12]]}},"keywords":{}}],["现在思考两个问题",{"_index":304,"title":{},"content":{"25":{"position":[[61,9]]}},"keywords":{}}],["现在需要一种压缩方法，把幂的连乘方案系统中得到的巨大整数范围压缩到可接受的数组范围中。可以通过取余操作来实现。虽然取余操作得到的结构也有可能重复，但是可以通过其他方式解决",{"_index":1071,"title":{},"content":{"72":{"position":[[601,86]]}},"keywords":{}}],["现实生活中很多结构都是树的抽象，模拟的树结构相当于旋转",{"_index":1518,"title":{},"content":{"95":{"position":[[75,27]]}},"keywords":{}}],["生活中类似优先队列的场景",{"_index":614,"title":{},"content":{"44":{"position":[[0,13]]}},"keywords":{}}],["生活中类似队列结构的场景",{"_index":440,"title":{},"content":{"35":{"position":[[245,13]]}},"keywords":{}}],["用于保存它的父节点、变量",{"_index":1875,"title":{},"content":{"111":{"position":[[3514,12]]}},"keywords":{}}],["用于保存需要删除的节点、变量",{"_index":1873,"title":{},"content":{"111":{"position":[[3492,14]]}},"keywords":{}}],["用于查找插入点",{"_index":1811,"title":{},"content":{"111":{"position":[[1473,8]]}},"keywords":{}}],["用链表实现的栈叫作",{"_index":792,"title":{},"content":{"51":{"position":[[28,10]]}},"keywords":{}}],["用链表实现的队列叫作",{"_index":429,"title":{},"content":{"35":{"position":[[95,11]]}},"keywords":{}}],["由一条边连接在一起的顶点称为相邻顶点。比如",{"_index":876,"title":{},"content":{"60":{"position":[[285,21]]}},"keywords":{}}],["由于堆顶元素是所有元素中最大的，所以我们重复取出堆顶元素，将这个最大的堆顶元素放至数组末尾，并对剩下的元素进行堆化即可",{"_index":303,"title":{},"content":{"25":{"position":[[0,60]]}},"keywords":{}}],["由于链表项使用了",{"_index":2137,"title":{},"content":{"123":{"position":[[637,8]]},"125":{"position":[[732,8]]}},"keywords":{}}],["由于队列没有像数组一样的下标值不能直接取到某一元素",{"_index":531,"title":{},"content":{"40":{"position":[[537,26]]}},"keywords":{}}],["百度百科：一棵深度为k的有n个结点的二叉树，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1≤i≤n）的结点与满二叉树中编号为i的结点在二叉树中的位置相同，则这棵二叉树称为完全二叉树",{"_index":1693,"title":{},"content":{"108":{"position":[[125,100]]}},"keywords":{}}],["的一个连续序列",{"_index":889,"title":{},"content":{"60":{"position":[[430,8]]}},"keywords":{}}],["的两个不相交的二叉树组成",{"_index":1648,"title":{},"content":{"103":{"position":[[49,13]]}},"keywords":{}}],["的二分法找到要插入或者删除的数据，在移动数据时也需要",{"_index":244,"title":{},"content":{"16":{"position":[[171,26]]}},"keywords":{}}],["的二叉树、只有右子树",{"_index":1651,"title":{},"content":{"104":{"position":[[34,10]]}},"keywords":{}}],["的二叉树和有左右两个子树的二叉树",{"_index":1652,"title":{},"content":{"104":{"position":[[48,17]]}},"keywords":{}}],["的二叉树的最大节点总数为：2^k",{"_index":1658,"title":{},"content":{"105":{"position":[[56,16]]}},"keywords":{}}],["的二叉树至多总共有",{"_index":1638,"title":{},"content":{"102":{"position":[[184,9]]}},"keywords":{}}],["的位置存放的数据与需要查询的数据",{"_index":1111,"title":{},"content":{"76":{"position":[[268,16]]}},"keywords":{}}],["的位置就不会有越界问题了。当我们再向队列中添加元素的时候",{"_index":585,"title":{},"content":{"43":{"position":[[97,29]]}},"keywords":{}}],["的位置就会停止查找。通常删除一个位置的数据项时，我们可以将它进行特殊处理（比如设置为",{"_index":1122,"title":{},"content":{"76":{"position":[[480,42]]}},"keywords":{}}],["的位置就是合适的位置",{"_index":1105,"title":{},"content":{"76":{"position":[[213,11]]}},"keywords":{}}],["的位置都放置了数据，这种一连串填充单元就称为聚集。聚集会影响哈希表的性能，无论是插入/查询/删除都会影响。比如插入",{"_index":1129,"title":{},"content":{"76":{"position":[[632,57]]}},"keywords":{}}],["的值",{"_index":1230,"title":{},"content":{"81":{"position":[[193,2]]}},"keywords":{}}],["的值，通过取余操作实现哈希化，此处先简单地指定数组的大小",{"_index":1221,"title":{},"content":{"81":{"position":[[20,29]]}},"keywords":{}}],["的分支具有左右次序，不能随意颠倒",{"_index":1632,"title":{},"content":{"102":{"position":[[133,17]]}},"keywords":{}}],["的分支通常被称作“左子树”或“右子树”。并且，二叉树",{"_index":1631,"title":{},"content":{"102":{"position":[[106,26]]}},"keywords":{}}],["的前驱；比",{"_index":1978,"title":{},"content":{"111":{"position":[[6814,5]]}},"keywords":{}}],["的原理运作。在栈中，push",{"_index":685,"title":{},"content":{"47":{"position":[[119,14]]}},"keywords":{}}],["的变量",{"_index":1228,"title":{},"content":{"81":{"position":[[140,3]]}},"keywords":{}}],["的右子树中一直向左遍历查找",{"_index":1985,"title":{},"content":{"111":{"position":[[6935,14]]}},"keywords":{}}],["的右子树中查找最小值，即在",{"_index":1984,"title":{},"content":{"111":{"position":[[6913,13]]}},"keywords":{}}],["的右子树中选择一合适的节点替代节点",{"_index":1956,"title":{},"content":{"111":{"position":[[6204,17],[6335,17],[6473,17]]}},"keywords":{}}],["的右子树节点",{"_index":2005,"title":{},"content":{"111":{"position":[[7533,6],[9795,6]]}},"keywords":{}}],["的右子节点",{"_index":1767,"title":{},"content":{"111":{"position":[[590,5]]}},"keywords":{}}],["的右子节点（isleftchild",{"_index":1925,"title":{},"content":{"111":{"position":[[4843,17],[5169,17]]}},"keywords":{}}],["的后继",{"_index":1981,"title":{},"content":{"111":{"position":[[6871,4]]}},"keywords":{}}],["的后继时，需要在",{"_index":1983,"title":{},"content":{"111":{"position":[[6896,8]]}},"keywords":{}}],["的子节点；兄弟节点（sibling）：具有同一父节点的各节点彼此是兄弟节点，比如上图的",{"_index":1585,"title":{},"content":{"97":{"position":[[195,43]]}},"keywords":{}}],["的对应位置；然后，根据索引值取出",{"_index":1257,"title":{},"content":{"82":{"position":[[358,16]]}},"keywords":{}}],["的左子树中一直向右遍历查找",{"_index":1988,"title":{},"content":{"111":{"position":[[6991,14]]}},"keywords":{}}],["的左子树中查找最大值，即在",{"_index":1987,"title":{},"content":{"111":{"position":[[6969,13]]}},"keywords":{}}],["的左子树中选择一合适的节点替代节点",{"_index":1952,"title":{},"content":{"111":{"position":[[6161,17],[6292,17],[6427,17]]}},"keywords":{}}],["的左子节点",{"_index":1772,"title":{},"content":{"111":{"position":[[639,5],[688,5]]}},"keywords":{}}],["的左子节点（isleftchild",{"_index":1919,"title":{},"content":{"111":{"position":[[4746,17],[5071,17]]}},"keywords":{}}],["的左节点，这样方便之后删除节点时改变相关节点的指向",{"_index":1878,"title":{},"content":{"111":{"position":[[3561,26]]}},"keywords":{}}],["的幂相乘求和）产生的数组下标又太多",{"_index":1070,"title":{},"content":{"72":{"position":[[582,18]]}},"keywords":{}}],["的平方根即可。该方法性能较好",{"_index":1387,"title":{},"content":{"82":{"position":[[4127,15]]}},"keywords":{}}],["的度为",{"_index":1574,"title":{},"content":{"97":{"position":[[29,3]]}},"keywords":{}}],["的情况",{"_index":2200,"title":{},"content":{"123":{"position":[[2348,3],[2493,3],[4772,3],[4832,3],[6755,3],[6900,3],[8460,3],[8520,3]]}},"keywords":{}}],["的情况下，若父结点的序号是",{"_index":1699,"title":{},"content":{"108":{"position":[[327,13]]}},"keywords":{}}],["的所有非空右子树的键值都大于",{"_index":1746,"title":{},"content":{"111":{"position":[[167,14]]}},"keywords":{}}],["的所有非空左子树的键值都小于",{"_index":1744,"title":{},"content":{"111":{"position":[[115,14]]}},"keywords":{}}],["的探测，比如从下表值",{"_index":1138,"title":{},"content":{"76":{"position":[[851,10]]}},"keywords":{}}],["的操作都发生在栈顶",{"_index":687,"title":{},"content":{"47":{"position":[[140,10]]}},"keywords":{}}],["的数字，就是用幂的连乘来表示它的唯一性的。比如",{"_index":1054,"title":{},"content":{"72":{"position":[[291,24]]}},"keywords":{}}],["的数据",{"_index":1316,"title":{},"content":{"82":{"position":[[1901,3],[6438,3]]}},"keywords":{}}],["的数组，由于使用的是链地址法，装填因子(loadfactor)可以大于",{"_index":1332,"title":{},"content":{"82":{"position":[[2549,35]]}},"keywords":{}}],["的时候",{"_index":2162,"title":{},"content":{"123":{"position":[[1111,3],[6106,3]]}},"keywords":{}}],["的时候进行扩容",{"_index":1340,"title":{},"content":{"82":{"position":[[2715,8]]}},"keywords":{}}],["的时候队列为满。队列为空的时候就是",{"_index":596,"title":{},"content":{"43":{"position":[[272,17]]}},"keywords":{}}],["的时候队列为空，当",{"_index":594,"title":{},"content":{"43":{"position":[[240,9]]}},"keywords":{}}],["的时候队列为空，循环队列中则不一样，也可能为满，如上图所示。解决办法有两种",{"_index":589,"title":{},"content":{"43":{"position":[[161,38]]}},"keywords":{}}],["的时候，rear",{"_index":571,"title":{},"content":{"42":{"position":[[248,8]]}},"keywords":{}}],["的时候，对称的位置",{"_index":946,"title":{},"content":{"65":{"position":[[444,9]]}},"keywords":{}}],["的时间复杂度",{"_index":246,"title":{},"content":{"16":{"position":[[203,7]]}},"keywords":{}}],["的时间复杂度。实际上，只需要几个机器指令即可完成。哈希表的速度比树还要快，基本可以瞬间查找到想要的元素。哈希表相对于树来说编码要简单得多",{"_index":1018,"title":{},"content":{"71":{"position":[[129,69]]}},"keywords":{}}],["的树",{"_index":1520,"title":{},"content":{"95":{"position":[[108,3]]}},"keywords":{}}],["的格式：[key",{"_index":1277,"title":{},"content":{"82":{"position":[[872,9],[5816,9]]}},"keywords":{}}],["的父节点，那么",{"_index":1583,"title":{},"content":{"97":{"position":[[180,7]]}},"keywords":{}}],["的父节点；子节点（child）：若",{"_index":1582,"title":{},"content":{"97":{"position":[[156,17]]}},"keywords":{}}],["的特性时，我们就可以使用栈这个数据结构",{"_index":728,"title":{},"content":{"49":{"position":[[60,20]]}},"keywords":{}}],["的第",{"_index":1633,"title":{},"content":{"102":{"position":[[155,2]]}},"keywords":{}}],["的线性表。在具体应用中通常用链表或者数组来实现，用数组实现的队列叫作",{"_index":427,"title":{},"content":{"35":{"position":[[55,34]]}},"keywords":{}}],["的缓存机制友好，链表则相反。数组的大小固定，而链表则天然支持动态扩容。如果声明的数组过小，需要另外申请一个更大的内存空间存放数组元素，然后将原数组拷贝进去，这个操作是比较耗时的",{"_index":2085,"title":{},"content":{"121":{"position":[[34,89]]}},"keywords":{}}],["的节点",{"_index":2243,"title":{},"content":{"123":{"position":[[4127,3],[8067,3],[8863,3]]}},"keywords":{}}],["的节点称为父节点，如上图节点",{"_index":1580,"title":{},"content":{"97":{"position":[[129,14]]}},"keywords":{}}],["的节点（也称为叶子节点）（没有子节点的节点），如上图的",{"_index":1577,"title":{},"content":{"97":{"position":[[77,27]]}},"keywords":{}}],["的节点）的树结构",{"_index":1630,"title":{},"content":{"102":{"position":[[92,9]]}},"keywords":{}}],["的节点，赋值到",{"_index":2258,"title":{},"content":{"123":{"position":[[4860,7],[8548,7]]}},"keywords":{}}],["的规律",{"_index":1673,"title":{},"content":{"105":{"position":[[252,4]]}},"keywords":{}}],["的路径长度为",{"_index":1589,"title":{},"content":{"97":{"position":[[311,6]]}},"keywords":{}}],["的边更远或者用的时间更长",{"_index":912,"title":{},"content":{"61":{"position":[[65,13]]}},"keywords":{}}],["的边，比",{"_index":911,"title":{},"content":{"61":{"position":[[54,4]]}},"keywords":{}}],["的非叶子节点个数，那么两者满足关系：n0",{"_index":1665,"title":{},"content":{"105":{"position":[[152,20]]}},"keywords":{}}],["的非叶子节点，总数为",{"_index":1671,"title":{},"content":{"105":{"position":[[224,10]]}},"keywords":{}}],["的；这就要求树中每个节点左边的子孙节点的个数，应该尽可能地等于右边的子孙节点的个数",{"_index":1722,"title":{},"content":{"109":{"position":[[459,42]]}},"keywords":{}}],["目录下创建",{"_index":174,"title":{},"content":{"13":{"position":[[249,5]]},"14":{"position":[[733,5]]}},"keywords":{}}],["直到找到要插入的位置",{"_index":2211,"title":{},"content":{"123":{"position":[[2694,10],[7101,10]]}},"keywords":{}}],["直接指向",{"_index":2122,"title":{},"content":{"123":{"position":[[271,4]]}},"keywords":{}}],["相信你已经发现其中的规律了",{"_index":1963,"title":{},"content":{"111":{"position":[[6509,14]]}},"keywords":{}}],["相同，就直接返回",{"_index":1112,"title":{},"content":{"76":{"position":[[288,9]]}},"keywords":{}}],["相对于有序数组而言，堆的主要优势在于更新数据效率较高",{"_index":247,"title":{},"content":{"16":{"position":[[211,27]]}},"keywords":{}}],["相等，则修改数据",{"_index":1280,"title":{},"content":{"82":{"position":[[923,8],[5867,8]]}},"keywords":{}}],["相邻顶点",{"_index":875,"title":{},"content":{"60":{"position":[[280,4]]}},"keywords":{}}],["种情况",{"_index":1891,"title":{},"content":{"111":{"position":[[4041,4]]}},"keywords":{}}],["称之为",{"_index":435,"title":{},"content":{"35":{"position":[[165,3]]}},"keywords":{}}],["移动到最后的时候,我们无法再往队列中添加数据，即使数组中还有空余空间，这种现象就是",{"_index":567,"title":{},"content":{"42":{"position":[[175,41]]}},"keywords":{}}],["移除栈顶的元素，同时返回被移除的元素。peek",{"_index":797,"title":{},"content":{"52":{"position":[[26,25]]}},"keywords":{}}],["移除队列的第一（即排在队列最前面的）项，并返回被移除的元素。front",{"_index":458,"title":{},"content":{"38":{"position":[[45,37]]}},"keywords":{}}],["移除集合中的所有项。size",{"_index":1433,"title":{},"content":{"86":{"position":[[91,16]]}},"keywords":{}}],["程序中的栈结构",{"_index":702,"title":{"48":{"position":[[0,8]]}},"content":{},"keywords":{}}],["程序中的队列",{"_index":450,"title":{"36":{"position":[[0,7]]}},"content":{},"keywords":{}}],["空间，留个",{"_index":2332,"title":{},"content":{"125":{"position":[[1956,5],[5127,5]]}},"keywords":{}}],["符合要求",{"_index":1957,"title":{},"content":{"111":{"position":[[6232,5],[6362,5],[6502,5]]}},"keywords":{}}],["符合要求；方式",{"_index":1954,"title":{},"content":{"111":{"position":[[6188,7],[6319,7],[6456,7]]}},"keywords":{}}],["第",{"_index":1761,"title":{},"content":{"111":{"position":[[538,1]]}},"keywords":{}}],["第1步",{"_index":961,"title":{},"content":{"67":{"position":[[171,4]]},"68":{"position":[[215,4],[270,4]]}},"keywords":{}}],["第2步",{"_index":962,"title":{},"content":{"67":{"position":[[177,4]]},"68":{"position":[[276,4]]}},"keywords":{}}],["第3步",{"_index":963,"title":{},"content":{"67":{"position":[[183,4]]},"68":{"position":[[282,4]]}},"keywords":{}}],["第4步",{"_index":964,"title":{},"content":{"67":{"position":[[189,4]]},"68":{"position":[[288,4]]}},"keywords":{}}],["第5步",{"_index":965,"title":{},"content":{"67":{"position":[[195,4]]},"68":{"position":[[294,4]]}},"keywords":{}}],["第6步",{"_index":966,"title":{},"content":{"67":{"position":[[201,4]]},"68":{"position":[[300,4]]}},"keywords":{}}],["第一步是建堆，将一个无序的数组建立为一个堆第二步是排序，将堆顶元素取出，然后对剩下的元素进行堆化，反复迭代，直到所有元素被取出为止",{"_index":291,"title":{},"content":{"23":{"position":[[12,66]]}},"keywords":{}}],["第一步：先找到需要删除的节点，若没找到，则不需要删除",{"_index":1870,"title":{},"content":{"111":{"position":[[3449,27]]}},"keywords":{}}],["第一步：首先需要为",{"_index":1401,"title":{},"content":{"82":{"position":[[4529,9]]}},"keywords":{}}],["第一种方案（让数字相加求和）产生的数组下标太少。第二种方案（与",{"_index":1069,"title":{},"content":{"72":{"position":[[547,31]]}},"keywords":{}}],["第二次哈希化需要满足以下两点",{"_index":1154,"title":{},"content":{"76":{"position":[[1264,15]]}},"keywords":{}}],["第二步：删除找到的指定节点，后分",{"_index":1890,"title":{},"content":{"111":{"position":[[4022,16]]}},"keywords":{}}],["等",{"_index":350,"title":{},"content":{"30":{"position":[[103,2]]},"109":{"position":[[118,2]]}},"keywords":{}}],["等于",{"_index":576,"title":{},"content":{"42":{"position":[[360,2]]},"111":{"position":[[5393,2],[5430,2],[5475,2],[5789,2],[5826,2],[5871,2],[8639,2],[8676,2],[8721,2],[9035,2],[9072,2],[9117,2]]}},"keywords":{}}],["等依次探测",{"_index":1141,"title":{},"content":{"76":{"position":[[893,6]]}},"keywords":{}}],["等；父节点（parent）：度不为",{"_index":1579,"title":{},"content":{"97":{"position":[[109,17]]}},"keywords":{}}],["答案：65",{"_index":760,"title":{},"content":{"50":{"position":[[199,5]]}},"keywords":{}}],["答案：654",{"_index":770,"title":{},"content":{"50":{"position":[[267,6]]}},"keywords":{}}],["答案：6543",{"_index":778,"title":{},"content":{"50":{"position":[[333,7]]}},"keywords":{}}],["答案：65432",{"_index":783,"title":{},"content":{"50":{"position":[[376,8]]}},"keywords":{}}],["简单来说，图就是由顶点的有穷非空集合和顶点之间的边组成的集合。通常表示为：g(v,e)，其中，g表示一个图，v表示顶点的集合，e表示边的集合",{"_index":855,"title":{},"content":{"59":{"position":[[197,71]]}},"keywords":{}}],["简单的扩容可以直接扩大两倍（关于质数，之后讨论）。扩容之后所有的数据项都要进行同步修改",{"_index":1342,"title":{},"content":{"82":{"position":[[2732,44]]}},"keywords":{}}],["简单路径要求不包含重复的顶点",{"_index":893,"title":{},"content":{"60":{"position":[[466,15]]}},"keywords":{}}],["简而言之，就是",{"_index":1749,"title":{},"content":{"111":{"position":[[242,7]]}},"keywords":{}}],["简而言之，就是每个左子节点必须小于其父节点，右子节点必须大于其父节点",{"_index":1748,"title":{},"content":{"111":{"position":[[207,34]]}},"keywords":{}}],["算法",{"_index":83,"title":{},"content":{"3":{"position":[[12,2]]}},"keywords":{}}],["类",{"_index":627,"title":{},"content":{"44":{"position":[[265,2]]}},"keywords":{}}],["类添加判断质数的",{"_index":1402,"title":{},"content":{"82":{"position":[[4549,8]]}},"keywords":{}}],["类的",{"_index":460,"title":{},"content":{"38":{"position":[[142,2]]},"44":{"position":[[1013,2],[1097,2],[1176,2],[1260,2]]}},"keywords":{}}],["类继承",{"_index":2312,"title":{},"content":{"125":{"position":[[952,3]]}},"keywords":{}}],["类继承单向链表的",{"_index":2308,"title":{},"content":{"125":{"position":[[889,8]]}},"keywords":{}}],["类，了解集合的底层实现",{"_index":1426,"title":{},"content":{"85":{"position":[[34,12]]}},"keywords":{}}],["类，就需要重写继承自",{"_index":2138,"title":{},"content":{"123":{"position":[[651,10]]},"125":{"position":[[746,10]]}},"keywords":{}}],["类，新添加",{"_index":2309,"title":{},"content":{"125":{"position":[[903,5],[967,5]]}},"keywords":{}}],["红黑树、avl",{"_index":1708,"title":{},"content":{"109":{"position":[[93,7]]}},"keywords":{}}],["线性探测",{"_index":1092,"title":{},"content":{"76":{"position":[[79,5],[1702,4]]}},"keywords":{}}],["线性探测二次探测再哈希法",{"_index":1091,"title":{},"content":{"76":{"position":[[66,12]]}},"keywords":{}}],["线性探测存在一个比较严重的问题，就是聚集。如哈希表中还没插入任何元素时，插入",{"_index":1126,"title":{},"content":{"76":{"position":[[558,38]]}},"keywords":{}}],["线性探测存在的问题",{"_index":1125,"title":{},"content":{"76":{"position":[[547,10]]}},"keywords":{}}],["线性探测：我们可以看成是步长为",{"_index":1137,"title":{},"content":{"76":{"position":[[833,15]]}},"keywords":{}}],["线性数据结构的元素满足唯一的线性关系，每个元素(除第一个和最后一个外)只有一个直接前趋和一个直接后继。树形数据结构的元素之间有着明显的层次关系",{"_index":852,"title":{},"content":{"59":{"position":[[97,72]]}},"keywords":{}}],["线程池中没有空闲线程时，新的任务请求线程资源时，线程池该如何处理呢？答案是将这些请求放在队列中，当有空闲线程的时候，会循环中反复从队列中获取任务来执行。队列分为无界队列(基于链表)和有界队列(基于数组)。无界队列的特点就是可以一直入列，除非系统资源耗尽，比如",{"_index":606,"title":{},"content":{"43":{"position":[[543,129]]}},"keywords":{}}],["练习题",{"_index":747,"title":{"50":{"position":[[0,4]]},"69":{"position":[[0,4]]}},"content":{"110":{"position":[[71,3]]},"111":{"position":[[10068,4]]}},"keywords":{}}],["组成，如下图所示",{"_index":1711,"title":{},"content":{"109":{"position":[[176,9]]}},"keywords":{}}],["细心的小伙伴可能发现了，当根节点的值为",{"_index":1698,"title":{},"content":{"108":{"position":[[305,19]]}},"keywords":{}}],["终止不再往下执行",{"_index":1284,"title":{},"content":{"82":{"position":[[982,9]]}},"keywords":{}}],["终止，不再往下执行",{"_index":1415,"title":{},"content":{"82":{"position":[[5926,10]]}},"keywords":{}}],["经常会遇到需要回到上一个节点的情况",{"_index":2397,"title":{},"content":{"128":{"position":[[111,18]]}},"keywords":{}}],["经过哈希化得到",{"_index":1108,"title":{},"content":{"76":{"position":[[241,7]]}},"keywords":{}}],["经过哈希化（对",{"_index":1096,"title":{},"content":{"76":{"position":[[95,7]]}},"keywords":{}}],["给火车加上数据后的结构",{"_index":2123,"title":{},"content":{"123":{"position":[[282,11]]}},"keywords":{}}],["统一只记录右边的第一个兄弟节点",{"_index":1614,"title":{},"content":{"100":{"position":[[89,17]]}},"keywords":{}}],["统一只记录左边的子节点",{"_index":1612,"title":{},"content":{"100":{"position":[[56,13]]}},"keywords":{}}],["继承",{"_index":649,"title":{},"content":{"44":{"position":[[1004,2],[1088,2],[1167,2],[1251,2]]}},"keywords":{}}],["继承单向链表",{"_index":2366,"title":{},"content":{"125":{"position":[[5745,6],[5819,6]]}},"keywords":{}}],["缺失了右子节点，所以它不是完全二叉树",{"_index":1696,"title":{},"content":{"108":{"position":[[253,19]]}},"keywords":{}}],["脚手架",{"_index":150,"title":{"13":{"position":[[6,3]]},"14":{"position":[[8,3]]}},"content":{},"keywords":{}}],["自己采用的一个质数（无强制要求，质数即可",{"_index":1224,"title":{},"content":{"81":{"position":[[81,21]]}},"keywords":{}}],["自底向上堆化",{"_index":275,"title":{},"content":{"21":{"position":[[250,7]]}},"keywords":{}}],["自顶向下堆化",{"_index":283,"title":{},"content":{"21":{"position":[[545,7]]}},"keywords":{}}],["自顶向下的堆化用一个词形容就是“石沉大海”，那么第一件事情，就是把石头抬起来，从海面扔下去。这个石头就是堆的最后一个元素，我们将最后一个元素移动到堆顶",{"_index":284,"title":{},"content":{"21":{"position":[[553,76]]}},"keywords":{}}],["至此，数组所对应的树已经成为了一个最大堆，建堆完成",{"_index":301,"title":{},"content":{"24":{"position":[[288,26]]}},"keywords":{}}],["航空公司可以用图来为其飞行系统建模。将每个机场看成顶点，将经过两个顶点的每条航线看作一条边。加权的边可以表示从一个机场到另一个机场的航班成本，或两个机场间的距离。建模人员可以利用这个系统有效的判断从一个城市到另一个城市的最小航行成本",{"_index":919,"title":{},"content":{"62":{"position":[[94,117]]}},"keywords":{}}],["节点",{"_index":1523,"title":{},"content":{"95":{"position":[[158,2]]},"117":{"position":[[26,2],[198,2]]},"123":{"position":[[4702,2],[8390,2]]}},"keywords":{}}],["节点(头结点)，通过头结点我们可以遍历整个链表。尾结点通常指向",{"_index":2115,"title":{},"content":{"123":{"position":[[102,31]]}},"keywords":{}}],["节点b",{"_index":1616,"title":{},"content":{"100":{"position":[[134,5]]}},"keywords":{}}],["节点f",{"_index":1617,"title":{},"content":{"100":{"position":[[206,5]]}},"keywords":{}}],["节点、e",{"_index":1529,"title":{},"content":{"95":{"position":[[258,4],[304,4],[352,4]]}},"keywords":{}}],["节点就是根节点。父节点",{"_index":1526,"title":{},"content":{"95":{"position":[[205,11]]}},"keywords":{}}],["节点是",{"_index":1528,"title":{},"content":{"95":{"position":[[252,3],[309,3]]}},"keywords":{}}],["节点由于没有子节点，所以不需要引用",{"_index":1604,"title":{},"content":{"99":{"position":[[126,18]]}},"keywords":{}}],["节点的",{"_index":2225,"title":{},"content":{"123":{"position":[[3254,3],[7491,3]]}},"keywords":{}}],["节点的共同父节点是",{"_index":1534,"title":{},"content":{"95":{"position":[[357,9]]}},"keywords":{}}],["节点的前驱。比如下图中的节点",{"_index":1976,"title":{},"content":{"111":{"position":[[6790,14]]}},"keywords":{}}],["节点的后继。比如下图中的节点",{"_index":1980,"title":{},"content":{"111":{"position":[[6847,14]]}},"keywords":{}}],["节点的子节点。兄弟节点",{"_index":1532,"title":{},"content":{"95":{"position":[[315,11]]}},"keywords":{}}],["节点的层次为",{"_index":1593,"title":{},"content":{"97":{"position":[[373,6]]}},"keywords":{}}],["节点的度（degree）：节点的子树个数，比如节点",{"_index":1573,"title":{},"content":{"97":{"position":[[1,25]]}},"keywords":{}}],["节点的深度+1。树的高度",{"_index":1542,"title":{},"content":{"95":{"position":[[477,13]]}},"keywords":{}}],["节点的父节点。子节点",{"_index":1530,"title":{},"content":{"95":{"position":[[263,10]]}},"keywords":{}}],["节点类",{"_index":1801,"title":{},"content":{"111":{"position":[[1252,3]]}},"keywords":{}}],["节点需要",{"_index":1602,"title":{},"content":{"99":{"position":[[99,4]]}},"keywords":{}}],["节点，故",{"_index":1535,"title":{},"content":{"95":{"position":[[369,4]]}},"keywords":{}}],["若一个节点含有子节点，则这个节点称为其子节点的父节点。上图中的",{"_index":1527,"title":{},"content":{"95":{"position":[[217,32]]}},"keywords":{}}],["若想在其中查找数据",{"_index":1758,"title":{},"content":{"111":{"position":[[506,9]]}},"keywords":{}}],["若用",{"_index":1965,"title":{},"content":{"111":{"position":[[6595,2]]}},"keywords":{}}],["获取",{"_index":1311,"title":{},"content":{"82":{"position":[[1472,2],[6186,2]]}},"keywords":{}}],["获取二叉搜索树最大值",{"_index":1851,"title":{},"content":{"111":{"position":[[2587,10]]}},"keywords":{}}],["获取二叉搜索树最小值",{"_index":1848,"title":{},"content":{"111":{"position":[[2440,10]]}},"keywords":{}}],["获取余数，放入栈中",{"_index":831,"title":{},"content":{"54":{"position":[[173,9]]}},"keywords":{}}],["获取后续节点，即从要删除的节点的右边开始查找最小的值",{"_index":1998,"title":{},"content":{"111":{"position":[[7364,26],[9626,26]]}},"keywords":{}}],["获取哈希表中特定位置的元素。remove(key",{"_index":1212,"title":{},"content":{"80":{"position":[[33,25]]}},"keywords":{}}],["获取字典中的键值对个数",{"_index":392,"title":{},"content":{"33":{"position":[[595,11]]}},"keywords":{}}],["获取对应位置的元素。indexof(el",{"_index":2128,"title":{},"content":{"123":{"position":[[390,26]]}},"keywords":{}}],["获取所有的",{"_index":389,"title":{},"content":{"33":{"position":[[470,5],[526,5]]}},"keywords":{}}],["获取指定",{"_index":386,"title":{},"content":{"33":{"position":[[367,4]]}},"keywords":{}}],["获取指定位置的",{"_index":2274,"title":{},"content":{"123":{"position":[[7356,7]]}},"keywords":{}}],["获取指定位置的元素。indexof(el",{"_index":2298,"title":{},"content":{"125":{"position":[[479,26]]}},"keywords":{}}],["获取指定位置（position）的",{"_index":2220,"title":{},"content":{"123":{"position":[[3108,17]]}},"keywords":{}}],["获取最临近的质数",{"_index":1408,"title":{},"content":{"82":{"position":[[4622,8],[5336,8]]}},"keywords":{}}],["获取栈中元素个数",{"_index":810,"title":{},"content":{"53":{"position":[[338,8]]}},"keywords":{}}],["获取索引值",{"_index":1254,"title":{},"content":{"82":{"position":[[328,5]]}},"keywords":{}}],["获取要映射到",{"_index":1264,"title":{},"content":{"82":{"position":[[535,6],[5479,6]]}},"keywords":{}}],["获取链表的长度",{"_index":2271,"title":{},"content":{"123":{"position":[[5631,8],[8991,7]]},"125":{"position":[[7065,7]]}},"keywords":{}}],["获取集合中所有的",{"_index":1453,"title":{},"content":{"87":{"position":[[556,8]]},"93":{"position":[[571,8]]}},"keywords":{}}],["获取集合中的",{"_index":1450,"title":{},"content":{"87":{"position":[[479,6]]},"93":{"position":[[494,6]]}},"keywords":{}}],["虽然可以轻松地到达下一个节点，但是回到前一个节点是很难的",{"_index":2105,"title":{},"content":{"121":{"position":[[623,29]]}},"keywords":{}}],["虽然是一种线性表，但是并不会按线性的顺序存储数据，使用的不是连续的内存空间来存储数据",{"_index":2075,"title":{},"content":{"120":{"position":[[54,43]]}},"keywords":{}}],["虽然该方式可以保证字符的唯一性，但是如果是较长的字符（如",{"_index":1064,"title":{},"content":{"72":{"position":[[423,28]]}},"keywords":{}}],["表示",{"_index":942,"title":{},"content":{"65":{"position":[[381,3]]}},"keywords":{}}],["表示叶子节点的个数，n2表示度为",{"_index":1664,"title":{},"content":{"105":{"position":[[133,16]]}},"keywords":{}}],["表示后面没有节点（即当前链表中只有一个节点",{"_index":2345,"title":{},"content":{"125":{"position":[[3012,22]]}},"keywords":{}}],["表示新插入后是第一个节点",{"_index":2193,"title":{},"content":{"123":{"position":[[2103,12],[6510,12]]}},"keywords":{}}],["表示新插入后是第二个节点，以此类推",{"_index":2194,"title":{},"content":{"123":{"position":[[2132,17],[6539,17]]}},"keywords":{}}],["表示时间复杂度的话，直接从变换前的",{"_index":1197,"title":{},"content":{"78":{"position":[[176,17]]}},"keywords":{}}],["表示有连线。通过二维数组，我们可以很快的找到一个顶点和哪些顶点有连线。（比如",{"_index":936,"title":{},"content":{"65":{"position":[[289,38]]}},"keywords":{}}],["表示没有连线，1",{"_index":935,"title":{},"content":{"65":{"position":[[280,8]]}},"keywords":{}}],["表示边的集合边是顶点和顶点之间的连线边可以是有向的，也可以是无向的。（比如",{"_index":866,"title":{},"content":{"59":{"position":[[464,37]]}},"keywords":{}}],["表示需要删除的节点，则合适的节点指的是",{"_index":1966,"title":{},"content":{"111":{"position":[[6606,20]]}},"keywords":{}}],["表示顶点的集合一组边：通常用",{"_index":864,"title":{},"content":{"59":{"position":[[440,14]]}},"keywords":{}}],["表示；其余节点可分为",{"_index":1568,"title":{},"content":{"96":{"position":[[502,10]]}},"keywords":{}}],["装填因子",{"_index":1166,"title":{},"content":{"76":{"position":[[1563,5]]},"82":{"position":[[2939,4]]}},"keywords":{}}],["装填因子(已有个数/总个数",{"_index":1414,"title":{},"content":{"82":{"position":[[5235,14]]}},"keywords":{}}],["装填因子表示当前哈希表中已经包含的数据项和整个哈希表长度的比值；装填因子",{"_index":1167,"title":{},"content":{"76":{"position":[[1569,36]]}},"keywords":{}}],["规律总结：如果要删除的节点有两个子节点，甚至子节点还有子节点，这种情况下需要从要删除节点下面的子节点中找到一个合适的节点，来替换当前的节点",{"_index":1964,"title":{},"content":{"111":{"position":[[6524,70]]}},"keywords":{}}],["解决冲突常见的两种方案：链地址法（拉链法）和开放地址法",{"_index":1080,"title":{},"content":{"74":{"position":[[56,28]]}},"keywords":{}}],["解析",{"_index":759,"title":{},"content":{"50":{"position":[[193,3]]}},"keywords":{}}],["计算机网络",{"_index":147,"title":{},"content":{"11":{"position":[[12,5]]}},"keywords":{}}],["认识数据结构",{"_index":317,"title":{"27":{"position":[[0,6]]}},"content":{"27":{"position":[[0,6]]}},"keywords":{}}],["让新插入的元素进行优先级比较，prioriti",{"_index":640,"title":{},"content":{"44":{"position":[[706,23]]}},"keywords":{}}],["让新节点的",{"_index":2201,"title":{},"content":{"123":{"position":[[2355,5],[6762,5]]}},"keywords":{}}],["设计稿宽度",{"_index":172,"title":{},"content":{"13":{"position":[[224,5]]},"14":{"position":[[382,5]]}},"keywords":{}}],["访问任何一个位置的元素时，需要从头开始访问。(无法跳过第一个元素访问任何一个元素",{"_index":2103,"title":{},"content":{"121":{"position":[[544,41]]}},"keywords":{}}],["访问特定位置的元素",{"_index":2081,"title":{},"content":{"120":{"position":[[336,9]]}},"keywords":{}}],["访问：o（n",{"_index":445,"title":{},"content":{"35":{"position":[[339,9]]},"47":{"position":[[390,9]]},"120":{"position":[[326,9]]}},"keywords":{}}],["该节点到叶子节点的最长路径所包含的边数。节点的深度",{"_index":1540,"title":{},"content":{"95":{"position":[[427,26]]}},"keywords":{}}],["详细过程如下图所示",{"_index":308,"title":{},"content":{"25":{"position":[[299,10]]}},"keywords":{}}],["语法来访问数组元素",{"_index":2088,"title":{},"content":{"121":{"position":[[186,10]]}},"keywords":{}}],["调用",{"_index":706,"title":{},"content":{"48":{"position":[[34,2],[41,2]]}},"keywords":{}}],["质数判断",{"_index":1378,"title":{},"content":{"82":{"position":[[3847,5]]}},"keywords":{}}],["赋值为",{"_index":2205,"title":{},"content":{"123":{"position":[[2419,3],[6826,3]]}},"keywords":{}}],["起码大部分是平衡的，此时的时间复杂度也是接近",{"_index":1721,"title":{},"content":{"109":{"position":[[427,22]]}},"keywords":{}}],["越界",{"_index":581,"title":{},"content":{"43":{"position":[[20,2]]}},"keywords":{}}],["越界判断",{"_index":2223,"title":{},"content":{"123":{"position":[[3166,4],[4031,4],[4614,4],[7403,4],[7971,4],[8302,4]]},"125":{"position":[[1678,4],[2654,4],[4849,4],[5948,4]]}},"keywords":{}}],["跟单向链表不同，不用通过循环找到最后一个节点",{"_index":2323,"title":{},"content":{"125":{"position":[[1450,24],[4636,24]]}},"keywords":{}}],["路径",{"_index":886,"title":{},"content":{"60":{"position":[[411,2]]}},"keywords":{}}],["路径是顶点",{"_index":887,"title":{},"content":{"60":{"position":[[414,5]]}},"keywords":{}}],["转化为数字：3",{"_index":1044,"title":{},"content":{"72":{"position":[[138,7]]}},"keywords":{}}],["输出节点的顺序应为：3",{"_index":2036,"title":{},"content":{"114":{"position":[[106,11]]},"115":{"position":[[106,11]]}},"keywords":{}}],["边",{"_index":872,"title":{},"content":{"60":{"position":[[209,1]]}},"keywords":{}}],["边表示顶点和顶点之间的连线。比如地铁站中两个站点之间的直接连线",{"_index":873,"title":{},"content":{"60":{"position":[[211,32]]}},"keywords":{}}],["过程图解",{"_index":2035,"title":{},"content":{"114":{"position":[[99,5]]},"115":{"position":[[99,5]]},"123":{"position":[[1592,4]]}},"keywords":{}}],["返回一个包含集合中所有值的数组。还有其他的方法，用的不多，这里不做封装",{"_index":1436,"title":{},"content":{"86":{"position":[[147,36]]}},"keywords":{}}],["返回以字符串形式的栈内元素数据",{"_index":811,"title":{},"content":{"53":{"position":[[398,15]]}},"keywords":{}}],["返回元素在链表中的索引。如果链表中没有该元素就返回",{"_index":2129,"title":{},"content":{"123":{"position":[[417,25]]},"125":{"position":[[506,25]]}},"keywords":{}}],["返回反向遍历的节点的字符串形式",{"_index":2304,"title":{},"content":{"125":{"position":[[843,16]]}},"keywords":{}}],["返回哈希表包含的元素个数。resize(valu",{"_index":1217,"title":{},"content":{"80":{"position":[[134,26]]}},"keywords":{}}],["返回字典所包含元素的数量。与数组的",{"_index":361,"title":{},"content":{"32":{"position":[[159,17]]}},"keywords":{}}],["返回指定",{"_index":2232,"title":{},"content":{"123":{"position":[[3557,4],[7663,4]]}},"keywords":{}}],["返回栈里的元素个数。这个方法和数组的",{"_index":800,"title":{},"content":{"52":{"position":[[136,18]]}},"keywords":{}}],["返回栈顶的元素，不对栈做任何修改（该方法不会移除栈顶的元素，仅仅返回它）。isempti",{"_index":798,"title":{},"content":{"52":{"position":[[52,46]]}},"keywords":{}}],["返回树中最大的值/键。remove(key",{"_index":1792,"title":{},"content":{"111":{"position":[[1074,22]]}},"keywords":{}}],["返回树中最小的值/键。max",{"_index":1791,"title":{},"content":{"111":{"position":[[1059,14]]}},"keywords":{}}],["返回正向遍历节点字符串形式。backwordstr",{"_index":2303,"title":{},"content":{"125":{"position":[[812,30]]}},"keywords":{}}],["返回链表包含的元素个数，与数组的",{"_index":2136,"title":{},"content":{"123":{"position":[[597,16]]},"125":{"position":[[692,16]]}},"keywords":{}}],["返回队列中的第一个元素——最先被添加，也将是最先被移除的元素。队列不做任何变动（不移除元素，只返回元素信息与",{"_index":459,"title":{},"content":{"38":{"position":[[83,54]]}},"keywords":{}}],["返回队列包含的元素个数，与数组的",{"_index":466,"title":{},"content":{"38":{"position":[[207,16]]}},"keywords":{}}],["返回集合所包含元素的数量。与数组的",{"_index":1434,"title":{},"content":{"86":{"position":[[108,17]]}},"keywords":{}}],["还是用上面的图，我们将",{"_index":583,"title":{},"content":{"43":{"position":[[68,11]]}},"keywords":{}}],["还有层序遍历，使用较少",{"_index":2016,"title":{},"content":{"112":{"position":[[87,12]]}},"keywords":{}}],["这两个页面从",{"_index":739,"title":{},"content":{"49":{"position":[[222,6]]}},"keywords":{}}],["这个时候又空出一个位置了，老规矩，谁有能力谁上",{"_index":280,"title":{},"content":{"21":{"position":[[409,23]]}},"keywords":{}}],["这个时候已经完成了自底向上的堆化，没有元素可以填补空缺了，但是，我们可以看到数组中出现了“气泡”，这会导致存储空间的浪费。接下来我们试试自顶向下堆化",{"_index":282,"title":{},"content":{"21":{"position":[[469,75]]}},"keywords":{}}],["这个页面的时候，你点击回退按钮，我们依次把",{"_index":737,"title":{},"content":{"49":{"position":[[196,21]]}},"keywords":{}}],["这四个页面压入",{"_index":734,"title":{},"content":{"49":{"position":[[170,7]]}},"keywords":{}}],["这四个页面，我们依次把",{"_index":733,"title":{},"content":{"49":{"position":[[150,11]]}},"keywords":{}}],["这样一次性探测比较长的距离，避免了数据聚集带来的影响",{"_index":1144,"title":{},"content":{"76":{"position":[[949,28]]}},"keywords":{}}],["这样可以根据下标值获取到整个数组或链表，之后继续在数组或链表中查找就可以了。而且，产生冲突的元素一般不会太多",{"_index":1086,"title":{},"content":{"75":{"position":[[112,55]]}},"keywords":{}}],["这样就成为了一棵二叉树，由此我们可以得出结论：任何树都可以通过二叉树进行模拟。但是这样父节点不是变了吗？其实，父节点的设置只是为了方便指向子节点，在代码实现中谁是父节点并没有关系，只要能正确找到对应节点即可",{"_index":1625,"title":{},"content":{"101":{"position":[[37,104]]}},"keywords":{}}],["这样的单词），造成了数组空间的浪费",{"_index":1067,"title":{},"content":{"72":{"position":[[520,18]]}},"keywords":{}}],["这样第",{"_index":535,"title":{},"content":{"40":{"position":[[615,3]]}},"keywords":{}}],["这种情况十分复杂，首先依据以下二叉搜索树，讨论这样的问题",{"_index":1946,"title":{},"content":{"111":{"position":[[6078,29]]}},"keywords":{}}],["这种方法缺点在于我们无法确定某一结点的引用数",{"_index":1605,"title":{},"content":{"99":{"position":[[145,23]]}},"keywords":{}}],["这种方法虽然能实现质数的判断，但是效率不高",{"_index":1384,"title":{},"content":{"82":{"position":[[3928,22]]}},"keywords":{}}],["这种表示方法可以完整地记录每个节点的数据，比如",{"_index":1608,"title":{},"content":{"100":{"position":[[1,24]]}},"keywords":{}}],["这种表示法的优点在于每一个节点中引用的数量都是确定的",{"_index":1618,"title":{},"content":{"100":{"position":[[285,27]]}},"keywords":{}}],["这里所说的树的遍历不仅仅针对二叉搜索树，而是适用于所有的二叉树。由于树结构不是线性结构，所以遍历方式有多种选择，常见的三种二叉树遍历方式为",{"_index":2014,"title":{},"content":{"112":{"position":[[0,70]]}},"keywords":{}}],["进栈、入栈或压栈",{"_index":690,"title":{},"content":{"47":{"position":[[262,8]]}},"keywords":{}}],["进栈出栈，1",{"_index":775,"title":{},"content":{"50":{"position":[[296,6]]}},"keywords":{}}],["进栈出栈，2",{"_index":774,"title":{},"content":{"50":{"position":[[289,6]]}},"keywords":{}}],["进栈出栈，3",{"_index":763,"title":{},"content":{"50":{"position":[[215,6]]}},"keywords":{}}],["进栈出栈，5",{"_index":786,"title":{},"content":{"50":{"position":[[405,6]]}},"keywords":{}}],["进栈出栈，6",{"_index":764,"title":{},"content":{"50":{"position":[[222,6],[303,6]]}},"keywords":{}}],["进栈，1",{"_index":766,"title":{},"content":{"50":{"position":[[235,4]]}},"keywords":{}}],["进栈，2",{"_index":784,"title":{},"content":{"50":{"position":[[385,4]]}},"keywords":{}}],["进栈，3",{"_index":779,"title":{},"content":{"50":{"position":[[341,4]]}},"keywords":{}}],["进栈，4",{"_index":771,"title":{},"content":{"50":{"position":[[274,4]]}},"keywords":{}}],["进栈，5",{"_index":761,"title":{},"content":{"50":{"position":[[205,4]]}},"keywords":{}}],["进行取余操作，则余数的范围",{"_index":1083,"title":{},"content":{"75":{"position":[[20,13]]}},"keywords":{}}],["进行封装",{"_index":1419,"title":{},"content":{"84":{"position":[[58,5]]}},"keywords":{}}],["进行比较，由于",{"_index":1764,"title":{},"content":{"111":{"position":[[556,7]]}},"keywords":{}}],["进行越界判断，不能小于",{"_index":2196,"title":{},"content":{"123":{"position":[[2166,11],[6573,11]]}},"keywords":{}}],["适配配置",{"_index":152,"title":{"13":{"position":[[14,5]]},"14":{"position":[[16,5]]}},"content":{},"keywords":{}}],["选择质数作为哈希表容量",{"_index":1377,"title":{},"content":{"82":{"position":[[3834,12]]}},"keywords":{}}],["选项a",{"_index":972,"title":{},"content":{"69":{"position":[[2,3],[890,3]]}},"keywords":{}}],["选项b",{"_index":980,"title":{},"content":{"69":{"position":[[99,3],[966,3],[1042,3]]}},"keywords":{}}],["选项c",{"_index":984,"title":{},"content":{"69":{"position":[[198,3],[1009,3]]}},"keywords":{}}],["选项d",{"_index":989,"title":{},"content":{"69":{"position":[[316,3]]}},"keywords":{}}],["通常情况下当装填因子",{"_index":1369,"title":{},"content":{"82":{"position":[[3357,10]]}},"keywords":{}}],["通过",{"_index":1866,"title":{},"content":{"111":{"position":[[3223,2]]},"123":{"position":[[1622,2]]}},"keywords":{}}],["通过中序遍历方式遍历所有节点。postordertravers",{"_index":1789,"title":{},"content":{"111":{"position":[[1007,32]]}},"keywords":{}}],["通过以下案例了解哈希表",{"_index":1027,"title":{},"content":{"71":{"position":[[413,12]]}},"keywords":{}}],["通过使用键值来从字典中移除键值对应的数据值。has(key",{"_index":355,"title":{},"content":{"32":{"position":[[37,30]]}},"keywords":{}}],["通过先序遍历方式遍历所有节点。inordertravers",{"_index":1788,"title":{},"content":{"111":{"position":[[976,30]]}},"keywords":{}}],["通过后序遍历方式遍历所有节点。min",{"_index":1790,"title":{},"content":{"111":{"position":[[1040,18]]}},"keywords":{}}],["通过哈希函数获取它在",{"_index":1295,"title":{},"content":{"82":{"position":[[1254,10],[1731,10]]}},"keywords":{}}],["通过循环遍历，找到指定",{"_index":2257,"title":{},"content":{"123":{"position":[[4839,11],[8527,11]]}},"keywords":{}}],["通过递归实现",{"_index":1862,"title":{},"content":{"111":{"position":[[2992,6]]}},"keywords":{}}],["通过键值查找特定的数值并返回。clear",{"_index":359,"title":{},"content":{"32":{"position":[[113,22]]}},"keywords":{}}],["遍历",{"_index":1317,"title":{},"content":{"82":{"position":[[2040,2],[6577,2]]}},"keywords":{}}],["遍历完所有的，返回",{"_index":1510,"title":{},"content":{"92":{"position":[[93,9]]},"93":{"position":[[1583,9]]}},"keywords":{}}],["遍历所有的节点，拼接为字符串，直到节点为",{"_index":2182,"title":{},"content":{"123":{"position":[[1789,20],[9129,20]]},"125":{"position":[[3860,20],[4122,20],[7222,20],[7481,20]]}},"keywords":{}}],["遍历第一行即可）另外，a",{"_index":939,"title":{},"content":{"65":{"position":[[338,12]]}},"keywords":{}}],["那么他的位置由谁来接替呢，当然是他的直接下属了，谁能力强就让谁上呗",{"_index":278,"title":{},"content":{"21":{"position":[[320,33]]}},"keywords":{}}],["那么矩阵中将存在大量的",{"_index":950,"title":{},"content":{"65":{"position":[[527,11]]}},"keywords":{}}],["邻接矩阵存储",{"_index":921,"title":{"64":{"position":[[0,7]]}},"content":{},"keywords":{}}],["邻接矩阵存储的方式优点是简单直接（直接使用一个二维数组即可），并且，在获取两个定点之间的关系的时候也非常高效（直接获取指定位置的数组元素的值即可）。但是，这种存储方式的缺点也比较明显，那就是比较浪费空间",{"_index":927,"title":{},"content":{"64":{"position":[[200,102]]}},"keywords":{}}],["邻接矩阵将图用二维矩阵存储，是一种较为直观的表示方式",{"_index":922,"title":{},"content":{"64":{"position":[[0,27]]}},"keywords":{}}],["邻接矩阵的问题",{"_index":943,"title":{},"content":{"65":{"position":[[385,7]]}},"keywords":{}}],["邻接矩阵还有一个比较严重的问题就是如果图是一个稀疏图",{"_index":949,"title":{},"content":{"65":{"position":[[500,26]]}},"keywords":{}}],["邻接表。如下图所示",{"_index":931,"title":{},"content":{"65":{"position":[[112,10]]}},"keywords":{}}],["邻接表存储",{"_index":928,"title":{"65":{"position":[[0,6]]}},"content":{},"keywords":{}}],["邻接链表使用一个链表来存储某个顶点的所有后继相邻顶点。对于图中每个顶点vi，把所有邻接于vi的顶点vj链成一个单链表，这个单链表称为顶点vi的",{"_index":930,"title":{},"content":{"65":{"position":[[40,71]]}},"keywords":{}}],["都不允许插入数据，并且在插入的过程中需要经历多次这种情况。二次探测法可以解决该问题",{"_index":1132,"title":{},"content":{"76":{"position":[[709,42]]}},"keywords":{}}],["都会持续往后移动，当",{"_index":566,"title":{},"content":{"42":{"position":[[159,10]]}},"keywords":{}}],["都是叶子节点。节点的高度",{"_index":1539,"title":{},"content":{"95":{"position":[[414,12]]}},"keywords":{}}],["都要进行越界判断",{"_index":2241,"title":{},"content":{"123":{"position":[[4008,8],[7948,8]]}},"keywords":{}}],["采用的是链地址法，哈希化采用的是公式为：index",{"_index":1202,"title":{},"content":{"79":{"position":[[130,25]]}},"keywords":{}}],["里数据，return",{"_index":1283,"title":{},"content":{"82":{"position":[[971,10],[5915,10]]}},"keywords":{}}],["里面的",{"_index":1265,"title":{},"content":{"82":{"position":[[550,3],[5494,3]]}},"keywords":{}}],["里面的每一个元素入队",{"_index":518,"title":{},"content":{"40":{"position":[[220,10]]}},"keywords":{}}],["里面节点的情况",{"_index":2349,"title":{},"content":{"125":{"position":[[3232,7],[6429,7]]}},"keywords":{}}],["重写",{"_index":632,"title":{},"content":{"44":{"position":[[388,2],[1334,2]]},"125":{"position":[[1275,2],[1624,2],[2605,2],[3560,2],[4461,2],[4795,2],[5899,2],[6742,2]]}},"keywords":{}}],["重新调整哈希表大小，扩容或压缩",{"_index":1358,"title":{},"content":{"82":{"position":[[3042,15],[7020,15]]}},"keywords":{}}],["针对上面邻接矩阵比较浪费内存空间的问题，诞生了图的另外一种存储方法—邻接表",{"_index":929,"title":{},"content":{"65":{"position":[[0,37]]}},"keywords":{}}],["链地址法的性能",{"_index":1176,"title":{},"content":{"76":{"position":[[1885,7]]}},"keywords":{}}],["链地址法（拉链法",{"_index":1081,"title":{"75":{"position":[[0,10]]}},"content":{},"keywords":{}}],["链式栈",{"_index":793,"title":{},"content":{"51":{"position":[[39,3]]}},"keywords":{}}],["链式队列",{"_index":430,"title":{},"content":{"35":{"position":[[107,4]]}},"keywords":{}}],["链式队列（链表实现",{"_index":559,"title":{},"content":{"42":{"position":[[48,11]]}},"keywords":{}}],["链表",{"_index":1555,"title":{"119":{"position":[[0,2]]}},"content":{"96":{"position":[[79,3]]},"121":{"position":[[332,2]]}},"keywords":{}}],["链表不必在创建时就确定大小，并且大小可以无限延伸下去",{"_index":2099,"title":{},"content":{"121":{"position":[[472,27]]}},"keywords":{}}],["链表中的最后一个节点指向",{"_index":2120,"title":{},"content":{"123":{"position":[[232,12]]}},"keywords":{}}],["链表优点",{"_index":2097,"title":{},"content":{"121":{"position":[[429,5]]}},"keywords":{}}],["链表内只有一个节点的情况",{"_index":2342,"title":{},"content":{"125":{"position":[[2839,12],[6129,12]]}},"keywords":{}}],["链表内有多个节点的情况",{"_index":2343,"title":{},"content":{"125":{"position":[[2900,11],[6190,11]]}},"keywords":{}}],["链表和数组一样，可以用于存储一系列的元素，但是链表和数组的实现机制完全不同",{"_index":2073,"title":{},"content":{"120":{"position":[[0,38]]}},"keywords":{}}],["链表和数组的对比",{"_index":2083,"title":{"121":{"position":[[0,9]]}},"content":{},"keywords":{}}],["链表在插入和删除数据时，时间复杂度可以达到",{"_index":2100,"title":{},"content":{"121":{"position":[[500,21]]}},"keywords":{}}],["链表操作的时间复杂度分析",{"_index":2079,"title":{},"content":{"120":{"position":[[301,12]]}},"keywords":{}}],["链表数据从前往后以字符串形式返回",{"_index":2360,"title":{},"content":{"125":{"position":[[3774,16],[7126,16]]}},"keywords":{}}],["链表数据从后往前以字符串形式返回",{"_index":2363,"title":{},"content":{"125":{"position":[[4037,16],[7386,16]]}},"keywords":{}}],["链表数据以字符串形式返回",{"_index":2275,"title":{},"content":{"123":{"position":[[9044,12]]}},"keywords":{}}],["链表的分类",{"_index":2106,"title":{"122":{"position":[[0,6]]}},"content":{},"keywords":{}}],["链表的常见操作",{"_index":2273,"title":{},"content":{"123":{"position":[[5939,7]]},"125":{"position":[[4399,7]]}},"keywords":{}}],["链表的应用场景",{"_index":2393,"title":{"127":{"position":[[0,8]]}},"content":{},"keywords":{}}],["链表的插入和删除操作的复杂度为",{"_index":2076,"title":{},"content":{"120":{"position":[[98,15]]}},"keywords":{}}],["链表的数据结构",{"_index":2118,"title":{},"content":{"123":{"position":[[205,7]]}},"keywords":{}}],["链表的每个元素由一个存储元素本身的节点和一个指向下一个元素的引用(有些语言称为指针)组成",{"_index":2096,"title":{},"content":{"121":{"position":[[383,45]]}},"keywords":{}}],["链表的火车结构",{"_index":2117,"title":{},"content":{"123":{"position":[[197,7]]}},"keywords":{}}],["链表缺点",{"_index":2102,"title":{},"content":{"121":{"position":[[538,5]]}},"keywords":{}}],["链表长度为",{"_index":2160,"title":{},"content":{"123":{"position":[[1092,5],[6087,5]]}},"keywords":{}}],["链表长度大于",{"_index":2164,"title":{},"content":{"123":{"position":[[1148,6],[6143,6]]}},"keywords":{}}],["链表（linkedlist",{"_index":2074,"title":{},"content":{"120":{"position":[[39,14]]}},"keywords":{}}],["问题。解决办法就是：从头开始，这样也就会形成头尾相接的循环，这也就是循环队列名字的由来",{"_index":582,"title":{},"content":{"43":{"position":[[23,44]]}},"keywords":{}}],["队列",{"_index":421,"title":{"34":{"position":[[0,2]]}},"content":{},"keywords":{}}],["队列中只剩下",{"_index":521,"title":{},"content":{"40":{"position":[[298,6]]}},"keywords":{}}],["队列满的时候，我们保证数组还有一个空闲的位置，rear",{"_index":597,"title":{},"content":{"43":{"position":[[302,28]]}},"keywords":{}}],["队列的分类",{"_index":554,"title":{"41":{"position":[[0,6]]}},"content":{},"keywords":{}}],["队列的实现",{"_index":454,"title":{"37":{"position":[[0,6]]}},"content":{},"keywords":{}}],["队列的常用方法",{"_index":455,"title":{"38":{"position":[[0,8]]}},"content":{},"keywords":{}}],["队列的操作方式和堆栈类似，唯一的区别在于队列只允许新数据在后端进行添加",{"_index":437,"title":{},"content":{"35":{"position":[[173,36]]}},"keywords":{}}],["队列的访问、插入和删除的时间复杂度分析",{"_index":443,"title":{},"content":{"35":{"position":[[306,20]]}},"keywords":{}}],["队列（queue）是一种运算受限的线性表，是",{"_index":423,"title":{},"content":{"35":{"position":[[0,22]]}},"keywords":{}}],["阻塞队列",{"_index":603,"title":{},"content":{"43":{"position":[[439,5]]}},"keywords":{}}],["阻塞队列可以看成在队列基础上加了阻塞操作的队列。当队列为空的时候，出队操作阻塞，当队列满的时候，入队操作阻塞。使用阻塞队列我们可以很容易实现“生产者",{"_index":604,"title":{},"content":{"43":{"position":[[445,74]]}},"keywords":{}}],["除了二叉树",{"_index":1687,"title":{},"content":{"108":{"position":[[29,5]]}},"keywords":{}}],["除了假溢出问题之外，如下图所示，当添加元素",{"_index":569,"title":{},"content":{"42":{"position":[[223,22]]}},"keywords":{}}],["除二取余法",{"_index":829,"title":{},"content":{"54":{"position":[[143,5]]}},"keywords":{}}],["除数除以二，向下取整",{"_index":833,"title":{},"content":{"54":{"position":[[213,10]]}},"keywords":{}}],["集合中存在",{"_index":1494,"title":{},"content":{"90":{"position":[[136,5]]},"93":{"position":[[1113,5]]}},"keywords":{}}],["集合中存在，不存在的即为差集",{"_index":1502,"title":{},"content":{"91":{"position":[[124,14]]},"93":{"position":[[1360,14]]}},"keywords":{}}],["集合中存在，有不存在的返回",{"_index":1509,"title":{},"content":{"92":{"position":[[70,13]]},"93":{"position":[[1560,13]]}},"keywords":{}}],["集合的封装",{"_index":1423,"title":{"85":{"position":[[0,6]]}},"content":{},"keywords":{}}],["集合的常见方法",{"_index":1427,"title":{"86":{"position":[[0,8]]}},"content":{},"keywords":{}}],["集合的所有",{"_index":1484,"title":{},"content":{"89":{"position":[[195,5]]},"93":{"position":[[852,5]]}},"keywords":{}}],["集合结构的封装",{"_index":1438,"title":{},"content":{"87":{"position":[[3,7]]},"93":{"position":[[3,7]]}},"keywords":{}}],["集合通常是由一组无序的、不能重复的元素构成。数学中常指的集合中的元素是可以重复的，但是计算机中集合的元素不能重复。集合是特殊的数组",{"_index":1421,"title":{},"content":{"84":{"position":[[67,66]]}},"keywords":{}}],["集合间的操作",{"_index":1470,"title":{"88":{"position":[[0,7]]}},"content":{"93":{"position":[[641,6]]}},"keywords":{}}],["集合（set",{"_index":1416,"title":{"83":{"position":[[0,7]]}},"content":{},"keywords":{}}],["需要",{"_index":1599,"title":{},"content":{"99":{"position":[[74,2]]}},"keywords":{}}],["霍纳法则：在中国霍纳法则也叫做秦久韶算法，具体算法为",{"_index":1183,"title":{},"content":{"78":{"position":[[0,27]]}},"keywords":{}}],["非完全二叉树：非完全二叉树需要转换成完全二叉树才能按照上面的方案存储，这样会浪费很大的存储空间",{"_index":2066,"title":{},"content":{"117":{"position":[[148,48]]}},"keywords":{}}],["非平衡树",{"_index":1714,"title":{},"content":{"109":{"position":[[238,4]]}},"keywords":{}}],["面经",{"_index":845,"title":{},"content":{"57":{"position":[[12,2]]}},"keywords":{}}],["页面从",{"_index":744,"title":{},"content":{"49":{"position":[[279,3]]}},"keywords":{}}],["顶层节点或者说没有父节点的节点。上图中",{"_index":1525,"title":{},"content":{"95":{"position":[[182,20]]}},"keywords":{}}],["顶点",{"_index":937,"title":{},"content":{"65":{"position":[[330,3]]}},"keywords":{}}],["顶点刚才我们已经介绍过了，表示图中的一个结点。比如地铁站中某个站/多个村庄中的某个村庄/互联网中的某台主机/人际关系中的人",{"_index":871,"title":{},"content":{"60":{"position":[[146,62]]}},"keywords":{}}],["顶点可以表示街道的十字路口，边可以表示街道.。加权的边可以表示限速或者车道的数量或者街道的距离。建模人员可以用这个系统来判定最佳路线以及最可能堵车的街道",{"_index":917,"title":{},"content":{"62":{"position":[[8,77]]}},"keywords":{}}],["顶点和其他两个顶点相连，0",{"_index":882,"title":{},"content":{"60":{"position":[[363,13]]}},"keywords":{}}],["顶点和其他四个顶点相连，1",{"_index":885,"title":{},"content":{"60":{"position":[[389,13]]}},"keywords":{}}],["顶点的度是",{"_index":883,"title":{},"content":{"60":{"position":[[377,5],[403,5]]}},"keywords":{}}],["顶端插入和删除元素",{"_index":701,"title":{},"content":{"47":{"position":[[417,9]]}},"keywords":{}}],["顺序栈",{"_index":791,"title":{},"content":{"51":{"position":[[24,3]]}},"keywords":{}}],["顺序队列",{"_index":428,"title":{},"content":{"35":{"position":[[90,4]]}},"keywords":{}}],["顺序队列中，我们说",{"_index":587,"title":{},"content":{"43":{"position":[[139,9]]}},"keywords":{}}],["顺序队列存在“假溢出”的问题也就是明明有位置却不能添加的情况",{"_index":560,"title":{},"content":{"42":{"position":[[60,31]]}},"keywords":{}}],["顺序队列（数组实现",{"_index":558,"title":{},"content":{"42":{"position":[[35,10]]}},"keywords":{}}],["题目所说的按顺序进栈指的不是一次性全部进栈，而是有进有出，进栈顺序为",{"_index":758,"title":{},"content":{"50":{"position":[[115,34]]}},"keywords":{}}],["题目：有",{"_index":748,"title":{},"content":{"50":{"position":[[0,4]]}},"keywords":{}}],["首先",{"_index":1107,"title":{},"content":{"76":{"position":[[235,2]]}},"keywords":{}}],["首先使用霍纳法则计算",{"_index":1220,"title":{},"content":{"81":{"position":[[0,10]]}},"keywords":{}}],["首先创建哈希表类",{"_index":1238,"title":{},"content":{"82":{"position":[[23,8]]}},"keywords":{}}],["首先删除堆顶元素，使得数组中下标为1的位置空出",{"_index":277,"title":{},"content":{"21":{"position":[[294,24]]}},"keywords":{}}],["首先定义变量",{"_index":1871,"title":{},"content":{"111":{"position":[[3477,6]]}},"keywords":{}}],["首先根据传入的",{"_index":1807,"title":{},"content":{"111":{"position":[[1366,7]]}},"keywords":{}}],["首先要了解哪些是非叶节点，最后一个节点的父结点及它之前的元素，都是非叶节点。也就是说，如果节点个数为n，那么我们需要对n/2到1的节点进行自顶向下（沉底）堆化",{"_index":294,"title":{},"content":{"24":{"position":[[60,80]]}},"keywords":{}}],["首先让",{"_index":2176,"title":{},"content":{"123":{"position":[[1597,3]]}},"keywords":{}}],["首先，定义一个变量，比如",{"_index":1343,"title":{},"content":{"82":{"position":[[2783,12]]}},"keywords":{}}],["首先，根据",{"_index":1253,"title":{},"content":{"82":{"position":[[318,5],[1244,5],[1721,5]]}},"keywords":{}}],["首先，遍历其左子树；然后，遍历其右子树；最后，遍历根（父）节点",{"_index":2048,"title":{},"content":{"115":{"position":[[30,32]]}},"keywords":{}}],["首先，遍历其左子树；然后，遍历根（父）节点；最后，遍历其右子树",{"_index":2032,"title":{},"content":{"114":{"position":[[30,32]]}},"keywords":{}}]],"pipeline":["stemmer-zh","stemmer"]}